var show_axes=true;var show_pathpoints=false;var to_update=[];var bz_material=new THREE.MeshBasicMaterial({color:13975119,opacity:.5,transparent:true});var edge_material=new THREE.MeshBasicMaterial({color:3355443,opacity:1,transparent:false});var line_material=new THREE.MeshBasicMaterial({color:285405,opacity:1,transparent:false});var point_material=new THREE.MeshBasicMaterial({color:3311805,opacity:1,transparent:false});var pointpath_material=new THREE.MeshBasicMaterial({color:8925746,opacity:1,transparent:false});var scene=null;var camera=null;var renderer=null;var current_canvas_id=null;var load_BZ_ajax=function(url,canvasID,infoID){document.getElementById(infoID).innerHTML="Loading...";$.getJSON(newpath_to_load,function(jsondata){load_BZ(canvasID,infoID,jsondata)}).fail(function(jqxhr,textStatus,error){var err=textStatus+", "+error;console.log("Request Failed: "+err);document.getElementById(infoID).innerHTML="Request Failed: "+err})};var prettify_label=function(label){label=label.replace(/_(.)/gi,function(match,p1,offset,string){return"<sub>"+p1+"</sub>"});label=label.replace(/GAMMA/gi,"&Gamma;");label=label.replace(/DELTA/gi,"&Delta;");label=label.replace(/SIGMA/gi,"&Sigma;");label=label.replace(/LAMBDA/gi,"&Lambda;");label=label.replace(/\-/gi,"&mdash;");return label};var resize_renderer=function(){if(current_canvas_id){var canvas3d=document.getElementById(current_canvas_id);var devicePixelRatio=window.devicePixelRatio||1;canvas3d_width=canvas3d.offsetWidth;canvas3d_height=canvas3d.offsetHeight;if(renderer){camera.aspect=canvas3d_width/canvas3d_height;camera.updateProjectionMatrix();renderer.setSize(canvas3d_width*devicePixelRatio,canvas3d_height*devicePixelRatio);renderer.domElement.style.width=canvas3d_width+"px";renderer.domElement.style.height=canvas3d_height+"px";renderer.domElement.width=canvas3d_width*devicePixelRatio;renderer.domElement.height=canvas3d_height*devicePixelRatio}render()}};var load_BZ=function(canvasID,infoID,jsondata){current_canvas_id=canvasID;var canvas3d=document.getElementById(canvasID);var devicePixelRatio=window.devicePixelRatio||1;document.getElementById(infoID).innerHTML="";while(canvas3d.firstChild){canvas3d.removeChild(canvas3d.firstChild)}to_update=[];scene=new THREE.Scene;canvas3d_width=canvas3d.offsetWidth;canvas3d_height=canvas3d.offsetHeight;camera=new THREE.PerspectiveCamera(45,canvas3d_width/canvas3d_height,.01,1e3);camera.position.z=3;renderer=new THREE.WebGLRenderer({alpha:true});renderer.setClearColor(16777215,0);renderer.setSize(canvas3d_width*devicePixelRatio,canvas3d_height*devicePixelRatio);renderer.domElement.style.width=canvas3d_width+"px";renderer.domElement.style.height=canvas3d_height+"px";renderer.domElement.width=canvas3d_width*devicePixelRatio;renderer.domElement.height=canvas3d_height*devicePixelRatio;canvas3d.appendChild(renderer.domElement);controls=new THREE.OrbitControls(camera,renderer.domElement);controls.addEventListener("change",render);controls.enableDamping=true;controls.dampingFactor=.25;controls.enableZoom=true;special_points=jsondata["kpoints"];b1=jsondata["b1"];b2=jsondata["b2"];b3=jsondata["b3"];max_b_length=Math.sqrt(Math.max(Math.pow(b1[0],2)+Math.pow(b1[1],2)+Math.pow(b1[2],2),Math.pow(b2[0],2)+Math.pow(b2[1],2)+Math.pow(b2[2],2),Math.pow(b3[0],2)+Math.pow(b3[1],2)+Math.pow(b3[2],2)));var axeslength=max_b_length*1.5;camera.position.z=max_b_length*3;data=jsondata["faces_data"];for(var label in special_points){pos=special_points[label];radius=.02*max_b_length;var sphere_geometry=new THREE.SphereGeometry(radius,16,16);var sphere=new THREE.Mesh(sphere_geometry,point_material);sphere.translateX(pos[0]);sphere.translateY(pos[1]);sphere.translateZ(pos[2]);scene.add(sphere);var textdiv=document.createElement("div");textdiv.style.position="absolute";textdiv.style.fontFamily="'Helvetica Neue', Helvetica, Arial, sans-serif";textdiv.style.width=100;textdiv.style.height=100;textdiv.style.backgroundColor="transparent";label=prettify_label(label);textdiv.innerHTML=label;textdiv.style.pointerEvents="none";textdiv.style.userSelect="none";textdiv.style.userSelect="none";textdiv.style.webkitUserSelect="none";textdiv.style.MozUserSelect="none";textdiv.setAttribute("unselectable","on");textdiv.style.top=-100+"px";textdiv.style.left=-100+"px";canvas3d.appendChild(textdiv);to_update.push([new THREE.Vector3(pos[0],pos[1],pos[2]),textdiv])}if(show_axes){[[new THREE.Vector3(1,0,0),'<span style="font-style: italic">x</span>'],[new THREE.Vector3(0,1,0),'<span style="font-style: italic">y</span>'],[new THREE.Vector3(0,0,1),'<span style="font-style: italic">z</span>']].forEach(function(data){dir=data[0];label=data[1];var origin=new THREE.Vector3(0,0,0);var hex=5592405;var arrow=new THREE.ArrowHelper(dir,origin,axeslength,hex,headLength=axeslength/10,headwidth=axeslength/20);scene.add(arrow);var textdiv=document.createElement("div");textdiv.style.position="absolute";textdiv.style.fontFamily="'Helvetica Neue', Helvetica, Arial, sans-serif";textdiv.style.color="#555555";textdiv.style.width=100;textdiv.style.height=100;textdiv.innerHTML=label;textdiv.style.top=-100+"px";textdiv.style.left=-100+"px";textdiv.style.userSelect="none";textdiv.style.userSelect="none";textdiv.style.webkitUserSelect="none";textdiv.style.MozUserSelect="none";textdiv.setAttribute("unselectable","on");textdiv.style.pointerEvents="none";canvas3d.appendChild(textdiv);pos=dir.clone();pos.sub(origin);pos.multiplyScalar(axeslength);to_update.push([pos,textdiv])})}[[b1,'<span style="font-weight: bold">b</span><sub>1</sub>'],[b2,'<span style="font-weight: bold">b</span><sub>2</sub>'],[b3,'<span style="font-weight: bold">b</span><sub>3</sub>']].forEach(function(data){b=data[0];label=data[1];b_length=Math.sqrt(Math.pow(b[0],2)+Math.pow(b[1],2)+Math.pow(b[2],2));dir=new THREE.Vector3(b[0]/b_length,b[1]/b_length,b[2]/b_length);var origin=new THREE.Vector3(0,0,0);var hex=0;var arrow=new THREE.ArrowHelper(dir,origin,length=b_length,hex=hex,headLength=b_length/10,headwidth=b_length/20);scene.add(arrow);var textdiv=document.createElement("div");textdiv.style.position="absolute";textdiv.style.fontFamily="'Helvetica Neue', Helvetica, Arial, sans-serif";textdiv.style.width=100;textdiv.style.height=100;textdiv.innerHTML=label;textdiv.style.top=-100+"px";textdiv.style.left=-100+"px";textdiv.style.userSelect="none";textdiv.style.userSelect="none";textdiv.style.webkitUserSelect="none";textdiv.style.MozUserSelect="none";textdiv.setAttribute("unselectable","on");textdiv.style.pointerEvents="none";canvas3d.appendChild(textdiv);pos=dir.clone();pos.sub(origin);pos.multiplyScalar(b_length);to_update.push([pos,textdiv])});var brillouinzone=new THREE.Geometry;data["triangles_vertices"].forEach(function(vertex){brillouinzone.vertices.push(new THREE.Vector3(vertex[0],vertex[1],vertex[2]))});data["triangles"].forEach(function(triangle){brillouinzone.faces.push(new THREE.Face3(triangle[0],triangle[1],triangle[2]))});var bz_mesh=new THREE.Mesh(brillouinzone,bz_material);edges=new THREE.EdgesHelper(bz_mesh,65280);edges.material=edge_material;edges.material.linewidth=1;scene.add(bz_mesh);scene.add(edges);path=jsondata["path"];path.forEach(function(linespec){label1=linespec[0];label2=linespec[1];p1=special_points[label1];p2=special_points[label2];var geometry=new THREE.Geometry;geometry.vertices.push(new THREE.Vector3(p1[0],p1[1],p1[2]));geometry.vertices.push(new THREE.Vector3(p2[0],p2[1],p2[2]));var line=new THREE.Line(geometry,line_material);line.material.linewidth=4;scene.add(line)});if(show_pathpoints){kpoints_abs=jsondata["explicit_kpoints_abs"];for(var idx in kpoints_abs){pos=kpoints_abs[idx];radius=.005*max_b_length;var sphere_geometry=new THREE.SphereGeometry(radius,16,16);var sphere=new THREE.Mesh(sphere_geometry,pointpath_material);sphere.translateX(pos[0]);sphere.translateY(pos[1]);sphere.translateZ(pos[2]);scene.add(sphere)}}render()};function toScreenPosition(vector3D,camera){var devicePixelRatio=window.devicePixelRatio||1;var widthHalf=.5*renderer.context.canvas.width/devicePixelRatio;var heightHalf=.5*renderer.context.canvas.height/devicePixelRatio;vector2D=vector3D.clone().project(camera);vector2D.x=vector2D.x*widthHalf+widthHalf;vector2D.y=-(vector2D.y*heightHalf)+heightHalf;return{left:vector2D.x,top:vector2D.y}}function render(){renderer.render(scene,camera);to_update.forEach(function(data){pos=data[0];text=data[1];pos2d=toScreenPosition(pos,camera);text.style.top=pos2d.top+"px";text.style.left=pos2d.left+"px"})}
