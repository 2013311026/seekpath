// File:src/Three.js
/**
 * @author mrdoob / http://mrdoob.com/
 */var THREE={REVISION:"79"};typeof define=="function"&&define.amd?define("three",THREE):"undefined"!=typeof exports&&"undefined"!=typeof module&&(module.exports=THREE),Number.EPSILON===undefined&&(Number.EPSILON=Math.pow(2,-52)),Math.sign===undefined&&(Math.sign=function(e){return e<0?-1:e>0?1:+e}),Function.prototype.name===undefined&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),Object.assign===undefined&&function(){Object.assign=function(e){"use strict";if(e===undefined||e===null)throw new TypeError("Cannot convert undefined or null to object");var t=Object(e);for(var n=1;n<arguments.length;n++){var r=arguments[n];if(r!==undefined&&r!==null)for(var i in r)Object.prototype.hasOwnProperty.call(r,i)&&(t[i]=r[i])}return t}}(),Object.assign(THREE,{MOUSE:{LEFT:0,MIDDLE:1,RIGHT:2},CullFaceNone:0,CullFaceBack:1,CullFaceFront:2,CullFaceFrontBack:3,FrontFaceDirectionCW:0,FrontFaceDirectionCCW:1,BasicShadowMap:0,PCFShadowMap:1,PCFSoftShadowMap:2,FrontSide:0,BackSide:1,DoubleSide:2,FlatShading:1,SmoothShading:2,NoColors:0,FaceColors:1,VertexColors:2,NoBlending:0,NormalBlending:1,AdditiveBlending:2,SubtractiveBlending:3,MultiplyBlending:4,CustomBlending:5,AddEquation:100,SubtractEquation:101,ReverseSubtractEquation:102,MinEquation:103,MaxEquation:104,ZeroFactor:200,OneFactor:201,SrcColorFactor:202,OneMinusSrcColorFactor:203,SrcAlphaFactor:204,OneMinusSrcAlphaFactor:205,DstAlphaFactor:206,OneMinusDstAlphaFactor:207,DstColorFactor:208,OneMinusDstColorFactor:209,SrcAlphaSaturateFactor:210,NeverDepth:0,AlwaysDepth:1,LessDepth:2,LessEqualDepth:3,EqualDepth:4,GreaterEqualDepth:5,GreaterDepth:6,NotEqualDepth:7,MultiplyOperation:0,MixOperation:1,AddOperation:2,NoToneMapping:0,LinearToneMapping:1,ReinhardToneMapping:2,Uncharted2ToneMapping:3,CineonToneMapping:4,UVMapping:300,CubeReflectionMapping:301,CubeRefractionMapping:302,EquirectangularReflectionMapping:303,EquirectangularRefractionMapping:304,SphericalReflectionMapping:305,CubeUVReflectionMapping:306,CubeUVRefractionMapping:307,RepeatWrapping:1e3,ClampToEdgeWrapping:1001,MirroredRepeatWrapping:1002,NearestFilter:1003,NearestMipMapNearestFilter:1004,NearestMipMapLinearFilter:1005,LinearFilter:1006,LinearMipMapNearestFilter:1007,LinearMipMapLinearFilter:1008,UnsignedByteType:1009,ByteType:1010,ShortType:1011,UnsignedShortType:1012,IntType:1013,UnsignedIntType:1014,FloatType:1015,HalfFloatType:1025,UnsignedShort4444Type:1016,UnsignedShort5551Type:1017,UnsignedShort565Type:1018,AlphaFormat:1019,RGBFormat:1020,RGBAFormat:1021,LuminanceFormat:1022,LuminanceAlphaFormat:1023,RGBEFormat:THREE.RGBAFormat,DepthFormat:1026,RGB_S3TC_DXT1_Format:2001,RGBA_S3TC_DXT1_Format:2002,RGBA_S3TC_DXT3_Format:2003,RGBA_S3TC_DXT5_Format:2004,RGB_PVRTC_4BPPV1_Format:2100,RGB_PVRTC_2BPPV1_Format:2101,RGBA_PVRTC_4BPPV1_Format:2102,RGBA_PVRTC_2BPPV1_Format:2103,RGB_ETC1_Format:2151,LoopOnce:2200,LoopRepeat:2201,LoopPingPong:2202,InterpolateDiscrete:2300,InterpolateLinear:2301,InterpolateSmooth:2302,ZeroCurvatureEnding:2400,ZeroSlopeEnding:2401,WrapAroundEnding:2402,TrianglesDrawMode:0,TriangleStripDrawMode:1,TriangleFanDrawMode:2,LinearEncoding:3e3,sRGBEncoding:3001,GammaEncoding:3007,RGBEEncoding:3002,LogLuvEncoding:3003,RGBM7Encoding:3004,RGBM16Encoding:3005,RGBDEncoding:3006,BasicDepthPacking:3200,RGBADepthPacking:3201}),THREE.Color=function(e,t,n){return t===undefined&&n===undefined?this.set(e):this.setRGB(e,t,n)},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){return e instanceof THREE.Color?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this},setScalar:function(e){this.r=e,this.g=e,this.b=e},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<.5?t:n<2/3?e+(t-e)*6*(2/3-n):e}return function(n,r,i){n=THREE.Math.euclideanModulo(n,1),r=THREE.Math.clamp(r,0,1),i=THREE.Math.clamp(i,0,1);if(r===0)this.r=this.g=this.b=i;else{var s=i<=.5?i*(1+r):i+r-i*r,o=2*i-s;this.r=e(o,s,n+1/3),this.g=e(o,s,n),this.b=e(o,s,n-1/3)}return this}}(),setStyle:function(e){function t(t){if(t===undefined)return;parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,i=n[1],s=n[2];switch(i){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(s)){var o=parseFloat(r[1])/360,u=parseInt(r[2],10)/100,a=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(o,u,a)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var f=n[1],l=f.length;if(l===3)return this.r=parseInt(f.charAt(0)+f.charAt(0),16)/255,this.g=parseInt(f.charAt(1)+f.charAt(1),16)/255,this.b=parseInt(f.charAt(2)+f.charAt(2),16)/255,this;if(l===6)return this.r=parseInt(f.charAt(0)+f.charAt(1),16)/255,this.g=parseInt(f.charAt(2)+f.charAt(3),16)/255,this.b=parseInt(f.charAt(4)+f.charAt(5),16)/255,this}if(e&&e.length>0){var f=THREE.ColorKeywords[e];f!==undefined?this.setHex(f):console.warn("THREE.Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return t===undefined&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){t===undefined&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0},n=this.r,r=this.g,i=this.b,s=Math.max(n,r,i),o=Math.min(n,r,i),u,a,f=(o+s)/2;if(o===s)u=0,a=0;else{var l=s-o;a=f<=.5?l/(s+o):l/(2-s-o);switch(s){case n:u=(r-i)/l+(r<i?6:0);break;case r:u=(i-n)/l+2;break;case i:u=(n-r)/l+4}u/=6}return t.h=u,t.s=a,t.l=f,t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=n,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return t===undefined&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=r!==undefined?r:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof THREE.Euler==0)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),i=Math.cos(e._z/2),s=Math.sin(e._x/2),o=Math.sin(e._y/2),u=Math.sin(e._z/2),a=e.order;return a==="XYZ"?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):a==="YXZ"?(this._x=s*r*i+n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):a==="ZXY"?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i-s*o*u):a==="ZYX"?(this._x=s*r*i-n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i+s*o*u):a==="YZX"?(this._x=s*r*i+n*o*u,this._y=n*o*i+s*r*u,this._z=n*r*u-s*o*i,this._w=n*r*i-s*o*u):a==="XZY"&&(this._x=s*r*i-n*o*u,this._y=n*o*i-s*r*u,this._z=n*r*u+s*o*i,this._w=n*r*i+s*o*u),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],r=t[4],i=t[8],s=t[1],o=t[5],u=t[9],a=t[2],f=t[6],l=t[10],c=n+o+l,h;return c>0?(h=.5/Math.sqrt(c+1),this._w=.25/h,this._x=(f-u)*h,this._y=(i-a)*h,this._z=(s-r)*h):n>o&&n>l?(h=2*Math.sqrt(1+n-o-l),this._w=(f-u)/h,this._x=.25*h,this._y=(r+s)/h,this._z=(i+a)/h):o>l?(h=2*Math.sqrt(1+o-n-l),this._w=(i-a)/h,this._x=(r+s)/h,this._y=.25*h,this._z=(u+f)/h):(h=2*Math.sqrt(1+l-n-o),this._w=(s-r)/h,this._x=(i+a)/h,this._y=(u+f)/h,this._z=.25*h),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t,n=1e-6;return function(s,o){return e===undefined&&(e=new THREE.Vector3),t=s.dot(o)+1,t<n?(t=0,Math.abs(s.x)>Math.abs(s.z)?e.set(-s.y,s.x,0):e.set(0,-s.z,s.y)):e.crossVectors(s,o),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return t!==undefined?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,s=e._w,o=t._x,u=t._y,a=t._z,f=t._w;return this._x=n*f+s*o+r*a-i*u,this._y=r*f+s*u+i*o-n*a,this._z=i*f+s*a+n*u-r*o,this._w=s*f-n*o-r*u-i*a,this.onChangeCallback(),this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var n=this._x,r=this._y,i=this._z,s=this._w,o=s*e._w+n*e._x+r*e._y+i*e._z;o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e);if(o>=1)return this._w=s,this._x=n,this._y=r,this._z=i,this;var u=Math.sqrt(1-o*o);if(Math.abs(u)<.001)return this._w=.5*(s+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;var a=Math.atan2(u,o),f=Math.sin((1-t)*a)/u,l=Math.sin(t*a)/u;return this._w=s*f+this._w*l,this._x=n*f+this._x*l,this._y=r*f+this._y*l,this._z=i*f+this._z*l,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return t===undefined&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},Object.assign(THREE.Quaternion,{slerp:function(e,t,n,r){return n.copy(e).slerp(t,r)},slerpFlat:function(e,t,n,r,i,s,o){var u=n[r+0],a=n[r+1],f=n[r+2],l=n[r+3],c=i[s+0],h=i[s+1],p=i[s+2],d=i[s+3];if(l!==d||u!==c||a!==h||f!==p){var v=1-o,m=u*c+a*h+f*p+l*d,g=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){var b=Math.sqrt(y),w=Math.atan2(b,m*g);v=Math.sin(v*w)/b,o=Math.sin(o*w)/b}var E=o*g;u=u*v+c*E,a=a*v+h*E,f=f*v+p*E,l=l*v+d*E;if(v===1-o){var S=1/Math.sqrt(u*u+a*a+f*f+l*l);u*=S,a*=S,f*=S,l*=S}}e[t]=u,e[t+1]=a,e[t+2]=f,e[t+3]=l}}),THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return t!==undefined?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return t!==undefined?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e,t;return function(r,i){return e===undefined&&(e=new THREE.Vector2,t=new THREE.Vector2),e.set(r,r),t.set(i,i),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return t===undefined&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,n){return n===undefined&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,s=this.y-e.y;return this.x=i*n-s*r+e.x,this.y=i*r+s*n+e.y,this}},THREE.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return t!==undefined?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return t!==undefined?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return t!==undefined?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(n){return n instanceof THREE.Euler==0&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),e===undefined&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromEuler(n))}}(),applyAxisAngle:function(){var e;return function(n,r){return e===undefined&&(e=new THREE.Quaternion),this.applyQuaternion(e.setFromAxisAngle(n,r))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12],this.y=i[1]*t+i[5]*n+i[9]*r+i[13],this.z=i[2]*t+i[6]*n+i[10]*r+i[14],this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,s=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*s,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*s,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*s,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,s=e.y,o=e.z,u=e.w,a=u*t+s*r-o*n,f=u*n+o*t-i*r,l=u*r+i*n-s*t,c=-i*t-s*n-o*r;return this.x=a*u+c*-i+f*-o-l*-s,this.y=f*u+c*-s+l*-i-a*-o,this.z=l*u+c*-o+a*-s-f*-i,this},project:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.multiplyMatrices(n.projectionMatrix,e.getInverse(n.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.multiplyMatrices(n.matrixWorld,e.getInverse(n.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(r,i){return e===undefined&&(e=new THREE.Vector3,t=new THREE.Vector3),e.set(r,r,r),t.set(i,i,i),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){if(t!==undefined)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,s=t.x,o=t.y,u=t.z;return this.x=r*u-i*o,this.y=i*s-n*u,this.z=n*o-r*s,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e;return function(n){return e===undefined&&(e=new THREE.Vector3),e.copy(this).projectOnVector(n),this.sub(e)}}(),reflect:function(){var e;return function(n){return e===undefined&&(e=new THREE.Vector3),this.sub(e.copy(n).multiplyScalar(2*this.dot(n)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(THREE.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),r=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){if(typeof e=="number"){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var n=e;e=t,t=n}return this.fromArray(e.elements,t*4)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return t===undefined&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,n){return n===undefined&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},THREE.Vector4=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=r!==undefined?r:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==undefined?e.w:1,this},add:function(e,t){return t!==undefined?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return t!==undefined?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*r+s[12]*i,this.y=s[1]*t+s[5]*n+s[9]*r+s[13]*i,this.z=s[2]*t+s[6]*n+s[10]*r+s[14]*i,this.w=s[3]*t+s[7]*n+s[11]*r+s[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,s=.01,o=.1,u=e.elements,a=u[0],f=u[4],l=u[8],c=u[1],h=u[5],p=u[9],d=u[2],v=u[6],m=u[10];if(Math.abs(f-c)<s&&Math.abs(l-d)<s&&Math.abs(p-v)<s){if(Math.abs(f+c)<o&&Math.abs(l+d)<o&&Math.abs(p+v)<o&&Math.abs(a+h+m-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var g=(a+1)/2,y=(h+1)/2,b=(m+1)/2,w=(f+c)/4,E=(l+d)/4,S=(p+v)/4;return g>y&&g>b?g<s?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(g),r=w/n,i=E/n):y>b?y<s?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(y),n=w/r,i=S/r):b<s?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(b),n=E/i,r=S/i),this.set(n,r,i,t),this}var x=Math.sqrt((v-p)*(v-p)+(l-d)*(l-d)+(c-f)*(c-f));return Math.abs(x)<.001&&(x=1),this.x=(v-p)/x,this.y=(l-d)/x,this.z=(c-f)/x,this.w=Math.acos((a+h+m-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(r,i){return e===undefined&&(e=new THREE.Vector4,t=new THREE.Vector4),e.set(r,r,r,r),t.set(i,i,i,i),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this
.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return t===undefined&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,n){return n===undefined&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},THREE.Euler=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||THREE.Euler.DefaultOrder},THREE.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],THREE.Euler.DefaultOrder="XYZ",THREE.Euler.prototype={constructor:THREE.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=THREE.Math.clamp,i=e.elements,s=i[0],o=i[4],u=i[8],a=i[1],f=i[5],l=i[9],c=i[2],h=i[6],p=i[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(-l,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(h,f),this._z=0)):t==="YXZ"?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(u,p),this._z=Math.atan2(a,f)):(this._y=Math.atan2(-c,s),this._z=0)):t==="ZXY"?(this._x=Math.asin(r(h,-1,1)),Math.abs(h)<.99999?(this._y=Math.atan2(-c,p),this._z=Math.atan2(-o,f)):(this._y=0,this._z=Math.atan2(a,s))):t==="ZYX"?(this._y=Math.asin(-r(c,-1,1)),Math.abs(c)<.99999?(this._x=Math.atan2(h,p),this._z=Math.atan2(a,s)):(this._x=0,this._z=Math.atan2(-o,f))):t==="YZX"?(this._z=Math.asin(r(a,-1,1)),Math.abs(a)<.99999?(this._x=Math.atan2(-l,f),this._y=Math.atan2(-c,s)):(this._x=0,this._y=Math.atan2(u,p))):t==="XZY"?(this._z=Math.asin(-r(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(h,f),this._y=Math.atan2(u,s)):(this._x=Math.atan2(-l,p),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(n,r,i){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationFromQuaternion(n),this.setFromRotationMatrix(e,r,i)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new THREE.Quaternion;return function(n){return e.setFromEuler(this),this.setFromQuaternion(e,n)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==undefined&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return e===undefined&&(e=[]),t===undefined&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new THREE.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},THREE.Line3=function(e,t){this.start=e!==undefined?e:new THREE.Vector3,this.end=t!==undefined?t:new THREE.Vector3},THREE.Line3.prototype={constructor:THREE.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new THREE.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i){e.subVectors(r,this.start),t.subVectors(this.end,this.start);var s=t.dot(t),o=t.dot(e),u=o/s;return i&&(u=THREE.Math.clamp(u,0,1)),u}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t),i=n||new THREE.Vector3;return this.delta(i).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},THREE.Box2=function(e,t){this.min=e!==undefined?e:new THREE.Vector2(+Infinity,+Infinity),this.max=t!==undefined?t:new THREE.Vector2(-Infinity,-Infinity)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector2;return function(n,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(n).sub(i),this.max.copy(n).add(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=+Infinity,this.max.x=this.max.y=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){var n=t||new THREE.Vector2;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var n=t||new THREE.Vector2;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector2;return function(n){var r=e.copy(n).clamp(this.min,this.max);return r.sub(n).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Box3=function(e,t){this.min=e!==undefined?e:new THREE.Vector3(+Infinity,+Infinity,+Infinity),this.max=t!==undefined?t:new THREE.Vector3(-Infinity,-Infinity,-Infinity)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){var t=+Infinity,n=+Infinity,r=+Infinity,i=-Infinity,s=-Infinity,o=-Infinity;for(var u=0,a=e.length;u<a;u+=3){var f=e[u],l=e[u+1],c=e[u+2];f<t&&(t=f),l<n&&(n=l),c<r&&(r=c),f>i&&(i=f),l>s&&(s=l),c>o&&(o=c)}this.min.set(t,n,r),this.max.set(i,s,o)},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new THREE.Vector3;return function(n,r){var i=e.copy(r).multiplyScalar(.5);return this.min.copy(n).sub(i),this.max.copy(n).add(i),this}}(),setFromObject:function(){var e=new THREE.Vector3;return function(n){var r=this;return n.updateMatrixWorld(!0),this.makeEmpty(),n.traverse(function(t){var n=t.geometry;if(n!==undefined)if(n instanceof THREE.Geometry){var i=n.vertices;for(var s=0,o=i.length;s<o;s++)e.copy(i[s]),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}else if(n instanceof THREE.BufferGeometry){var u=n.attributes.position;if(u!==undefined){var a,f,l;u instanceof THREE.InterleavedBufferAttribute?(a=u.data.array,f=u.offset,l=u.data.stride):(a=u.array,f=0,l=3);for(var s=f,o=a.length;s<o;s+=l)e.fromArray(a,s),e.applyMatrix4(t.matrixWorld),r.expandByPoint(e)}}}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=+Infinity,this.max.x=this.max.y=this.max.z=-Infinity,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){var n=t||new THREE.Vector3;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},intersectsSphere:function(){var e;return function(n){return e===undefined&&(e=new THREE.Vector3),this.clampPoint(n.center,e),e.distanceToSquared(n.center)<=n.radius*n.radius}}(),intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},clampPoint:function(e,t){var n=t||new THREE.Vector3;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new THREE.Vector3;return function(n){var r=e.copy(n).clamp(this.min,this.max);return r.sub(n).length()}}(),getBoundingSphere:function(){var e=new THREE.Vector3;return function(n){var r=n||new THREE.Sphere;return r.center=this.center(),r.radius=this.size(e).length()*.5,r}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];return function(n){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},THREE.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,n,r,i,s,o,u,a){var f=this.elements;return f[0]=e,f[1]=r,f[2]=o,f[3]=t,f[4]=i,f[5]=u,f[6]=n,f[7]=s,f[8]=a,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToVector3Array:function(){var e;return function(n,r,i){e===undefined&&(e=new THREE.Vector3),r===undefined&&(r=0),i===undefined&&(i=n.length);for(var s=0,o=r;s<i;s+=3,o+=3)e.fromArray(n,o),e.applyMatrix3(this),e.toArray(n,o);return n}}(),applyToBuffer:function(){var e;return function(n,r,i){e===undefined&&(e=new THREE.Vector3),r===undefined&&(r=0),i===undefined&&(i=n.length/n.itemSize);for(var s=0,o=r;s<i;s++,o++)e.x=n.getX(o),e.y=n.getY(o),e.z=n.getZ(o),e.applyMatrix3(this),n.setXYZ(e.x,e.y,e.z);return n}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],s=e[4],o=e[5],u=e[6],a=e[7],f=e[8];return t*s*f-t*o*a-n*i*f+n*o*u+r*i*a-r*s*u},getInverse:function(e,t){e instanceof THREE.Matrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var n=e.elements,r=this.elements,i=n[0],s=n[1],o=n[2],u=n[3],a=n[4],f=n[5],l=n[6],c=n[7],h=n[8],p=h*a-f*c,d=f*l-h*u,v=c*u-a*l,m=i*p+s*d+o*v;if(m===0){var g="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t||!1)throw new Error(g);return console.warn(g),this.identity()}var y=1/m;return r[0]=p*y,r[1]=(o*c-h*s)*y,r[2]=(f*s-o*a)*y,r[3]=d*y,r[4]=(h*i-o*l)*y,r[5]=(o*u-f*i)*y,r[6]=v*y,r[7]=(s*l-c*i)*y,r[8]=(a*i-s*u)*y,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(e,t)},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(e,t){e===undefined&&(e=[]),t===undefined&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}},THREE.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,n,r,i,s,o,u,a,f,l,c,h,p,d,v){var m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=r,m[1]=i,m[5]=s,m[9]=o,m[13]=u,m[2]=a,m[6]=f,m[10]=l,m[14]=c,m[3]=h,m[7]=p,m[11]=d,m[15]=v,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new THREE.Matrix4).fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(n){e===undefined&&(e=new THREE.Vector3);var r=this.elements,i=n.elements,s=1/e.setFromMatrixColumn(n,0).length(),o=1/e.setFromMatrixColumn(n,1).length(),u=1/e.setFromMatrixColumn(n,2).length();return r[0]=i[0]*s,r[1]=i[1]*s,r[2]=i[2]*s,r[4]=i[4]*o,r[5]=i[5]*o,r[6]=i[6]*o,r[8]=i[8]*u,r[9]=i[9]*u,r[10]=i[10]*u,this}}(),makeRotationFromEuler:function(e){e instanceof THREE.Euler==0&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,i=e.z,s=Math.cos(n),o=Math.sin(n),u=Math.cos(r),a=Math.sin(r),f=Math.cos(i),l=Math.sin(i);if(e.order==="XYZ"){var c=s*f,h=s*l,p=o*f,d=o*l;t[0]=u*f,t[4]=-u*l,t[8]=a,t[1]=h+p*a,t[5]=c-d*a,t[9]=-o*u,t[2]=d-c*a,t[6]=p+h*a,t[10]=s*u}else if(e.order==="YXZ"){var v=u*f,m=u*l,g=a*f,y=a*l;t[0]=v+y*o,t[4]=g*o-m,t[8]=s*a,t[1]=s*l,t[5]=s*f,t[9]=-o,t[2]=m*o-g,t[6]=y+v*o,t[10]=s*u}else if(e.order==="ZXY"){var v=u*f,m=u*l,g=a*f,y=a*l;t[0]=v-y*o,t[4]=-s*l,t[8]=g+m*o,t[1]=m+g*o,t[5]=s*f,t[9]=y-v*o,t[2]=-s*a,t[6]=o,t[10]=s*u}else if(e.order==="ZYX"){var c=s*f,h=s*l,p=o*f,d=o*l;t[0]=u*f,t[4]=p*a-h,t[8]=c*a+d,t[1]=u*l,t[5]=d*a+c,t[9]=h*a-p,t[2]=-a,t[6]=o*u,t[10]=s*u}else if(e.order==="YZX"){var b=s*u,w=s*a,E=o*u,S=o*a;t[0]=u*f,t[4]=S-b*l,t[8]=E*l+w,t[1]=l,t[5]=s*f,t[9]=-o*f,t[2]=-a*f,t[6]=w*l+E,t[10]=b-S*l}else if(e.order==="XZY"){var b=s*u,w=s*a,E=o*u,S=o*a;t[0]=u*f,t[4]=-l,t[8]=a*f,t[1]=b*l+S,t[5]=s*f,t[9]=w*l-E,t[2]=E*l-w,t[6]=o*f,t[10]=S*l+b}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,s=e.w,o=n+n,u=r+r,a=i+i,f=n*o,l=n*u,c=n*a,h=r*u,p=r*a,d=i*a,v=s*o,m=s*u,g=s*a;return t[0]=1-(h+d),t[4]=l-g,t[8]=c+m,t[1]=l+g,t[5]=1-(f+d),t[9]=p-v,t[2]=c-m,t[6]=p+v,t[10]=1-(f+h),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e,t,n;return function(i,s,o){e===undefined&&(e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3);var u=this.elements;return n.subVectors(i,s).normalize(),n.lengthSq()===0&&(n.z=1),e.crossVectors(o,n).normalize(),e.lengthSq()===0&&(n.z+=1e-4,e.crossVectors(o,n).normalize()),t.crossVectors(n,e),u[0]=e.x,u[4]=t.x,u[8]=n.x,u[1]=e.y,u[5]=t.y,u[9]=n.y,u[2]=e.z,u[6]=t.z,u[10]=n.z,this}}(),multiply:function(e,t){return t!==undefined?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,s=n[0],o=n[4],u=n[8],a=n[12],f=n[1],l=n[5],c=n[9],h=n[13],p=n[2],d=n[6],v=n[10],m=n[14],g=n[3],y=n[7],b=n[11],w=n[15],E=r[0],S=r[4],x=r[8],T=r[12],N=r[1],C=r[5],k=r[9],L=r[13],A=r[2],O=r[6],M=r[10],_=r[14],D=r[3],P=r[7],H=r[11],B=r[15];return i[0]=s*E+o*N+u*A+a*D,i[4]=s*S+o*C+u*O+a*P,i[8]=s*x+o*k+u*M+a*H,i[12]=s*T+o*L+u*_+a*B,i[1]=f*E+l*N+c*A+h*D,i[5]=f*S+l*C+c*O+h*P,i[9]=f*x+l*k+c*M+h*H,i[13]=f*T+l*L+c*_+h*B,i[2]=p*E+d*N+v*A+m*D,i[6]=p*S+d*C+v*O+m*P,i[10]=p*x+d*k+v*M+m*H,i[14]=p*T+d*L+v*_+m*B,i[3]=g*E+y*N+b*A+w*D,i[7]=g*S+y*C+b*O+w*P,i[11]=g*x+y*k+b*M+w*H,i[15]=g*T+y*L+b*_+w*B,this},multiplyToArray:function(e,t,n){var r=this.elements;return this.multiplyMatrices(e,t),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToVector3Array:function(){var e;return function(n,r,i){e===undefined&&(e=new THREE.Vector3),r===undefined&&(r=0),i===undefined&&(i=n.length);for(var s=0,o=r;s<i;s+=3,o+=3)e.fromArray(n,o),e.applyMatrix4(this),e.toArray(n,o);return n}}(),applyToBuffer:function(){var e;return function(n,r,i){e===undefined&&(e=new THREE.Vector3),r===undefined&&(r=0),i===undefined&&(i=n.length/n.itemSize);for(var s=0,o=r;s<i;s++,o++)e.x=n.getX(o),e.y=n.getY(o),e.z=n.getZ(o),e.applyMatrix4(this),n.setXYZ(e.x,e.y,e.z);return n}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],s=e[1],o=e[5],u=e[9],a=e[13],f=e[2],l=e[6],c=e[10],h=e[14],p=e[3],d=e[7],v=e[11],m=e[15];return p*(+i*u*l-r*a*l-i*o*c+n*a*c+r*o*h-n*u*h)+d*(+t*u*h-t*a*c+i*s*c-r*s*h+r*a*f-i*u*f)+v*(+t*a*l-t*o*h-i*s*l+n*s*h+i*o*f-n*a*f)+m*(-r*o*f-t*u*l+t*o*c+r*s*l-n*s*c+n*u*f)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset is deprecated - just use .toArray instead."),this.toArray(e,t)},getPosition:function(){var e;return function(){return e===undefined&&(e=new THREE.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),e.setFromMatrixColumn(this,3)}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],s=r[1],o=r[2],u=r[3],a=r[4],f=r[5],l=r[6],c=r[7],h=r[8],p=r[9],d=r[10],v=r[11],m=r[12],g=r[13],y=r[14],b=r[15],w=p*y*c-g*d*c+g*l*v-f*y*v-p*l*b+f*d*b,E=m*d*c-h*y*c-m*l*v+a*y*v+h*l*b-a*d*b,S=h*g*c-m*p*c+m*f*v-a*g*v-h*f*b+a*p*b,x=m*p*l-h*g*l-m*f*d+a*g*d+h*f*y-a*p*y,T=i*w+s*E+o*S+u*x;if(T===0){var N="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t||!1)throw new Error(N);return console.warn(N),this.identity()}var C=1/T;return n[0]=w*C,n[1]=(g*d*u-p*y*u-g*o*v+s*y*v+p*o*b-s*d*b)*C,n[2]=(f*y*u-g*l*u+g*o*c-s*y*c-f*o*b+s*l*b)*C,n[3]=(p*l*u-f*d*u-p*o*c+s*d*c+f*o*v-s*l*v)*C,n[4]=E*C,n[5]=(h*y*u-m*d*u+m*o*v-i*y*v-h*o*b+i*d*b)*C,n[6]=(m*l*u-a*y*u-m*o*c+i*y*c+a*o*b-i*l*b)*C,n[7]=(a*d*u-h*l*u+h*o*c-i*d*c-a*o*v+i*l*v)*C,n[8]=S*C,n[9]=(m*p*u-h*g*u-m*s*v+i*g*v+h*s*b-i*p*b)*C,n[10]=(a*g*u-m*f*u+m*s*c-i*g*c-a*s*b+i*f*b)*C,n[11]=(h*f*u-a*p*u-h*s*c+i*p*c+a*s*v-i*f*v)*C,n[12]=x*C,n[13]=(h*g*o-m*p*o+m*s*d-i*g*d-h*s*y+i*p*y)*C,n[14]=(m*f*o-a*g*o-m*s*l+i*g*l+a*s*y-i*f*y)*C,n[15]=(a*p*o-h*f*o+h*s*l-i*p*l-a*s*d+i*f*d)*C,this},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,s=e.x,o=e.y,u=e.z,a=i*s,f=i*o;return this.set(a*s+n,a*o-r*u,a*u+r*o,0,a*o+r*u,f*o+n,f*u-r*s,0,a*u-r*o,f*u+r*s,i*u*u+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e,t;return function(r,i,s){e===undefined&&(e=new THREE.Vector3,t=new THREE.Matrix4);var o=this.elements,u=e.set(o[0],o[1],o[2]).length(),a=e.set(o[4],o[5],o[6]).length(),f=e.set(o[8],o[9],o[10]).length(),l=this.determinant();l<0&&(u=-u),r.x=o[12],r.y=o[13],r.z=o[14],t.elements.set(this.elements);var c=1/u,h=1/a,p=1/f;return t.elements[0]*=c,t.elements[1]*=c,t.elements[2]*=c,t.elements[4]*=h,t.elements[5]*=h,t.elements[6]*=h,t.elements[8]*=p,t.elements[9]*=p,t.elements[10]*=p,i.setFromRotationMatrix(t),s.x=u,s.y=a,s.z=f,this}}(),makeFrustum:function(e,t,n,r,i,s){var o=this.elements,u=2*i/(t-e),a=2*i/(r-n),f=(t+e)/(t-e),l=(r+n)/(r-n),c=-(s+i)/(s-i),h=-2*s*i/(s-i);return o[0]=u,o[4]=0,o[8]=f,o[12]=0,o[1]=0,o[5]=a,o[9]=l,o[13]=0,o[2]=0,o[6]=0,o[10]=c,o[14]=h,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,n,r){var i=n*Math.tan(THREE.Math.DEG2RAD*e*.5),s=-i,o=s*t,u=i*t;return this.makeFrustum(o,u,s,i,n,r)},makeOrthographic:function(e,t,n,r,i,s){var o=this.elements,u=1/(t-e),a=1/(n-r),f=1/(s-i),l=(t+e)*u,c=(n+r)*a,h=(s+i)*f;return o[0]=2*u,o[4]=0,o[8]=0,o[12]=-l,o[1]=0,o[5]=2*a,o[9]=0,o[13]=-c,o[2]=0,o[6]=0,o[10]=-2*f,o[14]=-h,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){var t=this.elements,n=e.elements;for(var r=0;r<16;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(e,t){e===undefined&&(e=[]),t===undefined&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}},THREE.Ray=function(e,t){this.origin=e!==undefined?e:new THREE.Vector3,this.direction=t!==undefined?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var n=t||new THREE.Vector3;return n.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new THREE.Vector3;return function(n){return this.origin.copy(this.at(n,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new THREE.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return r<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new THREE.Vector3;return function(n){var r=e.subVectors(n,this.origin).dot(this.direction);return r<0?this.origin.distanceToSquared(n):(e.copy(this.direction).multiplyScalar(r).add(this.origin),e.distanceToSquared(n))}}(),distanceSqToSegment:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(i,s,o,u){e.copy(i).add(s).multiplyScalar(.5),t.copy(s).sub(i).normalize(),n.copy(this.origin).sub(e);var a=i.distanceTo(s)*.5,f=-this.direction.dot(t),l=n.dot(this.direction),c=-n.dot(t),h=n.lengthSq(),p=Math.abs(1-f*f),d,v,m,g;if(p>0){d=f*c-l,v=f*l-c,g=a*p;if(d>=0)if(v>=-g)if(v<=g){var y=1/p;d*=y,v*=y,m=d*(d+f*v+2*l)+v*(f*d+v+2*c)+h}else v=a,d=Math.max(0,-(f*v+l)),m=-d*d+v*(v+2*c)+h;else v=-a,d=Math.max(0,-(f*v+l)),m=-d*d+v*(v+2*c)+h;else v<=-g?(d=Math.max(0,-(-f*a+l)),v=d>0?-a:Math.min(Math.max(-a,-c),a),m=-d*d+v*(v+2*c)+h):v<=g?(d=0,v=Math.min(Math.max(-a,-c),a),m=v*(v+2*c)+h):(d=Math.max(0,-(f*a+l)),v=d>0?a:Math.min(Math.max(-a,-c),a),m=-d*d+v*(v+2*c)+h)}else v=f>0?-a:a,d=Math.max(0,-(f*v+l)),m=-d*d+v*(v+2*c)+h;return o&&o.copy(this.direction).multiplyScalar(d).add(this.origin),u&&u.copy(t).multiplyScalar(v).add(e),m}}(),intersectSphere:function(){var e=new THREE.Vector3;return function(n,r){e.subVectors(n.center,this.origin);var i=e.dot(this.direction),s=e.dot(e)-i*i,o=n.radius*n.radius;if(s>o)return null;var u=Math.sqrt(o-s),a=i-u,f=i+u;return a<0&&f<0?null:a<0?this.at(f,r):this.at(a,r)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return n===null?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0)return!0;var n=e.normal.dot(this.direction);return n*t<0?!0:!1},intersectBox:function(e,t){var n,r,i,s,o,u,a=1/this.direction.x,f=1/this.direction.y,l=1/this.direction.z,c=this.origin;a>=0?(n=(e.min.x-c.x)*a,r=(e.max.x-c.x)*a):(n=(e.max.x-c.x)*a,r=(e.min.x-c.x)*a),f>=0?(i=(e.min.y-c.y)*f,s=(e.max.y-c.y)*f):(i=(e.max.y-c.y)*f,s=(e.min.y-c.y)*f);if(n>s||i>r)return null;if(i>n||n!==n)n=i;if(s<r||r!==r)r=s;l>=0?(o=(e.min.z-c.z)*l,u=(e.max.z-c.z)*l):(o=(e.max.z-c.z)*l,u=(e.min.z-c.z)*l);if(n>u||o>r)return null;if(o>n||n!==n)n=o;if(u<r||r!==r)r=u;return r<0?null:this.at(n>=0?n:r,t)},intersectsBox:function(){var e=new THREE.Vector3;return function(n){return this.intersectBox(n,e)!==null}}(),intersectTriangle:function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3,r=new THREE.Vector3;return function(s,o,u,a,f){t.subVectors(o,s),n.subVectors(u,s),r.crossVectors(t,n);var l=this.direction.dot(r),c;if(l>0){if(a)return null;c=1}else{if(!(l<0))return null;c=-1,l=-l}e.subVectors(this.origin,s);var h=c*this.direction.dot(n.crossVectors(e,n));if(h<0)return null;var p=c*this.direction.dot(t.cross(e));if(p<0)return null;if(h+p>l)return null;var d=-c*e.dot(r);return d<0?null:this.at(d/l,f)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},THREE.Sphere=function(e,t){this.center=e!==undefined?e:new THREE.Vector3,this.radius=t!==undefined?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new THREE.Box3;return function(n,r){var i=this.center;r!==undefined?i.copy(r):e.setFromPoints(n).center(i);var s=0;for(var o=0,u=n.length;o<u;o++)s=Math.max(s,i.distanceToSquared(n[o]));return this.radius=Math.sqrt(s),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new THREE.Vector3;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},THREE.Frustum=function(e,t,n,r,i,s){this.planes=[e!==undefined?e:new THREE.Plane,t!==undefined?t:new THREE.Plane,n!==undefined?n:new THREE.Plane,r!==undefined?r:new THREE.Plane,i!==undefined?i:new THREE.Plane,s!==undefined?s:new THREE.Plane]},THREE.Frustum.prototype={constructor:THREE.Frustum,set:function(e,t,n,r,i,s){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(s),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){var t=this.planes;for(var n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],s=n[2],o=n[3],u=n[4],a=n[5],f=n[6],l=n[7],c=n[8],h=n[9],p=n[10],d=n[11],v=n[12],m=n[13],g=n[14],y=n[15];return t[0].setComponents(o-r,l-u,d-c,y-v).normalize(),t[1].setComponents(o+r,l+u,d+c,y+v).normalize(),t[2].setComponents(o+i,l+a,d+h,y+m).normalize(),t[3].setComponents(o-i,l-a,d-h,y-m).normalize(),t[4].setComponents(o-s,l-f,d-p,y-g).normalize(),t[5].setComponents(o+s,l+f,d+p,y+g).normalize(),this},
intersectsObject:function(){var e=new THREE.Sphere;return function(n){var r=n.geometry;return r.boundingSphere===null&&r.computeBoundingSphere(),e.copy(r.boundingSphere).applyMatrix4(n.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new THREE.Sphere;return function(n){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(n.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){var t=this.planes,n=e.center,r=-e.radius;for(var i=0;i<6;i++){var s=t[i].distanceToPoint(n);if(s<r)return!1}return!0},intersectsBox:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var i=this.planes;for(var s=0;s<6;s++){var o=i[s];e.x=o.normal.x>0?r.min.x:r.max.x,t.x=o.normal.x>0?r.max.x:r.min.x,e.y=o.normal.y>0?r.min.y:r.max.y,t.y=o.normal.y>0?r.max.y:r.min.y,e.z=o.normal.z>0?r.min.z:r.max.z,t.z=o.normal.z>0?r.max.z:r.min.z;var u=o.distanceToPoint(e),a=o.distanceToPoint(t);if(u<0&&a<0)return!1}return!0}}(),containsPoint:function(e){var t=this.planes;for(var n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},THREE.Plane=function(e,t){this.normal=e!==undefined?e:new THREE.Vector3(1,0,0),this.constant=t!==undefined?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r,i,s){var o=e.subVectors(s,i).cross(t.subVectors(r,i)).normalize();return this.setFromNormalAndCoplanarPoint(o,r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e),r=t||new THREE.Vector3;return r.copy(this.normal).multiplyScalar(n)},intersectLine:function(){var e=new THREE.Vector3;return function(n,r){var i=r||new THREE.Vector3,s=n.delta(e),o=this.normal.dot(s);if(o===0)return this.distanceToPoint(n.start)===0?i.copy(n.start):undefined;var u=-(n.start.dot(this.normal)+this.constant)/o;return u<0||u>1?undefined:i.copy(s).multiplyScalar(u).add(n.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new THREE.Vector3,t=new THREE.Matrix3;return function(r,i){var s=this.coplanarPoint(e).applyMatrix4(r),o=i||t.getNormalMatrix(r),u=this.normal.applyMatrix3(o).normalize();return this.constant=-s.dot(u),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},THREE.Spherical=function(e,t,n){return this.radius=e!==undefined?e:1,this.phi=t!==undefined?t:0,this.theta=n!==undefined?n:0,this},THREE.Spherical.prototype={constructor:THREE.Spherical,set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.radius.copy(e.radius),this.phi.copy(e.phi),this.theta.copy(e.theta),this},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(THREE.Math.clamp(e.y/this.radius,-1,1))),this}},THREE.Math={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),n=0,r;return function(){for(var s=0;s<36;s++)s===8||s===13||s===18||s===23?t[s]="-":s===14?t[s]="4":(n<=2&&(n=33554432+Math.random()*16777216|0),r=n&15,n>>=4,t[s]=e[s===19?r&3|8:r]);return t.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},random16:function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*THREE.Math.DEG2RAD},radToDeg:function(e){return e*THREE.Math.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}},THREE.Spline=function(e){function h(e,t,n,r,i,s,o){var u=(n-e)*.5,a=(r-t)*.5;return(2*(t-n)+u+a)*o+(-3*(t-n)-2*u-a)*s+u*i+t}this.points=e;var t=[],n={x:0,y:0,z:0},r,i,s,o,u,a,f,l,c;this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),s=r-i,t[0]=i===0?i:i-1,t[1]=i,t[2]=i>this.points.length-2?this.points.length-1:i+1,t[3]=i>this.points.length-3?this.points.length-1:i+2,a=this.points[t[0]],f=this.points[t[1]],l=this.points[t[2]],c=this.points[t[3]],o=s*s,u=s*o,n.x=h(a.x,f.x,l.x,c.x,s,o,u),n.y=h(a.y,f.y,l.y,c.y,s,o,u),n.z=h(a.z,f.z,l.z,c.z,s,o,u),n},this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;e<n;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,n,r,i,s=0,o=0,u=0,a=new THREE.Vector3,f=new THREE.Vector3,l=[],c=0;l[0]=0,e||(e=100),r=this.points.length*e,a.copy(this.points[0]);for(t=1;t<r;t++)n=t/r,i=this.getPoint(n),f.copy(i),c+=f.distanceTo(a),a.copy(i),s=(this.points.length-1)*n,o=Math.floor(s),o!==u&&(l[o]=c,u=o);return l[l.length]=c,{chunks:l,total:c}},this.reparametrizeByArcLength=function(e){var t,n,r,i,s,o,u,a,f=[],l=new THREE.Vector3,c=this.getLength();f.push(l.copy(this.points[0]).clone());for(t=1;t<this.points.length;t++){o=c.chunks[t]-c.chunks[t-1],u=Math.ceil(e*o/c.total),i=(t-1)/(this.points.length-1),s=t/(this.points.length-1);for(n=1;n<u-1;n++)r=i+n*(1/u)*(s-i),a=this.getPoint(r),f.push(l.copy(a).clone());f.push(l.copy(this.points[t]).clone())}this.points=f}},THREE.Triangle=function(e,t,n){this.a=e!==undefined?e:new THREE.Vector3,this.b=t!==undefined?t:new THREE.Vector3,this.c=n!==undefined?n:new THREE.Vector3},THREE.Triangle.normal=function(){var e=new THREE.Vector3;return function(n,r,i,s){var o=s||new THREE.Vector3;o.subVectors(i,r),e.subVectors(n,r),o.cross(e);var u=o.lengthSq();return u>0?o.multiplyScalar(1/Math.sqrt(u)):o.set(0,0,0)}}(),THREE.Triangle.barycoordFromPoint=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(i,s,o,u,a){e.subVectors(u,s),t.subVectors(o,s),n.subVectors(i,s);var f=e.dot(e),l=e.dot(t),c=e.dot(n),h=t.dot(t),p=t.dot(n),d=f*h-l*l,v=a||new THREE.Vector3;if(d===0)return v.set(-2,-1,-1);var m=1/d,g=(h*c-l*p)*m,y=(f*p-l*c)*m;return v.set(1-g-y,y,g)}}(),THREE.Triangle.containsPoint=function(){var e=new THREE.Vector3;return function(n,r,i,s){var o=THREE.Triangle.barycoordFromPoint(n,r,i,s,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),e.cross(t).length()*.5}}(),midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e,t,n,r;return function(s,o){e===undefined&&(e=new THREE.Plane,t=[new THREE.Line3,new THREE.Line3,new THREE.Line3],n=new THREE.Vector3,r=new THREE.Vector3);var u=o||new THREE.Vector3,a=Infinity;e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(s,n);if(this.containsPoint(n)===!0)u.copy(n);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var f=0;f<t.length;f++){t[f].closestPointToPoint(n,!0,r);var l=n.distanceToSquared(r);l<a&&(a=l,u.copy(r))}}return u}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},THREE.Interpolant=function(e,t,n,r){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=r!==undefined?r:new t.constructor(n),this.sampleValues=t,this.valueSize=n},THREE.Interpolant.prototype={constructor:THREE.Interpolant,evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,r=t[n],i=t[n-1];e:{t:{var s;n:{r:if(!(e<r)){for(var o=n+2;;){if(r===undefined){if(e<i)break r;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,i)}if(n===o)break;i=r,r=t[++n];if(e<r)break t}s=t.length;break n}if(e>=i)break e;var u=t[1];e<u&&(n=2,i=u);for(var o=n-2;;){if(i===undefined)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(n===o)break;r=i,i=t[--n-1];if(e>=i)break t}s=n,n=0;break n}while(n<s){var a=n+s>>>1;e<t[a]?s=a:n=a+1}r=t[n],i=t[n-1];if(i===undefined)return this._cachedIndex=0,this.beforeStart_(0,e,r);if(r===undefined)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,i,e)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,e,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){var t=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=e*r;for(var s=0;s!==r;++s)t[s]=n[i+s];return t},interpolate_:function(e,t,n,r){throw new Error("call to abstract method")},intervalChanged_:function(e,t,n){}},Object.assign(THREE.Interpolant.prototype,{beforeStart_:THREE.Interpolant.prototype.copySampleValue_,afterEnd_:THREE.Interpolant.prototype.copySampleValue_}),THREE.CubicInterpolant=function(e,t,n,r){THREE.Interpolant.call(this,e,t,n,r),this._weightPrev=0,this._offsetPrev=0,this._weightNext=0,this._offsetNext=0},THREE.CubicInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.CubicInterpolant,DefaultSettings_:{endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding},intervalChanged_:function(e,t,n){var r=this.parameterPositions,i=e-2,s=e+1,o=r[i],u=r[s];if(o===undefined)switch(this.getSettings_().endingStart){case THREE.ZeroSlopeEnding:i=e,o=2*t-n;break;case THREE.WrapAroundEnding:i=r.length-2,o=t+r[i]-r[i+1];break;default:i=e,o=n}if(u===undefined)switch(this.getSettings_().endingEnd){case THREE.ZeroSlopeEnding:s=e,u=2*n-t;break;case THREE.WrapAroundEnding:s=1,u=n+r[1]-r[0];break;default:s=e-1,u=t}var a=(n-t)*.5,f=this.valueSize;this._weightPrev=a/(t-o),this._weightNext=a/(u-n),this._offsetPrev=i*f,this._offsetNext=s*f},interpolate_:function(e,t,n,r){var i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,u=e*o,a=u-o,f=this._offsetPrev,l=this._offsetNext,c=this._weightPrev,h=this._weightNext,p=(n-t)/(r-t),d=p*p,v=d*p,m=-c*v+2*c*d-c*p,g=(1+c)*v+(-1.5-2*c)*d+(-0.5+c)*p+1,y=(-1-h)*v+(1.5+h)*d+.5*p,b=h*v-h*d;for(var w=0;w!==o;++w)i[w]=m*s[f+w]+g*s[a+w]+y*s[u+w]+b*s[l+w];return i}}),THREE.DiscreteInterpolant=function(e,t,n,r){THREE.Interpolant.call(this,e,t,n,r)},THREE.DiscreteInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.DiscreteInterpolant,interpolate_:function(e,t,n,r){return this.copySampleValue_(e-1)}}),THREE.LinearInterpolant=function(e,t,n,r){THREE.Interpolant.call(this,e,t,n,r)},THREE.LinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.LinearInterpolant,interpolate_:function(e,t,n,r){var i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,u=e*o,a=u-o,f=(n-t)/(r-t),l=1-f;for(var c=0;c!==o;++c)i[c]=s[a+c]*l+s[u+c]*f;return i}}),THREE.QuaternionLinearInterpolant=function(e,t,n,r){THREE.Interpolant.call(this,e,t,n,r)},THREE.QuaternionLinearInterpolant.prototype=Object.assign(Object.create(THREE.Interpolant.prototype),{constructor:THREE.QuaternionLinearInterpolant,interpolate_:function(e,t,n,r){var i=this.resultBuffer,s=this.sampleValues,o=this.valueSize,u=e*o,a=(n-t)/(r-t);for(var f=u+o;u!==f;u+=4)THREE.Quaternion.slerpFlat(i,0,s,u-o,s,u,a);return i}}),THREE.Clock=function(e){this.autoStart=e!==undefined?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype={constructor:THREE.Clock,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;this.autoStart&&!this.running&&this.start();if(this.running){var t=(performance||Date).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}},THREE.EventDispatcher=function(){},Object.assign(THREE.EventDispatcher.prototype,{addEventListener:function(e,t){this._listeners===undefined&&(this._listeners={});var n=this._listeners;n[e]===undefined&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===undefined)return!1;var n=this._listeners;return n[e]!==undefined&&n[e].indexOf(t)!==-1?!0:!1},removeEventListener:function(e,t){if(this._listeners===undefined)return;var n=this._listeners,r=n[e];if(r!==undefined){var i=r.indexOf(t);i!==-1&&r.splice(i,1)}},dispatchEvent:function(e){if(this._listeners===undefined)return;var t=this._listeners,n=t[e.type];if(n!==undefined){e.target=this;var r=[],i=0,s=n.length;for(i=0;i<s;i++)r[i]=n[i];for(i=0;i<s;i++)r[i].call(this,e)}}}),THREE.Layers=function(){this.mask=1},THREE.Layers.prototype={constructor:THREE.Layers,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return(this.mask&e.mask)!==0}},function(e){function t(e,t){return e.distance-t.distance}function n(e,t,r,i){if(e.visible===!1)return;e.raycast(t,r);if(i===!0){var s=e.children;for(var o=0,u=s.length;o<u;o++)n(s[o],t,r,!0)}}e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n),this.near=r||0,this.far=i||Infinity,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,n){n instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(n).sub(this.ray.origin).normalize()):n instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,(n.near+n.far)/(n.near-n.far)).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,r){var i=[];return n(e,this,i,r),i.sort(t),i},intersectObjects:function(e,r){var i=[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var s=0,o=e.length;s<o;s++)n(e[s],this,i,r);return i.sort(t),i}}}(THREE),THREE.Object3D=function(){function i(){n.setFromEuler(t,!1)}function s(){t.setFromQuaternion(n,undefined,!1)}Object.defineProperty(this,"id",{value:THREE.Object3DIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=THREE.Object3D.DefaultUp.clone();var e=new THREE.Vector3,t=new THREE.Euler,n=new THREE.Quaternion,r=new THREE.Vector3(1,1,1);t.onChange(i),n.onChange(s),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:r},modelViewMatrix:{value:new THREE.Matrix4},normalMatrix:{value:new THREE.Matrix3}}),this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixAutoUpdate=THREE.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new THREE.Layers,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},THREE.Object3D.DefaultUp=new THREE.Vector3(0,1,0),THREE.Object3D.DefaultMatrixAutoUpdate=!0,Object.assign(THREE.Object3D.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new THREE.Quaternion;return function(n,r){return e.setFromAxisAngle(n,r),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new THREE.Vector3(1,0,0);return function(n){return this.rotateOnAxis(e,n)}}(),rotateY:function(){var e=new THREE.Vector3(0,1,0);return function(n){return this.rotateOnAxis(e,n)}}(),rotateZ:function(){var e=new THREE.Vector3(0,0,1);return function(n){return this.rotateOnAxis(e,n)}}(),translateOnAxis:function(){var e=new THREE.Vector3;return function(n,r){return e.copy(n).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(r)),this}}(),translateX:function(){var e=new THREE.Vector3(1,0,0);return function(n){return this.translateOnAxis(e,n)}}(),translateY:function(){var e=new THREE.Vector3(0,1,0);return function(n){return this.translateOnAxis(e,n)}}(),translateZ:function(){var e=new THREE.Vector3(0,0,1);return function(n){return this.translateOnAxis(e,n)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new THREE.Matrix4;return function(n){return n.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new THREE.Matrix4;return function(n){e.lookAt(n,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof THREE.Object3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var n=this.children.indexOf(e);n!==-1&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1))},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;n<r;n++){var i=this.children[n],s=i.getObjectByProperty(e,t);if(s!==undefined)return s}return undefined},getWorldPosition:function(e){var t=e||new THREE.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var i=r||new THREE.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,i,t),i}}(),getWorldRotation:function(){var e=new THREE.Quaternion;return function(n){var r=n||new THREE.Euler;return this.getWorldQuaternion(e),r.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new THREE.Vector3,t=new THREE.Quaternion;return function(r){var i=r||new THREE.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,i),i}}(),getWorldDirection:function(){var e=new THREE.Quaternion;return function(n){var r=n||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);var t=this.children;for(var n=0,r=t.length;n<r;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible===!1)return;e(this);var t=this.children;for(var n=0,r=t.length;n<r;n++)t[n].traverseVisible(e)},traverseAncestors:function(e){var t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix();if(this.matrixWorldNeedsUpdate===!0||e===!0)this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0;for(var t=0,n=this.children.length;t<n;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(e){function f(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var t=e===undefined||e==="",n={};t&&(e={geometries:{},materials:{},textures:{},images:{}},n.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),JSON.stringify(this.userData)!=="{}"&&(r.userData=this.userData),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),r.matrix=this.matrix.toArray(),this.geometry!==undefined&&(e.geometries[this.geometry.uuid]===undefined&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),r.geometry=this.geometry.uuid),this.material!==undefined&&(e.materials[this.material.uuid]===undefined&&(e.materials[this.material.uuid]=this.material.toJSON(e)),r.material=this.material.uuid);if(this.children.length>0){r.children=[];for(var i=0;i<this.children.length;i++)r.children.push(this.children[i].toJSON(e).object)}if(t){var s=f(e.geometries),o=f(e.materials),u=f(e.textures),a=f(e.images);s.length>0&&(n.geometries=s),o.length>0&&(n.materials=o),u.length>0&&(n.textures=u),a.length>0&&(n.images=a)}return n.object=r,n},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){t===undefined&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData));if(t===!0)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}}),THREE.Object3DIdCount=0,THREE.Face3=function(e,t,n,r,i,s){this.a=e,this.b=t,this.c=n,this.normal=r instanceof THREE.Vector3?r:new THREE.Vector3,this.vertexNormals=Array.isArray(r)?r:[],this.color=i instanceof THREE.Color?i:new THREE.Color,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=s!==undefined?s:0},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},THREE.BufferAttribute=function(e,t,n){this.uuid=THREE.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0,this.normalized=n===!0},THREE.BufferAttribute.prototype={constructor:THREE.BufferAttribute,get count(){return this.array.length/this.itemSize},set needsUpdate(e){e===!0&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;r<i;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){var t=this.array,n=0;for(var r=0,i=e.length;r<i;r++){var s=e[r];s===undefined&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),s=new THREE.Color),t[n++]=s.r,t[n++]=s.g,t[n++]=s.b}return this},copyIndicesArray:function(e){var t=this.array,n=0;for(var r=0,i=e.length;r<i;r++){var s=e[r];t[n++]=s.a,t[n++]=s.b,t[n++]=s.c}return this},copyVector2sArray:function(e){var t=this.array,n=0;for(var r=0,i=e.length;r<i;r++){var s=e[r];s===undefined&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),s=new THREE.Vector2),t[n++]=s.x,t[n++]=s.y}return this},copyVector3sArray:function(e){var t=this.array,n=0;for(var r=0,i=e.length;r<i;r++){var s=e[r];s===undefined&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),s=new THREE.Vector3),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z}return this},copyVector4sArray:function(e){var t=this.array,n=0;for(var r=0,i=e.length;r<i;r++){var s=e[r];s===undefined&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),s=new THREE.Vector4),t[n++]=s.x,t[n++]=s.y,t[n++]=s.z,t[n++]=s.w}return this},set:function(e,t){return t===undefined&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},clone:function(){return(new this.constructor).copy(this)}},THREE.Int8Attribute=function(e,t){return new THREE.BufferAttribute(new Int8Array(e),t)},THREE.Uint8Attribute=function(e,t){return new THREE.BufferAttribute(new Uint8Array(e),t)},THREE.Uint8ClampedAttribute=function(e,t){return new THREE.BufferAttribute(new Uint8ClampedArray(e),t)},THREE.Int16Attribute=function(e,t){return new THREE.BufferAttribute(new Int16Array(e),t)},THREE.Uint16Attribute=function(e,t){return new THREE.BufferAttribute(new Uint16Array(e),t)},THREE.Int32Attribute=function(e,t){return new THREE.BufferAttribute(new Int32Array(e),t)},THREE.Uint32Attribute=function(e,t){return new THREE.BufferAttribute(new Uint32Array(e),t)},THREE.Float32Attribute=function(e,t){return new THREE.BufferAttribute(new Float32Array(e),t)},THREE.Float64Attribute=function(e,t){return new THREE.BufferAttribute(new Float64Array(e),t)},THREE.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),(new THREE.BufferAttribute(e,t)).setDynamic(!0)},THREE.InstancedBufferAttribute=function(e,t,n){THREE.BufferAttribute.call(this,e,t),this.meshPerAttribute=n||1},THREE.InstancedBufferAttribute.prototype=Object.create(THREE.BufferAttribute.prototype),THREE.InstancedBufferAttribute.prototype.constructor=THREE.InstancedBufferAttribute,THREE.InstancedBufferAttribute.prototype.copy=function(e){return THREE.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBuffer=function(e,t){this.uuid=THREE.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},THREE.InterleavedBuffer.prototype={constructor:THREE.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){e===!0&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;r<i;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return t===undefined&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)}},THREE.InstancedInterleavedBuffer=function(e,t,n){THREE.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=n||1},THREE.InstancedInterleavedBuffer.prototype=Object.create(THREE.InterleavedBuffer.prototype),THREE.InstancedInterleavedBuffer.prototype.constructor=THREE.InstancedInterleavedBuffer,THREE.InstancedInterleavedBuffer.prototype.copy=function(e){return THREE.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},THREE.InterleavedBufferAttribute=function(e,t,n,r){this.uuid=THREE.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=n,this.normalized=r===!0},THREE.InterleavedBufferAttribute.prototype={constructor:THREE.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.count},get array(){return this.data.array},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}},THREE.Geometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},Object.assign(THREE.Geometry.prototype,THREE.EventDispatcher.prototype,{applyMatrix:function(e){var t=(new THREE.Matrix3).getNormalMatrix(e);for(var n=0,r=this.vertices.length;n<r;n++){var i=this.vertices[n];i.applyMatrix4(e)}for(var n=0,r=this.faces.length;n<r;n++){var s=this.faces
[n];s.normal.applyMatrix3(t).normalize();for(var o=0,u=s.vertexNormals.length;o<u;o++)s.vertexNormals[o].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationX(n),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationY(n),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationZ(n),this.applyMatrix(e),this}}(),translate:function(){var e;return function(n,r,i){return e===undefined&&(e=new THREE.Matrix4),e.makeTranslation(n,r,i),this.applyMatrix(e),this}}(),scale:function(){var e;return function(n,r,i){return e===undefined&&(e=new THREE.Matrix4),e.makeScale(n,r,i),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(n){e===undefined&&(e=new THREE.Object3D),e.lookAt(n),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function d(e,n,r,i){var h=s!==undefined?[f[e].clone(),f[n].clone(),f[r].clone()]:[],p=o!==undefined?[t.colors[e].clone(),t.colors[n].clone(),t.colors[r].clone()]:[],d=new THREE.Face3(e,n,r,h,p,i);t.faces.push(d),u!==undefined&&t.faceVertexUvs[0].push([l[e].clone(),l[n].clone(),l[r].clone()]),a!==undefined&&t.faceVertexUvs[1].push([c[e].clone(),c[n].clone(),c[r].clone()])}var t=this,n=e.index!==null?e.index.array:undefined,r=e.attributes,i=r.position.array,s=r.normal!==undefined?r.normal.array:undefined,o=r.color!==undefined?r.color.array:undefined,u=r.uv!==undefined?r.uv.array:undefined,a=r.uv2!==undefined?r.uv2.array:undefined;a!==undefined&&(this.faceVertexUvs[1]=[]);var f=[],l=[],c=[];for(var h=0,p=0;h<i.length;h+=3,p+=2)t.vertices.push(new THREE.Vector3(i[h],i[h+1],i[h+2])),s!==undefined&&f.push(new THREE.Vector3(s[h],s[h+1],s[h+2])),o!==undefined&&t.colors.push(new THREE.Color(o[h],o[h+1],o[h+2])),u!==undefined&&l.push(new THREE.Vector2(u[p],u[p+1])),a!==undefined&&c.push(new THREE.Vector2(a[p],a[p+1]));if(n!==undefined){var v=e.groups;if(v.length>0)for(var h=0;h<v.length;h++){var m=v[h],g=m.start,y=m.count;for(var p=g,b=g+y;p<b;p+=3)d(n[p],n[p+1],n[p+2],m.materialIndex)}else for(var h=0;h<n.length;h+=3)d(n[h],n[h+1],n[h+2])}else for(var h=0;h<i.length/3;h+=3)d(h,h+1,h+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,r=new THREE.Matrix4;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){var e=new THREE.Vector3,t=new THREE.Vector3;for(var n=0,r=this.faces.length;n<r;n++){var i=this.faces[n],s=this.vertices[i.a],o=this.vertices[i.b],u=this.vertices[i.c];e.subVectors(u,o),t.subVectors(s,o),e.cross(t),e.normalize(),i.normal.copy(e)}},computeVertexNormals:function(e){e===undefined&&(e=!0);var t,n,r,i,s,o;o=new Array(this.vertices.length);for(t=0,n=this.vertices.length;t<n;t++)o[t]=new THREE.Vector3;if(e){var u,a,f,l=new THREE.Vector3,c=new THREE.Vector3;for(r=0,i=this.faces.length;r<i;r++)s=this.faces[r],u=this.vertices[s.a],a=this.vertices[s.b],f=this.vertices[s.c],l.subVectors(f,a),c.subVectors(u,a),l.cross(c),o[s.a].add(l),o[s.b].add(l),o[s.c].add(l)}else for(r=0,i=this.faces.length;r<i;r++)s=this.faces[r],o[s.a].add(s.normal),o[s.b].add(s.normal),o[s.c].add(s.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(r=0,i=this.faces.length;r<i;r++){s=this.faces[r];var h=s.vertexNormals;h.length===3?(h[0].copy(o[s.a]),h[1].copy(o[s.b]),h[2].copy(o[s.c])):(h[0]=o[s.a].clone(),h[1]=o[s.b].clone(),h[2]=o[s.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,r,i;for(n=0,r=this.faces.length;n<r;n++){i=this.faces[n],i.__originalFaceNormal?i.__originalFaceNormal.copy(i.normal):i.__originalFaceNormal=i.normal.clone(),i.__originalVertexNormals||(i.__originalVertexNormals=[]);for(e=0,t=i.vertexNormals.length;e<t;e++)i.__originalVertexNormals[e]?i.__originalVertexNormals[e].copy(i.vertexNormals[e]):i.__originalVertexNormals[e]=i.vertexNormals[e].clone()}var s=new THREE.Geometry;s.faces=this.faces;for(e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,u=this.morphNormals[e].vertexNormals,a,f;for(n=0,r=this.faces.length;n<r;n++)a=new THREE.Vector3,f={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3},o.push(a),u.push(f)}var l=this.morphNormals[e];s.vertices=this.morphTargets[e].vertices,s.computeFaceNormals(),s.computeVertexNormals();var a,f;for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],a=l.faceNormals[n],f=l.vertexNormals[n],a.copy(i.normal),f.a.copy(i.vertexNormals[0]),f.b.copy(i.vertexNormals[1]),f.c.copy(i.vertexNormals[2])}for(n=0,r=this.faces.length;n<r;n++)i=this.faces[n],i.normal=i.__originalFaceNormal,i.vertexNormals=i.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){var e=0,t=this.vertices;for(var n=0,r=t.length;n<r;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e instanceof THREE.Geometry==0){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var r,i=this.vertices.length,s=this.vertices,o=e.vertices,u=this.faces,a=e.faces,f=this.faceVertexUvs[0],l=e.faceVertexUvs[0];n===undefined&&(n=0),t!==undefined&&(r=(new THREE.Matrix3).getNormalMatrix(t));for(var c=0,h=o.length;c<h;c++){var p=o[c],d=p.clone();t!==undefined&&d.applyMatrix4(t),s.push(d)}for(c=0,h=a.length;c<h;c++){var v=a[c],m,g,y,b=v.vertexNormals,w=v.vertexColors;m=new THREE.Face3(v.a+i,v.b+i,v.c+i),m.normal.copy(v.normal),r!==undefined&&m.normal.applyMatrix3(r).normalize();for(var E=0,S=b.length;E<S;E++)g=b[E].clone(),r!==undefined&&g.applyMatrix3(r).normalize(),m.vertexNormals.push(g);m.color.copy(v.color);for(var E=0,S=w.length;E<S;E++)y=w[E],m.vertexColors.push(y.clone());m.materialIndex=v.materialIndex+n,u.push(m)}for(c=0,h=l.length;c<h;c++){var x=l[c],T=[];if(x===undefined)continue;for(var E=0,S=x.length;E<S;E++)T.push(x[E].clone());f.push(T)}},mergeMesh:function(e){if(e instanceof THREE.Mesh==0){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e={},t=[],n=[],r,i,s=4,o=Math.pow(10,s),u,a,f,l,c,h;for(u=0,a=this.vertices.length;u<a;u++)r=this.vertices[u],i=Math.round(r.x*o)+"_"+Math.round(r.y*o)+"_"+Math.round(r.z*o),e[i]===undefined?(e[i]=u,t.push(this.vertices[u]),n[u]=t.length-1):n[u]=n[e[i]];var p=[];for(u=0,a=this.faces.length;u<a;u++){f=this.faces[u],f.a=n[f.a],f.b=n[f.b],f.c=n[f.c],l=[f.a,f.b,f.c];var d=-1;for(var v=0;v<3;v++)if(l[v]===l[(v+1)%3]){d=v,p.push(u);break}}for(u=p.length-1;u>=0;u--){var m=p[u];this.faces.splice(m,1);for(c=0,h=this.faceVertexUvs.length;c<h;c++)this.faceVertexUvs[c].splice(m,1)}var g=this.vertices.length-t.length;return this.vertices=t,g},sortFacesByMaterialIndex:function(){function r(e,t){return e.materialIndex-t.materialIndex}var e=this.faces,t=e.length;for(var n=0;n<t;n++)e[n]._id=n;e.sort(r);var i=this.faceVertexUvs[0],s=this.faceVertexUvs[1],o,u;i&&i.length===t&&(o=[]),s&&s.length===t&&(u=[]);for(var n=0;n<t;n++){var a=e[n]._id;o&&o.push(i[a]),u&&u.push(s[a])}o&&(this.faceVertexUvs[0]=o),u&&(this.faceVertexUvs[1]=u)},toJSON:function(){function N(e,t,n){return n?e|1<<t:e&~(1<<t)}function C(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return a[t]!==undefined?a[t]:(a[t]=u.length/3,u.push(e.x,e.y,e.z),a[t])}function k(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return l[t]!==undefined?l[t]:(l[t]=f.length,f.push(e.getHex()),l[t])}function L(e){var t=e.x.toString()+e.y.toString();return h[t]!==undefined?h[t]:(h[t]=c.length/2,c.push(e.x,e.y),h[t])}var e={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name);if(this.parameters!==undefined){var t=this.parameters;for(var n in t)t[n]!==undefined&&(e[n]=t[n]);return e}var r=[];for(var i=0;i<this.vertices.length;i++){var s=this.vertices[i];r.push(s.x,s.y,s.z)}var o=[],u=[],a={},f=[],l={},c=[],h={};for(var i=0;i<this.faces.length;i++){var p=this.faces[i],d=!0,v=!1,m=this.faceVertexUvs[0][i]!==undefined,g=p.normal.length()>0,y=p.vertexNormals.length>0,b=p.color.r!==1||p.color.g!==1||p.color.b!==1,w=p.vertexColors.length>0,E=0;E=N(E,0,0),E=N(E,1,d),E=N(E,2,v),E=N(E,3,m),E=N(E,4,g),E=N(E,5,y),E=N(E,6,b),E=N(E,7,w),o.push(E),o.push(p.a,p.b,p.c),o.push(p.materialIndex);if(m){var S=this.faceVertexUvs[0][i];o.push(L(S[0]),L(S[1]),L(S[2]))}g&&o.push(C(p.normal));if(y){var x=p.vertexNormals;o.push(C(x[0]),C(x[1]),C(x[2]))}b&&o.push(k(p.color));if(w){var T=p.vertexColors;o.push(k(T[0]),k(T[1]),k(T[2]))}}return e.data={},e.data.vertices=r,e.data.normals=u,f.length>0&&(e.data.colors=f),c.length>0&&(e.data.uvs=[c]),e.data.faces=o,e},clone:function(){return(new THREE.Geometry).copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];var t=e.vertices;for(var n=0,r=t.length;n<r;n++)this.vertices.push(t[n].clone());var i=e.faces;for(var n=0,r=i.length;n<r;n++)this.faces.push(i[n].clone());for(var n=0,r=e.faceVertexUvs.length;n<r;n++){var s=e.faceVertexUvs[n];this.faceVertexUvs[n]===undefined&&(this.faceVertexUvs[n]=[]);for(var o=0,u=s.length;o<u;o++){var a=s[o],f=[];for(var l=0,c=a.length;l<c;l++){var h=a[l];f.push(h.clone())}this.faceVertexUvs[n].push(f)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),THREE.GeometryIdCount=0,THREE.DirectGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},Object.assign(THREE.DirectGeometry.prototype,THREE.EventDispatcher.prototype,{computeBoundingBox:THREE.Geometry.prototype.computeBoundingBox,computeBoundingSphere:THREE.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(e){var t,n=[],r,i=e.faces;for(var s=0;s<i.length;s++){var o=i[s];o.materialIndex!==r&&(r=o.materialIndex,t!==undefined&&(t.count=s*3-t.start,n.push(t)),t={start:s*3,materialIndex:r})}t!==undefined&&(t.count=s*3-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t=e.faces,n=e.vertices,r=e.faceVertexUvs,i=r[0]&&r[0].length>0,s=r[1]&&r[1].length>0,o=e.morphTargets,u=o.length,a;if(u>0){a=[];for(var f=0;f<u;f++)a[f]=[];this.morphTargets.position=a}var l=e.morphNormals,c=l.length,h;if(c>0){h=[];for(var f=0;f<c;f++)h[f]=[];this.morphTargets.normal=h}var p=e.skinIndices,d=e.skinWeights,v=p.length===n.length,m=d.length===n.length;for(var f=0;f<t.length;f++){var g=t[f];this.vertices.push(n[g.a],n[g.b],n[g.c]);var y=g.vertexNormals;if(y.length===3)this.normals.push(y[0],y[1],y[2]);else{var b=g.normal;this.normals.push(b,b,b)}var w=g.vertexColors;if(w.length===3)this.colors.push(w[0],w[1],w[2]);else{var E=g.color;this.colors.push(E,E,E)}if(i===!0){var S=r[0][f];S!==undefined?this.uvs.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",f),this.uvs.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2))}if(s===!0){var S=r[1][f];S!==undefined?this.uvs2.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",f),this.uvs2.push(new THREE.Vector2,new THREE.Vector2,new THREE.Vector2))}for(var x=0;x<u;x++){var T=o[x].vertices;a[x].push(T[g.a],T[g.b],T[g.c])}for(var x=0;x<c;x++){var N=l[x].vertexNormals[f];h[x].push(N.a,N.b,N.c)}v&&this.skinIndices.push(p[g.a],p[g.b],p[g.c]),m&&this.skinWeights.push(d[g.a],d[g.b],d[g.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),THREE.BufferGeometry=function(){Object.defineProperty(this,"id",{value:THREE.GeometryIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:Infinity}},Object.assign(THREE.BufferGeometry.prototype,THREE.EventDispatcher.prototype,{getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){if(t instanceof THREE.BufferAttribute==0&&t instanceof THREE.InterleavedBufferAttribute==0){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(e,new THREE.BufferAttribute(arguments[1],arguments[2]));return}if(e==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t);return}return this.attributes[e]=t,this},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==undefined?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;t!==undefined&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var n=this.attributes.normal;if(n!==undefined){var r=(new THREE.Matrix3).getNormalMatrix(e);r.applyToVector3Array(n.array),n.needsUpdate=!0}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationX(n),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationY(n),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(n){return e===undefined&&(e=new THREE.Matrix4),e.makeRotationZ(n),this.applyMatrix(e),this}}(),translate:function(){var e;return function(n,r,i){return e===undefined&&(e=new THREE.Matrix4),e.makeTranslation(n,r,i),this.applyMatrix(e),this}}(),scale:function(){var e;return function(n,r,i){return e===undefined&&(e=new THREE.Matrix4),e.makeScale(n,r,i),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(n){e===undefined&&(e=new THREE.Object3D),e.lookAt(n),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Points||e instanceof THREE.Line){var n=new THREE.Float32Attribute(t.vertices.length*3,3),r=new THREE.Float32Attribute(t.colors.length*3,3);this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors));if(t.lineDistances&&t.lineDistances.length===t.vertices.length){var i=new THREE.Float32Attribute(t.lineDistances.length,1);this.addAttribute("lineDistance",i.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e instanceof THREE.Mesh&&t instanceof THREE.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e instanceof THREE.Mesh){var n=t.__directGeometry;if(n===undefined||t.elementsNeedUpdate===!0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate||t.elementsNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate||t.elementsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate||t.elementsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate||t.elementsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate||t.elementsNeedUpdate,t.elementsNeedUpdate=!1,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}var r;return t.verticesNeedUpdate===!0&&(r=this.attributes.position,r!==undefined&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1),t.normalsNeedUpdate===!0&&(r=this.attributes.normal,r!==undefined&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1),t.colorsNeedUpdate===!0&&(r=this.attributes.color,r!==undefined&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(r=this.attributes.uv,r!==undefined&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(r=this.attributes.lineDistance,r!==undefined&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new THREE.DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(e.vertices.length*3);this.addAttribute("position",(new THREE.BufferAttribute(t,3)).copyVector3sArray(e.vertices));if(e.normals.length>0){var n=new Float32Array(e.normals.length*3);this.addAttribute("normal",(new THREE.BufferAttribute(n,3)).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(e.colors.length*3);this.addAttribute("color",(new THREE.BufferAttribute(r,3)).copyColorsArray(e.colors))}if(e.uvs.length>0){var i=new Float32Array(e.uvs.length*2);this.addAttribute("uv",(new THREE.BufferAttribute(i,2)).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var s=new Float32Array(e.uvs2.length*2);this.addAttribute("uv2",(new THREE.BufferAttribute(s,2)).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var o=e.vertices.length>65535?Uint32Array:Uint16Array,u=new o(e.indices.length*3);this.setIndex((new THREE.BufferAttribute(u,1)).copyIndicesArray(e.indices))}this.groups=e.groups;for(var a in e.morphTargets){var f=[],l=e.morphTargets[a];for(var c=0,h=l.length;c<h;c++){var p=l[c],d=new THREE.Float32Attribute(p.length*3,3);f.push(d.copyVector3sArray(p))}this.morphAttributes[a]=f}if(e.skinIndices.length>0){var v=new THREE.Float32Attribute(e.skinIndices.length*4,4);this.addAttribute("skinIndex",v.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var m=new THREE.Float32Attribute(e.skinWeights.length*4,4);this.addAttribute("skinWeight",m.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;e!==undefined?this.boundingBox.setFromArray(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new THREE.Box3,t=new THREE.Vector3;return function(){this.boundingSphere===null&&(this.boundingSphere=new THREE.Sphere);var r=this.attributes.position;if(r){var i=r.array,s=this.boundingSphere.center;e.setFromArray(i),e.center(s);var o=0;for(var u=0,a=i.length;u<a;u+=3)t.fromArray(i,u),o=Math.max(o,s.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(o),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(t.normal===undefined)this.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(r.length),3));else{var i=t.normal.array;for(var s=0,o=i.length;s<o;s++)i[s]=0}var u=t.normal.array,a,f,l,c=new THREE.Vector3,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,v=new THREE.Vector3;if(e){var m=e.array;n.length===0&&this.addGroup(0,m.length);for(var g=0,y=n.length;g<y;++g){var b=n[g],w=b.start,E=b.count;for(var s=w,o=w+E;s<o;s+=3)a=m[s+0]*3,f=m[s+1]*3,l=m[s+2]*3,c.fromArray(r,a),h.fromArray(r,f),p.fromArray(r,l),d.subVectors(p,h),v.subVectors(c,h),d.cross(v),u[a]+=d.x,u[a+1]+=d.y,u[a+2]+=d.z,u[f]+=d.x,u[f+1]+=d.y,u[f+2]+=d.z,u[l]+=d.x,u[l+1]+=d.y,u[l+2]+=d.z}}else for(var s=0,o=r.length;s<o;s+=9)c.fromArray(r,s),h.fromArray(r,s+3),p.fromArray(r,s+6),d.subVectors(p,h),v.subVectors(c,h),d.cross(v),u[s]=d.x,u[s+1]=d.y,u[s+2]=d.z,u[s+3]=d.x,u[s+4]=d.y,u[s+5]=d.z,u[s+6]=d.x,u[s+7]=d.y,u[s+8]=d.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if(e instanceof THREE.BufferGeometry==0){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===undefined&&(t=0);var n=this.attributes;for(var r in n){if(e.attributes[r]===undefined)continue;var i=n[r],s=i.array,o=e.attributes[r],u=o.array,a=o.itemSize;for(var f=0,l=a*t;f<u.length;f++,l++)s[l]=u[f]}return this},normalizeNormals:function(){var e=this.attributes.normal.array,t,n,r,i;for(var s=0,o=e.length;s<o;s+=3)t=e[s],n=e[s+1],r=e[s+2],i=1/Math.sqrt(t*t+n*n+r*r),e[s]*=i,e[s+1]*=i,e[s+2]*=i},toNonIndexed:function(){if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new THREE.BufferGeometry,t=this.index.array,n=this.attributes;for(var r in n){var i=n[r],s=i.array,o=i.itemSize,u=new s.constructor(t.length*o),a=0,f=0;for(var l=0,c=t.length;l<c;l++){a=t[l]*o;for(var h=0;h<o;h++)u[f++]=s[a++]}e.addAttribute(r,new THREE.BufferAttribute(u,o))}return e},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name);if(this.parameters!==undefined){var t=this.parameters;for(var n in t)t[n]!==undefined&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(r!==null){var i=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:i}}var s=this.attributes;for(var n in s){var o=s[n],i=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:i,normalized:o.normalized}}var u=this.groups;u.length>0&&(e.data.groups=JSON.parse(JSON.stringify(u)));var a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e},clone:function(){return(new THREE.BufferGeometry).copy(this)},copy:function(e){var t=e.index;t!==null&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}var s=e.groups;for(var o=0,u=s.length;o<u;o++){var a=s[o];this.addGroup(a.start,a.count,a.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),THREE.BufferGeometry.MaxIndex=65535,THREE.InstancedBufferGeometry=function(){THREE.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=undefined},THREE.InstancedBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.InstancedBufferGeometry.prototype.constructor=THREE.InstancedBufferGeometry,THREE.InstancedBufferGeometry.prototype.addGroup=function(e,t,n){this.groups.push({start:e,count:t,instances:n})},THREE.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;t!==null&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}var s=e.groups;for(var o=0,u=s.length;o<u;o++){var a=s[o];this.addGroup(a.start,a.count,a.instances)}return this},THREE.Uniform=function(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e,this.dynamic=!1},THREE.Uniform.prototype={constructor:THREE.Uniform,onUpdate:function(e){return this.dynamic=!0,this.onUpdateCallback=e,this}},THREE.AnimationAction=function(){throw new Error("THREE.AnimationAction: Use mixer.clipAction for construction.")},THREE.AnimationAction._new=function(t,n,r){this._mixer=t,this._clip=n,this._localRoot=r||null;var i=n.tracks,s=i.length,o=new Array(s),u={endingStart:THREE.ZeroCurvatureEnding,endingEnd:THREE.ZeroCurvatureEnding};for(var a=0;a!==s;++a){var f=i[a].createInterpolant(null);o[a]=f,f.settings=u}this._interpolantSettings=u,this._interpolants=o,this._propertyBindings=new Array(s),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=THREE.LoopRepeat,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=Infinity,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0},THREE.AnimationAction._new.prototype={constructor:THREE.AnimationAction._new,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){var e=this._startTime;return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){var r=this._mixer;e.fadeOut(t),this.fadeIn(t);if(n){var i=this._clip.duration,s=e._clip.duration,o=s/i,u=i/s;e.warp(1,o,t),this.warp(u,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var r=this._mixer,i=r.time,s=this._timeScaleInterpolant,o=this.timeScale;s===null&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);var u=s.parameterPositions,a=s.sampleValues;return u[0]=i,u[1]=i+n,a[0]=e/o,a[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,r){var i=this._startTime;if(i!==null){var s=(e-i)*n;if(s<0||n===0)return;this._startTime=null,t=n*s}t*=this._updateTimeScale(e);var o=this._updateTime(t),u=this._updateWeight(e);if(u>0){var a=this._interpolants,f=this._propertyBindings;for(var l=0,c=a.length;l!==c;++l)a[l].evaluate(o),f[l].accumulate(r,u)}},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopFading(),r===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var r=n.evaluate(e)[0];t*=r,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(e===0)return t;var n=this._clip.duration,r=this.loop,i=this._loopCount;if(r===THREE.LoopOnce){i===-1&&(this.loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else{if(!(t<0))break e;t=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{var s=r===THREE.LoopPingPong;i===-1&&(e>=0?(i=0,this._setEndings(!0,this.repetitions===0,s)):this._setEndings(this.repetitions===0,!0,s));if(t>=n||t<0){var o=Math.floor(t/n);t-=n*o,i+=Math.abs(o);var u=this.repetitions-i;if(u<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===0){var a=e<0;this._setEndings(a,!a,s)}else this._setEndings(!1,!1,s);this._loopCount=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(s&&(i&1)===1)return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var r=this._interpolantSettings;n?(r.endingStart=THREE.ZeroSlopeEnding,r.endingEnd=THREE.ZeroSlopeEnding):(e?r.endingStart=this.zeroSlopeAtStart?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:r.endingStart=THREE.WrapAroundEnding,t?r.endingEnd=this.zeroSlopeAtEnd?THREE.ZeroSlopeEnding:THREE.ZeroCurvatureEnding:r.endingEnd=THREE.WrapAroundEnding)},_scheduleFading:function(e,t,n){var r=this._mixer,i=r.time,s=this._weightInterpolant;s===null&&(s=r._lendControlInterpolant(),this._weightInterpolant=s);var o=s.parameterPositions,u=s.sampleValues;return o[0]=i,u[0]=t,o[1]=i+e,u[1]=n,this}},THREE.AnimationClip=function(e,t,n){this.name=e,this.tracks=n,this.duration=t!==undefined?t:-1,this.uuid=THREE.Math.generateUUID(),this.duration<0&&this.resetDuration(),this.trim(),this.optimize()},THREE.AnimationClip.prototype={constructor:THREE.AnimationClip,resetDuration:function(){var e=this.tracks,t=0;for(var n=0,r=e.length;n!==r;++n){var i=this.tracks[n];t=Math.max(t,i.times[i.times.length-1])}this.duration=t},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},Object.assign(THREE.AnimationClip,{parse:function(e){var t=[],n=e.tracks,r=1/(e.fps||1);for(var i=0,s=n.length;i!==s;++i)t.push(THREE.KeyframeTrack.parse(n[i]).scale(r));return new THREE.AnimationClip(e.name,e.duration,t)},toJSON:function(e){var t=[],n=e.tracks,r={name:e.name,duration:e.duration,tracks:t};for(var i=0,s=n.length;i!==s;++i)t.push(THREE.KeyframeTrack.toJSON(n[i]));return r},CreateFromMorphTargetSequence:function(e,t,n,r){var i=t.length,s=[];for(var o=0;o<i;o++){var u=[],a=[];u.push((o+i-1)%i,o,(o+1)%i),a.push(0,1,0);var f=THREE.AnimationUtils.getKeyframeOrder(u);u=THREE.AnimationUtils.sortedArray(u,1,f),a=THREE.AnimationUtils.sortedArray(a,1,f),!r&&u[0]===0&&(u.push(i),a.push(a[0])),s.push((new THREE.NumberKeyframeTrack(".morphTargetInfluences["+t[o].name+"]",u,a)).scale(1/n))}return new THREE.AnimationClip(e,-1,s)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var r=e;n=r.geometry&&r.geometry.animations||r.animations}for(var i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){var r={},i=/^([\w-]*?)([\d]+)$/;for(var s=0,o=e.length
;s<o;s++){var u=e[s],a=u.name.match(i);if(a&&a.length>1){var f=a[1],l=r[f];l||(r[f]=l=[]),l.push(u)}}var c=[];for(var f in r)c.push(THREE.AnimationClip.CreateFromMorphTargetSequence(f,r[f],t,n));return c},parseAnimation:function(e,t,n){if(!e)return console.error("  no animation in JSONLoader data"),null;var r=function(e,t,n,r,i){if(n.length!==0){var s=[],o=[];THREE.AnimationUtils.flattenJSON(n,s,o,r),s.length!==0&&i.push(new e(t,s,o))}},i=[],s=e.name||"default",o=e.length||-1,u=e.fps||30,a=e.hierarchy||[];for(var f=0;f<a.length;f++){var l=a[f].keys;if(!l||l.length===0)continue;if(l[0].morphTargets){var c={};for(var h=0;h<l.length;h++)if(l[h].morphTargets)for(var p=0;p<l[h].morphTargets.length;p++)c[l[h].morphTargets[p]]=-1;for(var d in c){var v=[],m=[];for(var p=0;p!==l[h].morphTargets.length;++p){var g=l[h];v.push(g.time),m.push(g.morphTarget===d?1:0)}i.push(new THREE.NumberKeyframeTrack(".morphTargetInfluence["+d+"]",v,m))}o=c.length*(u||1)}else{var y=".bones["+t[f].name+"]";r(THREE.VectorKeyframeTrack,y+".position",l,"pos",i),r(THREE.QuaternionKeyframeTrack,y+".quaternion",l,"rot",i),r(THREE.VectorKeyframeTrack,y+".scale",l,"scl",i)}}if(i.length===0)return null;var b=new THREE.AnimationClip(s,o,i);return b}}),THREE.AnimationMixer=function(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1},Object.assign(THREE.AnimationMixer.prototype,THREE.EventDispatcher.prototype,{clipAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?THREE.AnimationClip.findByName(n,e):e,s=i!==null?i.uuid:e,o=this._actionsByClip[s],u=null;if(o!==undefined){var a=o.actionByRoot[r];if(a!==undefined)return a;u=o.knownActions[0],i===null&&(i=u._clip)}if(i===null)return null;var f=new THREE.AnimationMixer._Action(this,i,t);return this._bindAction(f,u),this._addInactiveAction(f,s,r),f},existingAction:function(e,t){var n=t||this._root,r=n.uuid,i=typeof e=="string"?THREE.AnimationClip.findByName(n,e):e,s=i?i.uuid:e,o=this._actionsByClip[s];return o!==undefined?o.actionByRoot[r]||null:null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,r=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var i=0;i!==t;++i)e[i].reset();for(var i=0;i!==r;++i)n[i].useCount=0;return this},update:function(e){e*=this.timeScale;var t=this._actions,n=this._nActiveActions,r=this.time+=e,i=Math.sign(e),s=this._accuIndex^=1;for(var o=0;o!==n;++o){var u=t[o];u.enabled&&u._update(r,e,i,s)}var a=this._bindings,f=this._nActiveBindings;for(var o=0;o!==f;++o)a[o].apply(s);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,r=this._actionsByClip,i=r[n];if(i!==undefined){var s=i.knownActions;for(var o=0,u=s.length;o!==u;++o){var a=s[o];this._deactivateAction(a);var f=a._cacheIndex,l=t[t.length-1];a._cacheIndex=null,a._byClipCacheIndex=null,l._cacheIndex=f,t[f]=l,t.pop(),this._removeInactiveBindingsForAction(a)}delete r[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var r in n){var i=n[r].actionByRoot,s=i[t];s!==undefined&&(this._deactivateAction(s),this._removeInactiveAction(s))}var o=this._bindingsByRootAndName,u=o[t];if(u!==undefined)for(var a in u){var f=u[a];f.restoreOriginalState(),this._removeInactiveBinding(f)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}),THREE.AnimationMixer._Action=THREE.AnimationAction._new,Object.assign(THREE.AnimationMixer.prototype,{_bindAction:function(e,t){var n=e._localRoot||this._root,r=e._clip.tracks,i=r.length,s=e._propertyBindings,o=e._interpolants,u=n.uuid,a=this._bindingsByRootAndName,f=a[u];f===undefined&&(f={},a[u]=f);for(var l=0;l!==i;++l){var c=r[l],h=c.name,p=f[h];if(p!==undefined)s[l]=p;else{p=s[l];if(p!==undefined){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,u,h));continue}var d=t&&t._propertyBindings[l].binding.parsedPath;p=new THREE.PropertyMixer(THREE.PropertyBinding.create(n,h,d),c.ValueTypeName,c.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,u,h),s[l]=p}o[l].resultBuffer=p.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,r=this._actionsByClip[n];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,n,t)}var i=e._propertyBindings;for(var s=0,o=i.length;s!==o;++s){var u=i[s];u.useCount++===0&&(this._lendBinding(u),u.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){var t=e._propertyBindings;for(var n=0,r=t.length;n!==r;++n){var i=t[n];--i.useCount===0&&(i.restoreOriginalState(),this._takeBackBinding(i))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var r=this._actions,i=this._actionsByClip,s=i[t];if(s===undefined)s={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,i[t]=s;else{var o=s.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=r.length,r.push(e),s.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],r=e._cacheIndex;n._cacheIndex=r,t[r]=n,t.pop(),e._cacheIndex=null;var i=e._clip.uuid,s=this._actionsByClip,o=s[i],u=o.knownActions,a=u[u.length-1],f=e._byClipCacheIndex;a._byClipCacheIndex=f,u[f]=a,u.pop(),e._byClipCacheIndex=null;var l=o.actionByRoot,c=(t._localRoot||this._root).uuid;delete l[c],u.length===0&&delete s[i],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){var t=e._propertyBindings;for(var n=0,r=t.length;n!==r;++n){var i=t[n];--i.referenceCount===0&&this._removeInactiveBinding(i)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,r=this._nActiveActions++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,r=--this._nActiveActions,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_addInactiveBinding:function(e,t,n){var r=this._bindingsByRootAndName,i=r[t],s=this._bindings;i===undefined&&(i={},r[t]=i),i[n]=e,e._cacheIndex=s.length,s.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,r=n.rootNode.uuid,i=n.path,s=this._bindingsByRootAndName,o=s[r],u=t[t.length-1],a=e._cacheIndex;u._cacheIndex=a,t[a]=u,t.pop(),delete o[i];e:{for(var f in o)break e;delete s[r]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=this._nActiveBindings++,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,r=--this._nActiveBindings,i=t[r];e._cacheIndex=r,t[r]=e,i._cacheIndex=n,t[n]=i},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return n===undefined&&(n=new THREE.LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,r=--this._nActiveControlInterpolants,i=t[r];e.__cacheIndex=r,t[r]=e,i.__cacheIndex=n,t[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1)}),THREE.AnimationObjectGroup=function(e){this.uuid=THREE.Math.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,r=arguments.length;n!==r;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var i=this;this.stats={objects:{get total(){return i._objects.length},get inUse(){return this.total-i.nCachedObjects_}},get bindingsPerObject(){return i._bindings.length}}},THREE.AnimationObjectGroup.prototype={constructor:THREE.AnimationObjectGroup,add:function(e){var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,s=this._paths,o=this._parsedPaths,u=this._bindings,a=u.length;for(var f=0,l=arguments.length;f!==l;++f){var c=arguments[f],h=c.uuid,p=i[h];if(p===undefined){p=n++,i[h]=p,t.push(c);for(var d=0,v=a;d!==v;++d)u[d].push(new THREE.PropertyBinding(c,s[d],o[d]))}else if(p<r){var m=t[p],g=--r,y=t[g];i[y.uuid]=p,t[p]=y,i[h]=g,t[g]=c;for(var d=0,v=a;d!==v;++d){var b=u[d],w=b[g],E=b[p];b[p]=w,E===undefined&&(E=new THREE.PropertyBinding(c,s[d],o[d])),b[g]=E}}else t[p]!==m&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=r},remove:function(e){var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,s=this._bindings,o=s.length;for(var u=0,a=arguments.length;u!==a;++u){var f=arguments[u],l=f.uuid,c=i[l];if(c!==undefined&&c>=r){var h=r++,p=t[h];i[p.uuid]=c,t[c]=p,i[l]=h,t[h]=f;for(var d=0,v=o;d!==v;++d){var m=s[d],g=m[h],y=m[c];m[c]=g,m[h]=y}}}this.nCachedObjects_=r},uncache:function(e){var t=this._objects,n=t.length,r=this.nCachedObjects_,i=this._indicesByUUID,s=this._bindings,o=s.length;for(var u=0,a=arguments.length;u!==a;++u){var f=arguments[u],l=f.uuid,c=i[l];if(c!==undefined){delete i[l];if(c<r){var h=--r,p=t[h],d=--n,v=t[d];i[p.uuid]=c,t[c]=p,i[v.uuid]=h,t[h]=v,t.pop();for(var m=0,g=o;m!==g;++m){var y=s[m],b=y[h],w=y[d];y[c]=b,y[h]=w,y.pop()}}else{var d=--n,v=t[d];i[v.uuid]=c,t[c]=v,t.pop();for(var m=0,g=o;m!==g;++m){var y=s[m];y[c]=y[d],y.pop()}}}}this.nCachedObjects_=r},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,r=n[e],i=this._bindings;if(r!==undefined)return i[r];var s=this._paths,o=this._parsedPaths,u=this._objects,a=u.length,f=this.nCachedObjects_,l=new Array(a);r=i.length,n[e]=r,s.push(e),o.push(t),i.push(l);for(var c=f,h=u.length;c!==h;++c){var p=u[c];l[c]=new THREE.PropertyBinding(p,e,t)}return l},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(n!==undefined){var r=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length-1,u=s[o],a=e[o];t[a]=n,s[n]=u,s.pop(),i[n]=i[o],i.pop(),r[n]=r[o],r.pop()}}},THREE.AnimationUtils={arraySlice:function(e,t,n){return THREE.AnimationUtils.isTypedArray(e)?new e.constructor(e.subarray(t,n)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(t,n){return e[t]-e[n]}var n=e.length,r=new Array(n);for(var i=0;i!==n;++i)r[i]=i;return r.sort(t),r},sortedArray:function(e,t,n){var r=e.length,i=new e.constructor(r);for(var s=0,o=0;o!==r;++s){var u=n[s]*t;for(var a=0;a!==t;++a)i[o++]=e[u+a]}return i},flattenJSON:function(e,t,n,r){var i=1,s=e[0];while(s!==undefined&&s[r]===undefined)s=e[i++];if(s===undefined)return;var o=s[r];if(o===undefined)return;if(Array.isArray(o)){do o=s[r],o!==undefined&&(t.push(s.time),n.push.apply(n,o)),s=e[i++];while(s!==undefined)}else if(o.toArray!==undefined){do o=s[r],o!==undefined&&(t.push(s.time),o.toArray(n,n.length)),s=e[i++];while(s!==undefined)}else do o=s[r],o!==undefined&&(t.push(s.time),n.push(o)),s=e[i++];while(s!==undefined)}},THREE.KeyframeTrack=function(e,t,n,r){if(e===undefined)throw new Error("track name is undefined");if(t===undefined||t.length===0)throw new Error("no keyframes in track named "+e);this.name=e,this.times=THREE.AnimationUtils.convertArray(t,this.TimeBufferType),this.values=THREE.AnimationUtils.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation),this.validate(),this.optimize()},THREE.KeyframeTrack.prototype={constructor:THREE.KeyframeTrack,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodDiscrete:function(e){return new THREE.DiscreteInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new THREE.LinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new THREE.CubicInterpolant(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case THREE.InterpolateDiscrete:t=this.InterpolantFactoryMethodDiscrete;break;case THREE.InterpolateLinear:t=this.InterpolantFactoryMethodLinear;break;case THREE.InterpolateSmooth:t=this.InterpolantFactoryMethodSmooth}if(t===undefined){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===undefined){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}console.warn(n);return}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return THREE.InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return THREE.InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return THREE.InterpolateSmooth}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0){var t=this.times;for(var n=0,r=t.length;n!==r;++n)t[n]+=e}return this},scale:function(e){if(e!==1){var t=this.times;for(var n=0,r=t.length;n!==r;++n)t[n]*=e}return this},trim:function(e,t){var n=this.times,r=n.length,i=0,s=r-1;while(i!==r&&n[i]<e)++i;while(s!==-1&&n[s]>t)--s;++s;if(i!==0||s!==r){i>=s&&(s=Math.max(s,1),i=s-1);var o=this.getValueSize();this.times=THREE.AnimationUtils.arraySlice(n,i,s),this.values=THREE.AnimationUtils.arraySlice(this.values,i*o,s*o)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("invalid value size in track",this),e=!1);var n=this.times,r=this.values,i=n.length;i===0&&(console.error("track is empty",this),e=!1);var s=null;for(var o=0;o!==i;o++){var u=n[o];if(typeof u=="number"&&isNaN(u)){console.error("time is not a valid number",this,o,u),e=!1;break}if(s!==null&&s>u){console.error("out of order keys",this,o,u,s),e=!1;break}s=u}if(r!==undefined&&THREE.AnimationUtils.isTypedArray(r))for(var o=0,a=r.length;o!==a;++o){var f=r[o];if(isNaN(f)){console.error("value is not a valid number",this,o,f),e=!1;break}}return e},optimize:function(){var e=this.times,t=this.values,n=this.getValueSize(),r=1;for(var i=1,s=e.length-1;i<=s;++i){var o=!1,u=e[i],a=e[i+1];if(u!==a&&(i!==1||u!==u[0])){var f=i*n,l=f-n,c=f+n;for(var h=0;h!==n;++h){var p=t[f+h];if(p!==t[l+h]||p!==t[c+h]){o=!0;break}}}if(o){if(i!==r){e[r]=e[i];var d=i*n,v=r*n;for(var h=0;h!==n;++h)t[v+h]=t[d+h]}++r}}return r!==e.length&&(this.times=THREE.AnimationUtils.arraySlice(e,0,r),this.values=THREE.AnimationUtils.arraySlice(t,0,r*n)),this}},Object.assign(THREE.KeyframeTrack,{parse:function(e){if(e.type===undefined)throw new Error("track type undefined, can not parse");var t=THREE.KeyframeTrack._getTrackTypeForValueTypeName(e.type);if(e.times===undefined){var n=[],r=[];THREE.AnimationUtils.flattenJSON(e.keys,n,r,"value"),e.times=n,e.values=r}return t.parse!==undefined?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t=e.constructor,n;if(t.toJSON!==undefined)n=t.toJSON(e);else{n={name:e.name,times:THREE.AnimationUtils.convertArray(e.times,Array),values:THREE.AnimationUtils.convertArray(e.values,Array)};var r=e.getInterpolation();r!==e.DefaultInterpolation&&(n.interpolation=r)}return n.type=e.ValueTypeName,n},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return THREE.NumberKeyframeTrack;case"vector":case"vector2":case"vector3":case"vector4":return THREE.VectorKeyframeTrack;case"color":return THREE.ColorKeyframeTrack;case"quaternion":return THREE.QuaternionKeyframeTrack;case"bool":case"boolean":return THREE.BooleanKeyframeTrack;case"string":return THREE.StringKeyframeTrack}throw new Error("Unsupported typeName: "+e)}}),THREE.PropertyBinding=function(e,t,n){this.path=t,this.parsedPath=n||THREE.PropertyBinding.parseTrackName(t),this.node=THREE.PropertyBinding.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e},THREE.PropertyBinding.prototype={constructor:THREE.PropertyBinding,getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,r=t.propertyName,i=t.propertyIndex;e||(e=THREE.PropertyBinding.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable;if(!e){console.error("  trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var s=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("  can not bind to material as node does not have a material",this);return}if(!e.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===s){s=o;break}break;default:if(e[n]===undefined){console.error("  can not bind to objectName of node, undefined",this);return}e=e[n]}if(s!==undefined){if(e[s]===undefined){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);return}e=e[s]}}var u=e[r];if(u===undefined){var a=t.nodeName;console.error("  trying to update property for track: "+a+"."+r+" but it wasn't found.",e);return}var f=this.Versioning.None;e.needsUpdate!==undefined?(f=this.Versioning.NeedsUpdate,this.targetObject=e):e.matrixWorldNeedsUpdate!==undefined&&(f=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var l=this.BindingType.Direct;if(i!==undefined){if(r==="morphTargetInfluences"){if(!e.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);return}if(!e.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);return}for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===i){i=o;break}}l=this.BindingType.ArrayElement,this.resolvedProperty=u,this.propertyIndex=i}else u.fromArray!==undefined&&u.toArray!==undefined?(l=this.BindingType.HasFromToArray,this.resolvedProperty=u):u.length!==undefined?(l=this.BindingType.EntireArray,this.resolvedProperty=u):this.propertyName=r;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][f]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}},Object.assign(THREE.PropertyBinding.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:THREE.PropertyBinding.prototype.getValue,_setValue_unbound:THREE.PropertyBinding.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){var r=this.resolvedProperty;for(var i=0,s=r.length;i!==s;++i)t[n++]=r[i]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.node[this.propertyName]=t[n]},function(t,n){this.node[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.node[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){var r=this.resolvedProperty;for(var i=0,s=r.length;i!==s;++i)r[i]=t[n++]},function(t,n){var r=this.resolvedProperty;for(var i=0,s=r.length;i!==s;++i)r[i]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){var r=this.resolvedProperty;for(var i=0,s=r.length;i!==s;++i)r[i]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]]}),THREE.PropertyBinding.Composite=function(e,t,n){var r=n||THREE.PropertyBinding.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,r)},THREE.PropertyBinding.Composite.prototype={constructor:THREE.PropertyBinding.Composite,getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,r=this._bindings[n];r!==undefined&&r.getValue(e,t)},setValue:function(e,t){var n=this._bindings;for(var r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(e,t)},bind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){var e=this._bindings;for(var t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},THREE.PropertyBinding.create=function(e,t,n){return e instanceof THREE.AnimationObjectGroup?new THREE.PropertyBinding.Composite(e,t,n):new THREE.PropertyBinding(e,t,n)},THREE.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_.:\- ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,n=t.exec(e);if(!n)throw new Error("cannot parse trackName at all: "+e);n.index===t.lastIndex&&t.lastIndex++;var r={nodeName:n[3],objectName:n[5],objectIndex:n[7],propertyName:n[9],propertyIndex:n[11]};if(r.propertyName===null||r.propertyName.length===0)throw new Error("can not parse propertyName from trackName: "+e);return r},THREE.PropertyBinding.findNode=function(e,t){if(!t||t===""||t==="root"||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=function(e){for(var n=0;n<e.bones.length;n++){var r=e.bones[n];if(r.name===t)return r}return null},r=n(e.skeleton);if(r)return r}if(e.children){var i=function(e){for(var n=0;n<e.length;n++){var r=e[n];if(r.name===t||r.uuid===t)return r;var s=i(r.children);if(s)return s}return null},s=i(e.children);if(s)return s}return null},THREE.PropertyMixer=function(e,t,n){this.binding=e,this.valueSize=n;var r=Float64Array,i;switch(t){case"quaternion":i=this._slerp;break;case"string":case"bool":r=Array,i=this._select;break;default:i=this._lerp}this.buffer=new r(n*4),this._mixBufferRegion=i,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0},THREE.PropertyMixer.prototype={constructor:THREE.PropertyMixer,accumulate:function(e,t){var n=this.buffer,r=this.valueSize,i=e*r+r,s=this.cumulativeWeight;if(s===0){for(var o=0;o!==r;++o)n[i+o]=n[o];s=t}else{s+=t;var u=t/s;this._mixBufferRegion(n,i,0,u,r)}this.cumulativeWeight=s},apply:function(e){var t=this.valueSize,n=this.buffer,r=e*t+t,i=this.cumulativeWeight,s=this.binding;this.cumulativeWeight=0;if(i<1){var o=t*3;this._mixBufferRegion(n,r,o,1-i,t)}for(var u=t,a=t+t;u!==a;++u)if(n[u]!==n[u+t]){s.setValue(n,r);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,r=n*3;e.getValue(t,r);for(var i=n,s=r;i!==s;++i)t[i]=t[r+i%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,r,i){if(r>=.5)for(var s=0;s!==i;++s)e[t+s]=e[n+s]},_slerp:function(e,t,n,r,i){THREE.Quaternion.slerpFlat(e,t,e,t,e,n,r)},_lerp:function(e,t,n,r,i){var s=1-r;for(var o=0;o!==i;++o){var u=t+o;e[u]=e[u]*s+e[n+o]*r}}},THREE.BooleanKeyframeTrack=function(e,t,n){THREE.KeyframeTrack.call(this,e,t,n)},THREE.BooleanKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.BooleanKeyframeTrack,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined}),THREE.ColorKeyframeTrack=function(e,t,n,r){THREE.KeyframeTrack.call(this,e,t,n,r)},THREE.ColorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.ColorKeyframeTrack,ValueTypeName:"color"}),THREE.NumberKeyframeTrack=function(e,t,n,r){THREE.KeyframeTrack.call(this,e,t,n,r)},THREE.NumberKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.NumberKeyframeTrack,ValueTypeName:"number"}),THREE.QuaternionKeyframeTrack=function(e,t,n,r){THREE.KeyframeTrack.call(this,e,t,n,r)},THREE.QuaternionKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.QuaternionKeyframeTrack,ValueTypeName:"quaternion",DefaultInterpolation:THREE.InterpolateLinear,InterpolantFactoryMethodLinear:function(e){return new THREE.QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:undefined}),THREE.StringKeyframeTrack=function(e,t,n,r){THREE.KeyframeTrack.call(this,e,t,n,r)},THREE.StringKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.StringKeyframeTrack,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:THREE.InterpolateDiscrete,InterpolantFactoryMethodLinear:undefined,InterpolantFactoryMethodSmooth:undefined}),THREE.VectorKeyframeTrack=function(e,t,n,r){THREE.KeyframeTrack.call(this,e,t,n,r)},THREE.VectorKeyframeTrack.prototype=Object.assign(Object.create(THREE.KeyframeTrack.prototype),{constructor:THREE.VectorKeyframeTrack,ValueTypeName:"vector"}),THREE.Audio=function(e){THREE.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]},THREE.Audio.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Audio,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setBuffer:function(e){return this.source.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}var e=this.context.createBufferSource();return e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=0,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&(this.source.playbackRate.value=this.playbackRate),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.source.loop},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this.source.loop=e},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.value=e,this}}),THREE.AudioAnalyser=function(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==undefined?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)},Object.assign(THREE.AudioAnalyser.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){var e=0,t=this.getFrequencyData();for(var n=0;n<t.length;n++)e+=t[n];return e/t.length}}),Object.defineProperty(THREE,"AudioContext",{get:function(){var e;return function(){return e===undefined&&(e=new(window.AudioContext||window.webkitAudioContext)),e}}()}),THREE.PositionalAudio=function(e){THREE.Audio.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)},THREE.PositionalAudio.prototype=Object.assign(Object.create(THREE.Audio.prototype),{constructor:THREE.PositionalAudio,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new THREE.Vector3;return function(n){THREE.Object3D.prototype.updateMatrixWorld.call(this,n),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}()}),THREE.AudioListener=function(){THREE.Object3D.call(this),this.type="AudioListener",this.context=THREE.AudioContext,this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null},THREE.AudioListener.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.AudioListener,getInput:function(){return this.gain},removeFilter:function(){this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(e){this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new THREE.Vector3,t=new THREE.Quaternion,n=new THREE.Vector3,r=new THREE.Vector3;return function(s){THREE.Object3D.prototype.updateMatrixWorld.call(this,s);var o=this.context.listener,u=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),o.setPosition(e.x,e.y,e.z),o.setOrientation(r.x,r.y,r.z,u.x,u.y,u.z)}}()}),THREE.Camera=function(){THREE.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.getWorldDirection=function(){var e=new THREE.Quaternion;return function(n){var r=n||new THREE.Vector3;return this.getWorldQuaternion(e),r.set(0,0,-1).applyQuaternion(e)}}()
,THREE.Camera.prototype.lookAt=function(){var e=new THREE.Matrix4;return function(n){e.lookAt(this.position,n,this.up),this.quaternion.setFromRotationMatrix(e)}}(),THREE.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},THREE.Camera.prototype.copy=function(e){return THREE.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},THREE.CubeCamera=function(e,t,n){THREE.Object3D.call(this),this.type="CubeCamera";var r=90,i=1,s=new THREE.PerspectiveCamera(r,i,e,t);s.up.set(0,-1,0),s.lookAt(new THREE.Vector3(1,0,0)),this.add(s);var o=new THREE.PerspectiveCamera(r,i,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var u=new THREE.PerspectiveCamera(r,i,e,t);u.up.set(0,0,1),u.lookAt(new THREE.Vector3(0,1,0)),this.add(u);var a=new THREE.PerspectiveCamera(r,i,e,t);a.up.set(0,0,-1),a.lookAt(new THREE.Vector3(0,-1,0)),this.add(a);var f=new THREE.PerspectiveCamera(r,i,e,t);f.up.set(0,-1,0),f.lookAt(new THREE.Vector3(0,0,1)),this.add(f);var l=new THREE.PerspectiveCamera(r,i,e,t);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),this.add(l);var c={format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter};this.renderTarget=new THREE.WebGLRenderTargetCube(n,n,c),this.updateCubeMap=function(e,t){this.parent===null&&this.updateMatrixWorld();var n=this.renderTarget,r=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,s,n),n.activeCubeFace=1,e.render(t,o,n),n.activeCubeFace=2,e.render(t,u,n),n.activeCubeFace=3,e.render(t,a,n),n.activeCubeFace=4,e.render(t,f,n),n.texture.generateMipmaps=r,n.activeCubeFace=5,e.render(t,l,n),e.setRenderTarget(null)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.OrthographicCamera=function(e,t,n,r,i,s){THREE.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=i!==undefined?i:.1,this.far=s!==undefined?s:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.OrthographicCamera,copy:function(e){return THREE.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,r,i,s){this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:s},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2,i=n-e,s=n+e,o=r+t,u=r-t;if(this.view!==null){var a=this.zoom/(this.view.width/this.view.fullWidth),f=this.zoom/(this.view.height/this.view.fullHeight),l=(this.right-this.left)/this.view.width,c=(this.top-this.bottom)/this.view.height;i+=l*(this.view.offsetX/a),s=i+l*(this.view.width/a),o-=c*(this.view.offsetY/f),u=o-c*(this.view.height/f)}this.projectionMatrix.makeOrthographic(i,s,o,u,this.near,this.far)},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}),THREE.PerspectiveCamera=function(e,t,n,r){THREE.Camera.call(this),this.type="PerspectiveCamera",this.fov=e!==undefined?e:50,this.zoom=1,this.near=n!==undefined?n:.1,this.far=r!==undefined?r:2e3,this.focus=10,this.aspect=t!==undefined?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.assign(Object.create(THREE.Camera.prototype),{constructor:THREE.PerspectiveCamera,copy:function(e){return THREE.Camera.prototype.copy.call(this,e),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=THREE.Math.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(THREE.Math.DEG2RAD*.5*this.fov);return.5*this.getFilmHeight()/e},getEffectiveFOV:function(){return THREE.Math.RAD2DEG*2*Math.atan(Math.tan(THREE.Math.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,r,i,s){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:r,width:i,height:s},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(THREE.Math.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,r=this.aspect*n,i=-0.5*r,s=this.view;if(s!==null){var o=s.fullWidth,u=s.fullHeight;i+=s.offsetX*r/o,t-=s.offsetY*n/u,r*=s.width/o,n*=s.height/u}var a=this.filmOffset;a!==0&&(i+=e*a/this.getFilmWidth()),this.projectionMatrix.makeFrustum(i,i+r,t-n,t,e,this.far)},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}),THREE.StereoCamera=function(){this.type="StereoCamera",this.aspect=1,this.cameraL=new THREE.PerspectiveCamera,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new THREE.PerspectiveCamera,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1},Object.assign(THREE.StereoCamera.prototype,{update:function(){var e,t,n,r,i,s=new THREE.Matrix4,o=new THREE.Matrix4;return function(a){var f=e!==a.focus||t!==a.fov||n!==a.aspect*this.aspect||r!==a.near||i!==a.far;if(f){e=a.focus,t=a.fov,n=a.aspect*this.aspect,r=a.near,i=a.far;var l=a.projectionMatrix.clone(),c=.032,h=c*r/e,p=r*Math.tan(THREE.Math.DEG2RAD*t*.5),d,v;o.elements[12]=-c,s.elements[12]=c,d=-p*n+h,v=p*n+h,l.elements[0]=2*r/(v-d),l.elements[8]=(v+d)/(v-d),this.cameraL.projectionMatrix.copy(l),d=-p*n-h,v=p*n-h,l.elements[0]=2*r/(v-d),l.elements[8]=(v+d)/(v-d),this.cameraR.projectionMatrix.copy(l)}this.cameraL.matrixWorld.copy(a.matrixWorld).multiply(o),this.cameraR.matrixWorld.copy(a.matrixWorld).multiply(s)}}()}),THREE.Light=function(e,t){THREE.Object3D.call(this),this.type="Light",this.color=new THREE.Color(e),this.intensity=t!==undefined?t:1,this.receiveShadow=undefined},THREE.Light.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Light,copy:function(e){return THREE.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==undefined&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==undefined&&(t.object.distance=this.distance),this.angle!==undefined&&(t.object.angle=this.angle),this.decay!==undefined&&(t.object.decay=this.decay),this.penumbra!==undefined&&(t.object.penumbra=this.penumbra),t}}),THREE.LightShadow=function(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new THREE.Vector2(512,512),this.map=null,this.matrix=new THREE.Matrix4},Object.assign(THREE.LightShadow.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return(new this.constructor).copy(this)}}),THREE.AmbientLight=function(e,t){THREE.Light.call(this,e,t),this.type="AmbientLight",this.castShadow=undefined},THREE.AmbientLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.AmbientLight}),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e,t),this.type="DirectionalLight",this.position.copy(THREE.Object3D.DefaultUp),this.updateMatrix(),this.target=new THREE.Object3D,this.shadow=new THREE.DirectionalLightShadow},THREE.DirectionalLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.DirectionalLight,copy:function(e){return THREE.Light.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),THREE.DirectionalLightShadow=function(e){THREE.LightShadow.call(this,new THREE.OrthographicCamera(-5,5,5,-5,.5,500))},THREE.DirectionalLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.DirectionalLightShadow}),THREE.HemisphereLight=function(e,t,n){THREE.Light.call(this,e,n),this.type="HemisphereLight",this.castShadow=undefined,this.position.copy(THREE.Object3D.DefaultUp),this.updateMatrix(),this.groundColor=new THREE.Color(t)},THREE.HemisphereLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.HemisphereLight,copy:function(e){return THREE.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}),THREE.PointLight=function(e,t,n,r){THREE.Light.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}}),this.distance=n!==undefined?n:0,this.decay=r!==undefined?r:1,this.shadow=new THREE.LightShadow(new THREE.PerspectiveCamera(90,1,.5,500))},THREE.PointLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.PointLight,copy:function(e){return THREE.Light.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}),THREE.SpotLight=function(e,t,n,r,i,s){THREE.Light.call(this,e,t),this.type="SpotLight",this.position.copy(THREE.Object3D.DefaultUp),this.updateMatrix(),this.target=new THREE.Object3D,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}}),this.distance=n!==undefined?n:0,this.angle=r!==undefined?r:Math.PI/3,this.penumbra=i!==undefined?i:0,this.decay=s!==undefined?s:1,this.shadow=new THREE.SpotLightShadow},THREE.SpotLight.prototype=Object.assign(Object.create(THREE.Light.prototype),{constructor:THREE.SpotLight,copy:function(e){return THREE.Light.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}),THREE.SpotLightShadow=function(){THREE.LightShadow.call(this,new THREE.PerspectiveCamera(50,1,.5,500))},THREE.SpotLightShadow.prototype=Object.assign(Object.create(THREE.LightShadow.prototype),{constructor:THREE.SpotLightShadow,update:function(e){var t=THREE.Math.RAD2DEG*2*e.angle,n=this.mapSize.width/this.mapSize.height,r=e.distance||500,i=this.camera;if(t!==i.fov||n!==i.aspect||r!==i.far)i.fov=t,i.aspect=n,i.far=r,i.updateProjectionMatrix()}}),THREE.AudioLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.AudioLoader.prototype,{load:function(e,t,n,r){var i=new THREE.XHRLoader(this.manager);i.setResponseType("arraybuffer"),i.load(e,function(e){var n=THREE.AudioContext;n.decodeAudioData(e,function(e){t(e)})},n,r)}}),THREE.Cache={enabled:!1,files:{},add:function(e,t){if(this.enabled===!1)return;this.files[e]=t},get:function(e){if(this.enabled===!1)return;return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},THREE.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:undefined,extractUrlBase:function(e){var t=e.split("/");return t.length===1?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){var r=[];for(var i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e,t,n;return function(i,s,o){function a(e,n,r,i,a){var f=s+e,l=THREE.Loader.Handlers.get(f),c;l!==null?c=l.load(f):(t.setCrossOrigin(o),c=t.load(f)),n!==undefined&&(c.repeat.fromArray(n),n[0]!==1&&(c.wrapS=THREE.RepeatWrapping),n[1]!==1&&(c.wrapT=THREE.RepeatWrapping)),r!==undefined&&c.offset.fromArray(r),i!==undefined&&(i[0]==="repeat"&&(c.wrapS=THREE.RepeatWrapping),i[0]==="mirror"&&(c.wrapS=THREE.MirroredRepeatWrapping),i[1]==="repeat"&&(c.wrapT=THREE.RepeatWrapping),i[1]==="mirror"&&(c.wrapT=THREE.MirroredRepeatWrapping)),a!==undefined&&(c.anisotropy=a);var h=THREE.Math.generateUUID();return u[h]=c,h}e===undefined&&(e=new THREE.Color),t===undefined&&(t=new THREE.TextureLoader),n===undefined&&(n=new THREE.MaterialLoader);var u={},f={uuid:THREE.Math.generateUUID(),type:"MeshLambertMaterial"};for(var l in i){var c=i[l];switch(l){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":f.name=c;break;case"blending":f.blending=THREE[c];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",l,"is no longer supported.");break;case"colorDiffuse":f.color=e.fromArray(c).getHex();break;case"colorSpecular":f.specular=e.fromArray(c).getHex();break;case"colorEmissive":f.emissive=e.fromArray(c).getHex();break;case"specularCoef":f.shininess=c;break;case"shading":c.toLowerCase()==="basic"&&(f.type="MeshBasicMaterial"),c.toLowerCase()==="phong"&&(f.type="MeshPhongMaterial"),c.toLowerCase()==="standard"&&(f.type="MeshStandardMaterial");break;case"mapDiffuse":f.map=a(c,i.mapDiffuseRepeat,i.mapDiffuseOffset,i.mapDiffuseWrap,i.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":f.emissiveMap=a(c,i.mapEmissiveRepeat,i.mapEmissiveOffset,i.mapEmissiveWrap,i.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":f.lightMap=a(c,i.mapLightRepeat,i.mapLightOffset,i.mapLightWrap,i.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":f.aoMap=a(c,i.mapAORepeat,i.mapAOOffset,i.mapAOWrap,i.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":f.bumpMap=a(c,i.mapBumpRepeat,i.mapBumpOffset,i.mapBumpWrap,i.mapBumpAnisotropy);break;case"mapBumpScale":f.bumpScale=c;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":f.normalMap=a(c,i.mapNormalRepeat,i.mapNormalOffset,i.mapNormalWrap,i.mapNormalAnisotropy);break;case"mapNormalFactor":f.normalScale=[c,c];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":f.specularMap=a(c,i.mapSpecularRepeat,i.mapSpecularOffset,i.mapSpecularWrap,i.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":f.metalnessMap=a(c,i.mapMetalnessRepeat,i.mapMetalnessOffset,i.mapMetalnessWrap,i.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":f.roughnessMap=a(c,i.mapRoughnessRepeat,i.mapRoughnessOffset,i.mapRoughnessWrap,i.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":f.alphaMap=a(c,i.mapAlphaRepeat,i.mapAlphaOffset,i.mapAlphaWrap,i.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":f.side=THREE.BackSide;break;case"doubleSided":f.side=THREE.DoubleSide;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),f.opacity=c;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":f[l]=c;break;case"vertexColors":c===!0&&(f.vertexColors=THREE.VertexColors),c==="face"&&(f.vertexColors=THREE.FaceColors);break;default:console.error("THREE.Loader.createMaterial: Unsupported",l,c)}}return f.type==="MeshBasicMaterial"&&delete f.emissive,f.type!=="MeshPhongMaterial"&&delete f.specular,f.opacity<1&&(f.transparent=!0),n.setTextures(u),n.parse(f)}}()},THREE.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){var t=this.handlers;for(var n=0,r=t.length;n<r;n+=2){var i=t[n],s=t[n+1];if(i.test(e))return s}return null}},THREE.XHRLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.XHRLoader.prototype,{load:function(e,t,n,r){this.path!==undefined&&(e=this.path+e);var i=this,s=THREE.Cache.get(e);if(s!==undefined)return i.manager.itemStart(e),setTimeout(function(){t&&t(s),i.manager.itemEnd(e)},0),s;var o=new XMLHttpRequest;return o.overrideMimeType("text/plain"),o.open("GET",e,!0),o.addEventListener("load",function(n){var s=n.target.response;THREE.Cache.add(e,s),this.status===200?(t&&t(s),i.manager.itemEnd(e)):this.status===0?(console.warn("THREE.XHRLoader: HTTP Status 0 received."),t&&t(s),i.manager.itemEnd(e)):(r&&r(n),i.manager.itemError(e))},!1),n!==undefined&&o.addEventListener("progress",function(e){n(e)},!1),o.addEventListener("error",function(t){r&&r(t),i.manager.itemError(e)},!1),this.responseType!==undefined&&(o.responseType=this.responseType),this.withCredentials!==undefined&&(o.withCredentials=this.withCredentials),o.send(null),i.manager.itemStart(e),o},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this}}),THREE.FontLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.FontLoader.prototype,{load:function(e,t,n,r){var i=this,s=new THREE.XHRLoader(this.manager);s.load(e,function(e){var n;try{n=JSON.parse(e)}catch(r){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var s=i.parse(n);t&&t(s)},n,r)},parse:function(e){return new THREE.Font(e)}}),THREE.ImageLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.ImageLoader.prototype,{load:function(e,t,n,r){var i=this,s=document.createElementNS("http://www.w3.org/1999/xhtml","img");s.onload=function(){URL.revokeObjectURL(s.src),t&&t(s),i.manager.itemEnd(e)};if(e.indexOf("data:")===0)s.src=e;else{var o=new THREE.XHRLoader;o.setPath(this.path),o.setResponseType("blob"),o.load(e,function(e){s.src=URL.createObjectURL(e)},n,r)}return i.manager.itemStart(e),s},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),THREE.JSONLoader=function(e){typeof e=="boolean"&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=undefined),this.manager=e!==undefined?e:THREE.DefaultLoadingManager,this.withCredentials=!1},Object.assign(THREE.JSONLoader.prototype,{load:function(e,t,n,r){var i=this,s=this.texturePath&&typeof this.texturePath=="string"?this.texturePath:THREE.Loader.prototype.extractUrlBase(e),o=new THREE.XHRLoader(this.manager);o.setWithCredentials(this.withCredentials),o.load(e,function(n){var r=JSON.parse(n),o=r.metadata;if(o!==undefined){var u=o.type;if(u!==undefined){if(u.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");return}if(u.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.");return}}}var a=i.parse(r,s);t(a.geometry,a.materials)},n,r)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){function i(t){function r(e,t){return e&1<<t}var i,s,o,u,a,f,l,c,h,p,d,v,m,g,y,b,w,E,S,x,T,N,C,k,L,A,O,M=e.faces,_=e.vertices,D=e.normals,P=e.colors,H=0;if(e.uvs!==undefined){for(i=0;i<e.uvs.length;i++)e.uvs[i].length&&H++;for(i=0;i<H;i++)n.faceVertexUvs[i]=[]}u=0,a=_.length;while(u<a)E=new THREE.Vector3,E.x=_[u++]*t,E.y=_[u++]*t,E.z=_[u++]*t,n.vertices.push(E);u=0,a=M.length;while(u<a){p=M[u++],d=r(p,0),v=r(p,1),m=r(p,3),g=r(p,4),y=r(p,5),b=r(p,6),w=r(p,7);if(d){x=new THREE.Face3,x.a=M[u],x.b=M[u+1],x.c=M[u+3],T=new THREE.Face3,T.a=M[u+1],T.b=M[u+2],T.c=M[u+3],u+=4,v&&(h=M[u++],x.materialIndex=h,T.materialIndex=h),o=n.faces.length;if(m)for(i=0;i<H;i++){k=e.uvs[i],n.faceVertexUvs[i][o]=[],n.faceVertexUvs[i][o+1]=[];for(s=0;s<4;s++)c=M[u++],A=k[c*2],O=k[c*2+1],L=new THREE.Vector2(A,O),s!==2&&n.faceVertexUvs[i][o].push(L),s!==0&&n.faceVertexUvs[i][o+1].push(L)}g&&(l=M[u++]*3,x.normal.set(D[l++],D[l++],D[l]),T.normal.copy(x.normal));if(y)for(i=0;i<4;i++)l=M[u++]*3,C=new THREE.Vector3(D[l++],D[l++],D[l]),i!==2&&x.vertexNormals.push(C),i!==0&&T.vertexNormals.push(C);b&&(f=M[u++],N=P[f],x.color.setHex(N),T.color.setHex(N));if(w)for(i=0;i<4;i++)f=M[u++],N=P[f],i!==2&&x.vertexColors.push(new THREE.Color(N)),i!==0&&T.vertexColors.push(new THREE.Color(N));n.faces.push(x),n.faces.push(T)}else{S=new THREE.Face3,S.a=M[u++],S.b=M[u++],S.c=M[u++],v&&(h=M[u++],S.materialIndex=h),o=n.faces.length;if(m)for(i=0;i<H;i++){k=e.uvs[i],n.faceVertexUvs[i][o]=[];for(s=0;s<3;s++)c=M[u++],A=k[c*2],O=k[c*2+1],L=new THREE.Vector2(A,O),n.faceVertexUvs[i][o].push(L)}g&&(l=M[u++]*3,S.normal.set(D[l++],D[l++],D[l]));if(y)for(i=0;i<3;i++)l=M[u++]*3,C=new THREE.Vector3(D[l++],D[l++],D[l]),S.vertexNormals.push(C);b&&(f=M[u++],S.color.setHex(P[f]));if(w)for(i=0;i<3;i++)f=M[u++],S.vertexColors.push(new THREE.Color(P[f]));n.faces.push(S)}}}function s(){var t=e.influencesPerVertex!==undefined?e.influencesPerVertex:2;if(e.skinWeights)for(var r=0,i=e.skinWeights.length;r<i;r+=t){var s=e.skinWeights[r],o=t>1?e.skinWeights[r+1]:0,u=t>2?e.skinWeights[r+2]:0,a=t>3?e.skinWeights[r+3]:0;n.skinWeights.push(new THREE.Vector4(s,o,u,a))}if(e.skinIndices)for(var r=0,i=e.skinIndices.length;r<i;r+=t){var f=e.skinIndices[r],l=t>1?e.skinIndices[r+1]:0,c=t>2?e.skinIndices[r+2]:0,h=t>3?e.skinIndices[r+3]:0;n.skinIndices.push(new THREE.Vector4(f,l,c,h))}n.bones=e.bones,n.bones&&n.bones.length>0&&(n.skinWeights.length!==n.skinIndices.length||n.skinIndices.length!==n.vertices.length)&&console.warn("When skinning, number of vertices ("+n.vertices.length+"), skinIndices ("+n.skinIndices.length+"), and skinWeights ("+n.skinWeights.length+") should match.")}function o(t){if(e.morphTargets!==undefined)for(var r=0,i=e.morphTargets.length;r<i;r++){n.morphTargets[r]={},n.morphTargets[r].name=e.morphTargets[r].name,n.morphTargets[r].vertices=[];var s=n.morphTargets[r].vertices,o=e.morphTargets[r].vertices;for(var u=0,a=o.length;u<a;u+=3){var f=new THREE.Vector3;f.x=o[u]*t,f.y=o[u+1]*t,f.z=o[u+2]*t,s.push(f)}}if(e.morphColors!==undefined&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');var l=n.faces,c=e.morphColors[0].colors;for(var r=0,i=l.length;r<i;r++)l[r].color.fromArray(c,r*3)}}function u(){var t=[],r=[];e.animation!==undefined&&r.push(e.animation),e.animations!==undefined&&(e.animations.length?r=r.concat(e.animations):r.push(e.animations));for(var i=0;i<r.length;i++){var s=THREE.AnimationClip.parseAnimation(r[i],n.bones);s&&t.push(s)}if(n.morphTargets){var o=THREE.AnimationClip.CreateClipsFromMorphTargetSequences(n.morphTargets,10);t=t.concat(o)}t.length>0&&(n.animations=t)}var n=new THREE.Geometry,r=e.scale!==undefined?1/e.scale:1;i(r),s(),o(r),u(),n.computeFaceNormals(),n.computeBoundingSphere();if(e.materials===undefined||e.materials.length===0)return{geometry:n};var a=THREE.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:n,materials:a}}}),THREE.LoadingManager=function(e,t,n){var r=this,i=!1,s=0,o=0;this.onStart=undefined,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,i===!1&&r.onStart!==undefined&&r.onStart(e,s,o),i=!0},this.itemEnd=function(e){s++,r.onProgress!==undefined&&r.onProgress(e,s,o),s===o&&(i=!1,r.onLoad!==undefined&&r.onLoad())},this.itemError=function(e){r.onError!==undefined&&r.onError(e)}},THREE.DefaultLoadingManager=new THREE.LoadingManager,THREE.BufferGeometryLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.BufferGeometryLoader.prototype,{load:function(e,t,n,r){var i=this,s=new THREE.XHRLoader(i.manager);s.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},parse:function(e){var t=new THREE.BufferGeometry,n=e.data.index,r={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};if(n!==undefined){var i=new r[n.type](n.array);t.setIndex(new THREE.BufferAttribute(i,1))}var s=e.data.attributes;for(var o in s){var u=s[o],i=new r[u.type](u.array);t.addAttribute(o,new THREE.BufferAttribute(i,u.itemSize,u.normalized))}var a=e.data.groups||e.data.drawcalls||e.data.offsets;if(a!==undefined)for(var f=0,l=a.length;f!==l;++f){var c=a[f];t.addGroup(c.start,c.count,c.materialIndex)}var h=e.data.boundingSphere;if(h!==undefined){var p=new THREE.Vector3;h.center!==undefined&&p.fromArray(h.center),t.boundingSphere=new THREE.Sphere(p,h.radius)}return t}}),THREE.MaterialLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager,this.textures={}},Object.assign(THREE.MaterialLoader.prototype,{load:function(e,t,n,r){var i=this,s=new THREE.XHRLoader(i.manager);s.load(e,function(e){t(i.parse(JSON.parse(e)))},n,r)},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return t[e]===undefined&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]},parse:function(e){var t=new THREE[e.type];e.uuid!==undefined&&(t.uuid=e.uuid),e.name!==undefined&&(t.name=e.name),e.color!==undefined&&t.color.setHex(e.color),e.roughness!==undefined&&(t.roughness=e.roughness),e.metalness!==undefined&&(t.metalness=e.metalness),e.emissive!==undefined&&t.emissive.setHex(e.emissive),e.specular!==undefined&&t.specular.setHex(e.specular),e.shininess!==undefined&&(t.shininess=e.shininess),e.uniforms!==undefined&&(t.uniforms=e.uniforms),e.vertexShader!==undefined&&(t.vertexShader=e.vertexShader),e.fragmentShader!==undefined&&(t.fragmentShader=e.fragmentShader),e.vertexColors!==undefined&&(t.vertexColors=e.vertexColors),e.shading!==undefined&&(t.shading=e.shading),e.blending!==undefined&&(t.blending=e.blending),e.side!==undefined&&(t.side=e.side),e.opacity!==undefined&&(t.opacity=e.opacity),e.transparent!==undefined&&(t.transparent=e.transparent),e.alphaTest!==undefined&&(t.alphaTest=e.alphaTest),e.depthTest!==undefined&&(t.depthTest=e.depthTest),e.depthWrite!==undefined&&(t.depthWrite=e.depthWrite),e.colorWrite!==undefined&&(t.colorWrite=e.colorWrite),e.wireframe!==undefined&&(t.wireframe=e.wireframe),e.wireframeLinewidth!==undefined&&(t.wireframeLinewidth=e.wireframeLinewidth),e.size!==undefined&&(t.size=e.size),e.sizeAttenuation!==undefined&&(t.sizeAttenuation=e.sizeAttenuation),e.map!==undefined&&(t.map=this.getTexture(e.map)),e.alphaMap!==undefined&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),e.bumpMap!==undefined&&(t.bumpMap=this.getTexture(e.bumpMap)),e.bumpScale!==undefined&&(t.bumpScale=e.bumpScale),e.normalMap!==undefined&&(t.normalMap=this.getTexture(e.normalMap));if(e.normalScale!==undefined){var n=e.normalScale;Array.isArray(n)===!1&&(n=[n,n]),t.normalScale=(new THREE.Vector2).fromArray(n)}e.displacementMap!==undefined&&(t.displacementMap=this.getTexture(e.displacementMap)),e.displacementScale!==undefined&&(t.displacementScale=e.displacementScale),e.displacementBias!==undefined&&(t.displacementBias=e.displacementBias),e.roughnessMap!==undefined&&(t.roughnessMap=this.getTexture(e.roughnessMap)),e.metalnessMap!==undefined&&(t.metalnessMap=this.getTexture(e.metalnessMap)),e.emissiveMap!==undefined&&(t.emissiveMap=this.getTexture(e.emissiveMap)),e.emissiveIntensity!==undefined&&(t.emissiveIntensity=e.emissiveIntensity),e.specularMap!==undefined&&(t.specularMap=this.getTexture(e.specularMap)),e.envMap!==undefined&&(t.envMap=this.getTexture(e.envMap),t.combine=THREE.MultiplyOperation),e.reflectivity!==undefined&&(t.reflectivity=e.reflectivity),e.lightMap!==undefined&&(t.lightMap=this.getTexture(e.lightMap)),e.lightMapIntensity!==undefined&&(t.lightMapIntensity=e.lightMapIntensity),e.aoMap!==undefined&&(t.aoMap=this.getTexture(e.aoMap)),e.aoMapIntensity!==undefined&&(t.aoMapIntensity=e.aoMapIntensity);if(e.materials!==undefined)for(var r=0,i=e.materials.length;r<i;r++)t.materials.push(this.parse(e.materials[r]));return t}}),THREE.ObjectLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager,this.texturePath=""},Object.assign(THREE.ObjectLoader.prototype,{load:function(e,t,n,r){this.texturePath===""&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var i=this,s=new THREE.XHRLoader(i.manager);s.load(e,function(e){i.parse(JSON.parse(e),t)},n,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),r=this.parseImages(e.images,function(){t!==undefined&&t(o)}),i=this.parseTextures(e.textures,r),s=this.parseMaterials(e.materials,i),o=this.parseObject(e.object,n,s);return e.animations&&(o.animations=this.parseAnimations(e.animations)),(e.images===undefined||e.images.length===0)&&t!==undefined&&t(o),o},parseGeometries:function(e){var t={};if(e!==undefined){var n=new THREE.JSONLoader,r=new THREE.BufferGeometryLoader;for(var i=0,s=e.length;i<s;i++){var o,u=e[i];switch(u.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new THREE[u.type](u.width,u.height,u.widthSegments,u.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new THREE[u.type](u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new THREE[u.type](u.radius,u.segments,u.thetaStart,u.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new THREE[u.type](u.radiusTop,u.radiusBottom,u.height,u.radialSegments,u.heightSegments,u.openEnded,u.thetaStart,u.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new THREE[u.type](u.radius,u.height,u.radialSegments,u.heightSegments,u.openEnded,u.thetaStart,u.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new THREE[u.type](u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new THREE[u.type](u.radius,u.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new THREE[u.type](u.innerRadius,u.outerRadius,u.thetaSegments,u.phiSegments,u.thetaStart,u.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new THREE[u.type](u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new THREE[u.type](u.radius,u.tube,u.tubularSegments,u.radialSegments,u.p,u.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new THREE[u.type](u.points,u.segments,u.phiStart,u.phiLength);break;case"BufferGeometry":o=r.parse(u);break;case"Geometry":o=n.parse(u.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+u.type+'"');continue}o.uuid=u.uuid,u.name!==undefined&&(o.name=u.name),t[u.uuid]=o}}return t},parseMaterials:function(e,t){var n={};if(e!==undefined){var r=new THREE.MaterialLoader;r.setTextures(t);for(var i=0,s=e.length;i<s;i++){var o=r.parse(e[i]);n[o.uuid]=o}}return n},parseAnimations:function(e){var t=[];for(var n=0;n<e.length;n++){var r=THREE.AnimationClip.parse(e[n]);t.push(r)}return t},parseImages:function(e,t){function i(e){return n.manager.itemStart(e),o.load(e,function(){n.manager.itemEnd(e)})}var n=this,r={};if(e!==undefined&&e.length>0){var s=new THREE.LoadingManager(t),o=new THREE.ImageLoader(s);o.setCrossOrigin(this.crossOrigin);for(var u=0,a=e.length;u<a;u++){var f=e[u],l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(f.url)?f.url:n.texturePath+f.url;r[f.uuid]=i(l)}}return r},parseTextures:function(e,t){function n(e){return typeof e=="number"?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form."
,e),THREE[e])}var r={};if(e!==undefined)for(var i=0,s=e.length;i<s;i++){var o=e[i];o.image===undefined&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===undefined&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var u=new THREE.Texture(t[o.image]);u.needsUpdate=!0,u.uuid=o.uuid,o.name!==undefined&&(u.name=o.name),o.mapping!==undefined&&(u.mapping=n(o.mapping)),o.offset!==undefined&&u.offset.fromArray(o.offset),o.repeat!==undefined&&u.repeat.fromArray(o.repeat),o.wrap!==undefined&&(u.wrapS=n(o.wrap[0]),u.wrapT=n(o.wrap[1])),o.minFilter!==undefined&&(u.minFilter=n(o.minFilter)),o.magFilter!==undefined&&(u.magFilter=n(o.magFilter)),o.anisotropy!==undefined&&(u.anisotropy=o.anisotropy),o.flipY!==undefined&&(u.flipY=o.flipY),r[o.uuid]=u}return r},parseObject:function(){var e=new THREE.Matrix4;return function(n,r,i){function o(e){return r[e]===undefined&&console.warn("THREE.ObjectLoader: Undefined geometry",e),r[e]}function u(e){return e===undefined?undefined:(i[e]===undefined&&console.warn("THREE.ObjectLoader: Undefined material",e),i[e])}var s;switch(n.type){case"Scene":s=new THREE.Scene;break;case"PerspectiveCamera":s=new THREE.PerspectiveCamera(n.fov,n.aspect,n.near,n.far),n.focus!==undefined&&(s.focus=n.focus),n.zoom!==undefined&&(s.zoom=n.zoom),n.filmGauge!==undefined&&(s.filmGauge=n.filmGauge),n.filmOffset!==undefined&&(s.filmOffset=n.filmOffset),n.view!==undefined&&(s.view=Object.assign({},n.view));break;case"OrthographicCamera":s=new THREE.OrthographicCamera(n.left,n.right,n.top,n.bottom,n.near,n.far);break;case"AmbientLight":s=new THREE.AmbientLight(n.color,n.intensity);break;case"DirectionalLight":s=new THREE.DirectionalLight(n.color,n.intensity);break;case"PointLight":s=new THREE.PointLight(n.color,n.intensity,n.distance,n.decay);break;case"SpotLight":s=new THREE.SpotLight(n.color,n.intensity,n.distance,n.angle,n.penumbra,n.decay);break;case"HemisphereLight":s=new THREE.HemisphereLight(n.color,n.groundColor,n.intensity);break;case"Mesh":var a=o(n.geometry),f=u(n.material);a.bones&&a.bones.length>0?s=new THREE.SkinnedMesh(a,f):s=new THREE.Mesh(a,f);break;case"LOD":s=new THREE.LOD;break;case"Line":s=new THREE.Line(o(n.geometry),u(n.material),n.mode);break;case"PointCloud":case"Points":s=new THREE.Points(o(n.geometry),u(n.material));break;case"Sprite":s=new THREE.Sprite(u(n.material));break;case"Group":s=new THREE.Group;break;default:s=new THREE.Object3D}s.uuid=n.uuid,n.name!==undefined&&(s.name=n.name),n.matrix!==undefined?(e.fromArray(n.matrix),e.decompose(s.position,s.quaternion,s.scale)):(n.position!==undefined&&s.position.fromArray(n.position),n.rotation!==undefined&&s.rotation.fromArray(n.rotation),n.scale!==undefined&&s.scale.fromArray(n.scale)),n.castShadow!==undefined&&(s.castShadow=n.castShadow),n.receiveShadow!==undefined&&(s.receiveShadow=n.receiveShadow),n.visible!==undefined&&(s.visible=n.visible),n.userData!==undefined&&(s.userData=n.userData);if(n.children!==undefined)for(var l in n.children)s.add(this.parseObject(n.children[l],r,i));if(n.type==="LOD"){var c=n.levels;for(var h=0;h<c.length;h++){var p=c[h],l=s.getObjectByProperty("uuid",p.object);l!==undefined&&s.addLevel(l,p.distance)}}return s}}()}),THREE.TextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.TextureLoader.prototype,{load:function(e,t,n,r){var i=new THREE.Texture,s=new THREE.ImageLoader(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setPath(this.path),s.load(e,function(n){var r=e.search(/\.(jpg|jpeg)$/)>0||e.search(/^data\:image\/jpeg/)===0;i.format=r?THREE.RGBFormat:THREE.RGBAFormat,i.image=n,i.needsUpdate=!0,t!==undefined&&t(i)},n,r),i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),THREE.CubeTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager},Object.assign(THREE.CubeTextureLoader.prototype,{load:function(e,t,n,r){function u(n){s.load(e[n],function(e){i.images[n]=e,o++,o===6&&(i.needsUpdate=!0,t&&t(i))},undefined,r)}var i=new THREE.CubeTexture,s=new THREE.ImageLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setPath(this.path);var o=0;for(var a=0;a<e.length;++a)u(a);return i},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}}),THREE.DataTextureLoader=THREE.BinaryTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager,this._parser=null},Object.assign(THREE.BinaryTextureLoader.prototype,{load:function(e,t,n,r){var i=this,s=new THREE.DataTexture,o=new THREE.XHRLoader(this.manager);return o.setResponseType("arraybuffer"),o.load(e,function(e){var n=i._parser(e);if(!n)return;undefined!==n.image?s.image=n.image:undefined!==n.data&&(s.image.width=n.width,s.image.height=n.height,s.image.data=n.data),s.wrapS=undefined!==n.wrapS?n.wrapS:THREE.ClampToEdgeWrapping,s.wrapT=undefined!==n.wrapT?n.wrapT:THREE.ClampToEdgeWrapping,s.magFilter=undefined!==n.magFilter?n.magFilter:THREE.LinearFilter,s.minFilter=undefined!==n.minFilter?n.minFilter:THREE.LinearMipMapLinearFilter,s.anisotropy=undefined!==n.anisotropy?n.anisotropy:1,undefined!==n.format&&(s.format=n.format),undefined!==n.type&&(s.type=n.type),undefined!==n.mipmaps&&(s.mipmaps=n.mipmaps),1===n.mipmapCount&&(s.minFilter=THREE.LinearFilter),s.needsUpdate=!0,t&&t(s,n)},n,r),s}}),THREE.CompressedTextureLoader=function(e){this.manager=e!==undefined?e:THREE.DefaultLoadingManager,this._parser=null},Object.assign(THREE.CompressedTextureLoader.prototype,{load:function(e,t,n,r){function a(a){u.load(e[a],function(e){var n=i._parser(e,!0);s[a]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},f+=1,f===6&&(n.mipmapCount===1&&(o.minFilter=THREE.LinearFilter),o.format=n.format,o.needsUpdate=!0,t&&t(o))},n,r)}var i=this,s=[],o=new THREE.CompressedTexture;o.image=s;var u=new THREE.XHRLoader(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer");if(Array.isArray(e)){var f=0;for(var l=0,c=e.length;l<c;++l)a(l)}else u.load(e,function(e){var n=i._parser(e,!0);if(n.isCubemap){var r=n.mipmaps.length/n.mipmapCount;for(var u=0;u<r;u++){s[u]={mipmaps:[]};for(var a=0;a<n.mipmapCount;a++)s[u].mipmaps.push(n.mipmaps[u*n.mipmapCount+a]),s[u].format=n.format,s[u].width=n.width,s[u].height=n.height}}else o.image.width=n.width,o.image.height=n.height,o.mipmaps=n.mipmaps;n.mipmapCount===1&&(o.minFilter=THREE.LinearFilter),o.format=n.format,o.needsUpdate=!0,t&&t(o)},n,r);return o},setPath:function(e){return this.path=e,this}}),THREE.Material=function(){Object.defineProperty(this,"id",{value:THREE.MaterialIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=THREE.NormalBlending,this.side=THREE.FrontSide,this.shading=THREE.SmoothShading,this.vertexColors=THREE.NoColors,this.opacity=1,this.transparent=!1,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=THREE.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},THREE.Material.prototype={constructor:THREE.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){e===!0&&this.update(),this._needsUpdate=e},setValues:function(e){if(e===undefined)return;for(var t in e){var n=e[t];if(n===undefined){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}var r=this[t];if(r===undefined){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}r instanceof THREE.Color?r.set(n):r instanceof THREE.Vector3&&n instanceof THREE.Vector3?r.copy(n):t==="overdraw"?this[t]=Number(n):this[t]=n}},toJSON:function(e){function r(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var t=e===undefined;t&&(e={textures:{},images:{}});var n={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color instanceof THREE.Color&&(n.color=this.color.getHex()),this.roughness!==undefined&&(n.roughness=this.roughness),this.metalness!==undefined&&(n.metalness=this.metalness),this.emissive instanceof THREE.Color&&(n.emissive=this.emissive.getHex()),this.specular instanceof THREE.Color&&(n.specular=this.specular.getHex()),this.shininess!==undefined&&(n.shininess=this.shininess),this.map instanceof THREE.Texture&&(n.map=this.map.toJSON(e).uuid),this.alphaMap instanceof THREE.Texture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof THREE.Texture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof THREE.Texture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap instanceof THREE.Texture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap instanceof THREE.Texture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap instanceof THREE.Texture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap instanceof THREE.Texture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap instanceof THREE.Texture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap instanceof THREE.Texture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof THREE.Texture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity),this.size!==undefined&&(n.size=this.size),this.sizeAttenuation!==undefined&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==THREE.NormalBlending&&(n.blending=this.blending),this.shading!==THREE.SmoothShading&&(n.shading=this.shading),this.side!==THREE.FrontSide&&(n.side=this.side),this.vertexColors!==THREE.NoColors&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth);if(t){var i=r(e.textures),s=r(e.images);i.length>0&&(n.textures=i),s.length>0&&(n.images=s)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows;var t=e.clippingPlanes,n=null;if(t!==null){var r=t.length;n=new Array(r);for(var i=0;i!==r;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}},Object.assign(THREE.Material.prototype,THREE.EventDispatcher.prototype),THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.type="LineBasicMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.LineBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.type="LineDashedMaterial",this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.constructor=THREE.LineDashedMaterial,THREE.LineDashedMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.type="MeshBasicMaterial",this.color=new THREE.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshBasicMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.type="MeshDepthMaterial",this.depthPacking=THREE.BasicDepthPacking,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshDepthMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.type="MeshLambertMaterial",this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshLambertMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshNormalMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.type="MeshPhongMaterial",this.color=new THREE.Color(16777215),this.specular=new THREE.Color(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshPhongMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshStandardMaterial=function(e){THREE.Material.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new THREE.Color(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new THREE.Color(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshStandardMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshStandardMaterial.prototype.constructor=THREE.MeshStandardMaterial,THREE.MeshStandardMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},THREE.MeshPhysicalMaterial=function(e){THREE.MeshStandardMaterial.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)},THREE.MeshPhysicalMaterial.prototype=Object.create(THREE.MeshStandardMaterial.prototype),THREE.MeshPhysicalMaterial.prototype.constructor=THREE.MeshPhysicalMaterial,THREE.MeshPhysicalMaterial.prototype.copy=function(e){return THREE.MeshStandardMaterial.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this},THREE.MultiMaterial=function(e){this.uuid=THREE.Math.generateUUID(),this.type="MultiMaterial",this.materials=e instanceof Array?e:[],this.visible=!0},THREE.MultiMaterial.prototype={constructor:THREE.MultiMaterial,toJSON:function(e){var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},n=this.materials;for(var r=0,i=n.length;r<i;r++){var s=n[r].toJSON(e);delete s.metadata,t.materials.push(s)}return t.visible=this.visible,t},clone:function(){var e=new this.constructor;for(var t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},THREE.PointsMaterial=function(e){THREE.Material.call(this),this.type="PointsMaterial",this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)},THREE.PointsMaterial.prototype=Object.create(THREE.Material.prototype),THREE.PointsMaterial.prototype.constructor=THREE.PointsMaterial,THREE.PointsMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=undefined,e!==undefined&&(e.attributes!==undefined&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.ShaderMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=THREE.UniformsUtils.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this},THREE.ShaderMaterial.prototype.toJSON=function(e){var t=THREE.Material.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},THREE.RawShaderMaterial=function(e){THREE.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},THREE.RawShaderMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.RawShaderMaterial.prototype.constructor=THREE.RawShaderMaterial,THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.type="SpriteMaterial",this.color=new THREE.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.constructor=THREE.SpriteMaterial,THREE.SpriteMaterial.prototype.copy=function(e){return THREE.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this},THREE.ShadowMaterial=function(){THREE.ShaderMaterial.call(this,{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.lights,{opacity:{value:1}}]),vertexShader:THREE.ShaderChunk.shadow_vert,fragmentShader:THREE.ShaderChunk.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}})},THREE.ShadowMaterial.prototype=Object.create(THREE.ShaderMaterial.prototype),THREE.ShadowMaterial.prototype.constructor=THREE.ShadowMaterial,THREE.Texture=function(e,t,n,r,i,s,o,u,a,f){Object.defineProperty(this,"id",{value:THREE.TextureIdCount++}),this.uuid=THREE.Math.generateUUID(),this.name="",this.sourceFile="",this.image=e!==undefined?e:THREE.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==undefined?t:THREE.Texture.DEFAULT_MAPPING,this.wrapS=n!==undefined?n:THREE.ClampToEdgeWrapping,this.wrapT=r!==undefined?r:THREE.ClampToEdgeWrapping,this.magFilter=i!==undefined?i:THREE.LinearFilter,this.minFilter=s!==undefined?s:THREE.LinearMipMapLinearFilter,this.anisotropy=a!==undefined?a:1,this.format=o!==undefined?o:THREE.RGBAFormat,this.type=u!==undefined?u:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=f!==undefined?f:THREE.LinearEncoding,this.version=0,this.onUpdate=null},THREE.Texture.DEFAULT_IMAGE=undefined,THREE.Texture.DEFAULT_MAPPING=THREE.UVMapping,THREE.Texture.prototype={constructor:THREE.Texture,set needsUpdate(e){e===!0&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){function t(e){var t;return e.toDataURL!==undefined?t=e:(t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),t.width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}if(e.textures[this.uuid]!==undefined)return e.textures[this.uuid];var n={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(this.image!==undefined){var r=this.image;r.uuid===undefined&&(r.uuid=THREE.Math.generateUUID()),e.images[r.uuid]===undefined&&(e.images[r.uuid]={uuid:r.uuid,url:t(r)}),n.image=r.uuid}return e.textures[this.uuid]=n,n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping!==THREE.UVMapping)return;e.multiply(this.repeat),e.add(this.offset);if(e.x<0||e.x>1)switch(this.wrapS){case THREE.RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case THREE.ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case THREE.MirroredRepeatWrapping:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case THREE.RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case THREE.ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case THREE.MirroredRepeatWrapping:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}},Object.assign(THREE.Texture.prototype,THREE.EventDispatcher.prototype),THREE.TextureIdCount=0,THREE.DepthTexture=function(e,t,n,r,i,s,o,u,a){THREE.Texture.call(this,null,r,i,s,o,u,THREE.DepthFormat,n,a),this.image={width:e,height:t},this.type=n!==undefined?n:THREE.UnsignedShortType,this.magFilter=o!==undefined?o:THREE.NearestFilter,this.minFilter=u!==undefined?u:THREE.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},THREE.DepthTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DepthTexture.prototype.constructor=THREE.DepthTexture,THREE.CanvasTexture=function(e,t,n,r,i,s,o,u,a){THREE.Texture.call(this,e,t,n,r,i,s,o,u,a),this.needsUpdate=!0},THREE.CanvasTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CanvasTexture.prototype.constructor=THREE.CanvasTexture,THREE.CubeTexture=function(e,t,n,r,i,s,o,u,a,f){e=e!==undefined?e:[],t=t!==undefined?t:THREE.CubeReflectionMapping,THREE.Texture.call(this,e,t,n,r,i,s,o,u,a,f),this.flipY=!1},THREE.CubeTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CubeTexture.prototype.constructor=THREE.CubeTexture,Object.defineProperty(THREE.CubeTexture.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}}),THREE.CompressedTexture=function(e,t,n,r,i,s,o,u,a,f,l,c){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l,c),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.constructor=THREE.CompressedTexture,THREE.DataTexture=function(e,t,n,r,i,s,o,u,a,f,l,c){THREE.Texture.call(this,null,s,o,u,a,f,r,i,l,c),this.image={data:e,width:t,height:n},this.magFilter=a!==undefined?a:THREE.NearestFilter,this.minFilter=f!==undefined?f:THREE.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.VideoTexture=function(e,t,n,r,i,s,o,u,a){function l(){requestAnimationFrame(l),e.readyState>=e.HAVE_CURRENT_DATA&&(f.needsUpdate=!0)}THREE.Texture.call(this,e,t,n,r,i,s,o,u,a),this.generateMipmaps=!1;var f=this;l()},THREE.VideoTexture.prototype=Object.create(THREE.Texture.prototype),THREE.VideoTexture.prototype.constructor=THREE.VideoTexture,THREE.Group=function(){THREE.Object3D.call(this),this.type="Group"},THREE.Group.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Group}),THREE.Points=function(e,t){THREE.Object3D.call(this),this.type="Points",this.geometry=e!==undefined?e:new THREE.BufferGeometry,this.material=t!==undefined?t:new THREE.PointsMaterial({color:Math.random()*16777215})},THREE.Points.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Points,raycast:function(){var e=new THREE.Matrix4,t=new THREE.Ray,n=new THREE.Sphere;return function(i,s){function p(e,n){var r=t.distanceSqToPoint(e);if(r<c){var u=t.closestPointToPoint(e);u.applyMatrix4(a);var f=i.ray.origin.distanceTo(u);if(f<i.near||f>i.far)return;s.push({distance:f,distanceToRay:Math.sqrt(r),point:u.clone(),index:n,face:null,
object:o})}}var o=this,u=this.geometry,a=this.matrixWorld,f=i.params.Points.threshold;u.boundingSphere===null&&u.computeBoundingSphere(),n.copy(u.boundingSphere),n.applyMatrix4(a);if(i.ray.intersectsSphere(n)===!1)return;e.getInverse(a),t.copy(i.ray).applyMatrix4(e);var l=f/((this.scale.x+this.scale.y+this.scale.z)/3),c=l*l,h=new THREE.Vector3;if(u instanceof THREE.BufferGeometry){var d=u.index,v=u.attributes,m=v.position.array;if(d!==null){var g=d.array;for(var y=0,b=g.length;y<b;y++){var w=g[y];h.fromArray(m,w*3),p(h,w)}}else for(var y=0,E=m.length/3;y<E;y++)h.fromArray(m,y*3),p(h,y)}else{var S=u.vertices;for(var y=0,E=S.length;y<E;y++)p(S[y],y)}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}}),THREE.Line=function(e,t,n){if(n===1)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new THREE.LineSegments(e,t);THREE.Object3D.call(this),this.type="Line",this.geometry=e!==undefined?e:new THREE.BufferGeometry,this.material=t!==undefined?t:new THREE.LineBasicMaterial({color:Math.random()*16777215})},THREE.Line.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Line,raycast:function(){var e=new THREE.Matrix4,t=new THREE.Ray,n=new THREE.Sphere;return function(i,s){var o=i.linePrecision,u=o*o,a=this.geometry,f=this.matrixWorld;a.boundingSphere===null&&a.computeBoundingSphere(),n.copy(a.boundingSphere),n.applyMatrix4(f);if(i.ray.intersectsSphere(n)===!1)return;e.getInverse(f),t.copy(i.ray).applyMatrix4(e);var l=new THREE.Vector3,c=new THREE.Vector3,h=new THREE.Vector3,p=new THREE.Vector3,d=this instanceof THREE.LineSegments?2:1;if(a instanceof THREE.BufferGeometry){var v=a.index,m=a.attributes,g=m.position.array;if(v!==null){var y=v.array;for(var b=0,w=y.length-1;b<w;b+=d){var E=y[b],S=y[b+1];l.fromArray(g,E*3),c.fromArray(g,S*3);var x=t.distanceSqToSegment(l,c,p,h);if(x>u)continue;p.applyMatrix4(this.matrixWorld);var T=i.ray.origin.distanceTo(p);if(T<i.near||T>i.far)continue;s.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else for(var b=0,w=g.length/3-1;b<w;b+=d){l.fromArray(g,3*b),c.fromArray(g,3*b+3);var x=t.distanceSqToSegment(l,c,p,h);if(x>u)continue;p.applyMatrix4(this.matrixWorld);var T=i.ray.origin.distanceTo(p);if(T<i.near||T>i.far)continue;s.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else if(a instanceof THREE.Geometry){var N=a.vertices,C=N.length;for(var b=0;b<C-1;b+=d){var x=t.distanceSqToSegment(N[b],N[b+1],p,h);if(x>u)continue;p.applyMatrix4(this.matrixWorld);var T=i.ray.origin.distanceTo(p);if(T<i.near||T>i.far)continue;s.push({distance:T,point:h.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}}),THREE.LineSegments=function(e,t){THREE.Line.call(this,e,t),this.type="LineSegments"},THREE.LineSegments.prototype=Object.assign(Object.create(THREE.Line.prototype),{constructor:THREE.LineSegments}),THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.type="Mesh",this.geometry=e!==undefined?e:new THREE.BufferGeometry,this.material=t!==undefined?t:new THREE.MeshBasicMaterial({color:Math.random()*16777215}),this.drawMode=THREE.TrianglesDrawMode,this.updateMorphTargets()},THREE.Mesh.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Mesh,setDrawMode:function(e){this.drawMode=e},copy:function(e){return THREE.Object3D.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){if(this.geometry.morphTargets!==undefined&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;e<t;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},getMorphTargetIndexByName:function(e){return this.morphTargetDictionary[e]!==undefined?this.morphTargetDictionary[e]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},raycast:function(){function v(e,t,n,r,i,s,o){return THREE.Triangle.barycoordFromPoint(e,t,n,r,h),i.multiplyScalar(h.x),s.multiplyScalar(h.y),o.multiplyScalar(h.z),i.add(s).add(o),i.clone()}function m(e,t,n,r,i,s,o){var u,a=e.material;a.side===THREE.BackSide?u=n.intersectTriangle(s,i,r,!0,o):u=n.intersectTriangle(r,i,s,a.side!==THREE.DoubleSide,o);if(u===null)return null;d.copy(o),d.applyMatrix4(e.matrixWorld);var f=t.ray.origin.distanceTo(d);return f<t.near||f>t.far?null:{distance:f,point:d.clone(),object:e}}function g(e,t,n,o,u,a,h,d){r.fromArray(o,a*3),i.fromArray(o,h*3),s.fromArray(o,d*3);var g=m(e,t,n,r,i,s,p);return g&&(u&&(f.fromArray(u,a*2),l.fromArray(u,h*2),c.fromArray(u,d*2),g.uv=v(p,r,i,s,f,l,c)),g.face=new THREE.Face3(a,h,d,THREE.Triangle.normal(r,i,s)),g.faceIndex=a),g}var e=new THREE.Matrix4,t=new THREE.Ray,n=new THREE.Sphere,r=new THREE.Vector3,i=new THREE.Vector3,s=new THREE.Vector3,o=new THREE.Vector3,u=new THREE.Vector3,a=new THREE.Vector3,f=new THREE.Vector2,l=new THREE.Vector2,c=new THREE.Vector2,h=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3;return function(d,y){var b=this.geometry,w=this.material,E=this.matrixWorld;if(w===undefined)return;b.boundingSphere===null&&b.computeBoundingSphere(),n.copy(b.boundingSphere),n.applyMatrix4(E);if(d.ray.intersectsSphere(n)===!1)return;e.getInverse(E),t.copy(d.ray).applyMatrix4(e);if(b.boundingBox!==null&&t.intersectsBox(b.boundingBox)===!1)return;var S,x;if(b instanceof THREE.BufferGeometry){var T,N,C,k=b.index,L=b.attributes,A=L.position.array;L.uv!==undefined&&(S=L.uv.array);if(k!==null){var O=k.array;for(var M=0,_=O.length;M<_;M+=3)T=O[M],N=O[M+1],C=O[M+2],x=g(this,d,t,A,S,T,N,C),x&&(x.faceIndex=Math.floor(M/3),y.push(x))}else for(var M=0,_=A.length;M<_;M+=9)T=M/3,N=T+1,C=T+2,x=g(this,d,t,A,S,T,N,C),x&&(x.index=T,y.push(x))}else if(b instanceof THREE.Geometry){var D,P,H,B=w instanceof THREE.MultiMaterial,j=B===!0?w.materials:null,F=b.vertices,I=b.faces,q=b.faceVertexUvs[0];q.length>0&&(S=q);for(var R=0,U=I.length;R<U;R++){var z=I[R],W=B===!0?j[z.materialIndex]:w;if(W===undefined)continue;D=F[z.a],P=F[z.b],H=F[z.c];if(W.morphTargets===!0){var X=b.morphTargets,V=this.morphTargetInfluences;r.set(0,0,0),i.set(0,0,0),s.set(0,0,0);for(var $=0,J=X.length;$<J;$++){var K=V[$];if(K===0)continue;var Q=X[$].vertices;r.addScaledVector(o.subVectors(Q[z.a],D),K),i.addScaledVector(u.subVectors(Q[z.b],P),K),s.addScaledVector(a.subVectors(Q[z.c],H),K)}r.add(D),i.add(P),s.add(H),D=r,P=i,H=s}x=m(this,d,t,D,P,H,p);if(x){if(S){var G=S[R];f.copy(G[0]),l.copy(G[1]),c.copy(G[2]),x.uv=v(p,D,P,H,f,l,c)}x.face=z,x.faceIndex=R,y.push(x)}}}}}(),clone:function(){return(new this.constructor(this.geometry,this.material)).copy(this)}}),THREE.Bone=function(e){THREE.Object3D.call(this),this.type="Bone",this.skin=e},THREE.Bone.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Bone,copy:function(e){return THREE.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this}}),THREE.Skeleton=function(e,t,n){this.useVertexTexture=n!==undefined?n:!0,this.identityMatrix=new THREE.Matrix4,e=e||[],this.bones=e.slice(0);if(this.useVertexTexture){var r=Math.sqrt(this.bones.length*4);r=THREE.Math.nextPowerOfTwo(Math.ceil(r)),r=Math.max(r,4),this.boneTextureWidth=r,this.boneTextureHeight=r,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(t===undefined)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var i=0,s=this.bones.length;i<s;i++)this.boneInverses.push(new THREE.Matrix4)}},Object.assign(THREE.Skeleton.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new THREE.Matrix4;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){var e;for(var t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(var t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&(e.parent instanceof THREE.Bone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new THREE.Matrix4;return function(){for(var n=0,r=this.bones.length;n<r;n++){var i=this.bones[n]?this.bones[n].matrixWorld:this.identityMatrix;e.multiplyMatrices(i,this.boneInverses[n]),e.toArray(this.boneMatrices,n*16)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new THREE.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)}}),THREE.SkinnedMesh=function(e,t,n){THREE.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new THREE.Matrix4,this.bindMatrixInverse=new THREE.Matrix4;var r=[];if(this.geometry&&this.geometry.bones!==undefined){var i,s;for(var o=0,u=this.geometry.bones.length;o<u;++o)s=this.geometry.bones[o],i=new THREE.Bone(this),r.push(i),i.name=s.name,i.position.fromArray(s.pos),i.quaternion.fromArray(s.rotq),s.scl!==undefined&&i.scale.fromArray(s.scl);for(var o=0,u=this.geometry.bones.length;o<u;++o)s=this.geometry.bones[o],s.parent!==-1&&s.parent!==null&&r[s.parent]!==undefined?r[s.parent].add(r[o]):this.add(r[o])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new THREE.Skeleton(r,undefined,n),this.matrixWorld)},THREE.SkinnedMesh.prototype=Object.assign(Object.create(THREE.Mesh.prototype),{constructor:THREE.SkinnedMesh,bind:function(e,t){this.skeleton=e,t===undefined&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry instanceof THREE.Geometry)for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();n!==Infinity?t.multiplyScalar(n):t.set(1,0,0,0)}else if(this.geometry instanceof THREE.BufferGeometry){var r=new THREE.Vector4,i=this.geometry.attributes.skinWeight;for(var e=0;e<i.count;e++){r.x=i.getX(e),r.y=i.getY(e),r.z=i.getZ(e),r.w=i.getW(e);var n=1/r.lengthManhattan();n!==Infinity?r.multiplyScalar(n):r.set(1,0,0,0),i.setXYZW(e,r.x,r.y,r.z,r.w)}}},updateMatrixWorld:function(e){THREE.Mesh.prototype.updateMatrixWorld.call(this,!0),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},clone:function(){return(new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture)).copy(this)}}),THREE.LOD=function(){THREE.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})},THREE.LOD.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LOD,copy:function(e){THREE.Object3D.prototype.copy.call(this,e,!1);var t=e.levels;for(var n=0,r=t.length;n<r;n++){var i=t[n];this.addLevel(i.object.clone(),i.distance)}return this},addLevel:function(e,t){t===undefined&&(t=0),t=Math.abs(t);var n=this.levels;for(var r=0;r<n.length;r++)if(t<n[r].distance)break;n.splice(r,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){var t=this.levels;for(var n=1,r=t.length;n<r;n++)if(e<t[n].distance)break;return t[n-1].object},raycast:function(){var e=new THREE.Vector3;return function(n,r){e.setFromMatrixPosition(this.matrixWorld);var i=n.ray.origin.distanceTo(e);this.getObjectForDistance(i).raycast(n,r)}}(),update:function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(r){var i=this.levels;if(i.length>1){e.setFromMatrixPosition(r.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var s=e.distanceTo(t);i[0].object.visible=!0;for(var o=1,u=i.length;o<u;o++){if(!(s>=i[o].distance))break;i[o-1].object.visible=!1,i[o].object.visible=!0}for(;o<u;o++)i[o].object.visible=!1}}}(),toJSON:function(e){var t=THREE.Object3D.prototype.toJSON.call(this,e);t.object.levels=[];var n=this.levels;for(var r=0,i=n.length;r<i;r++){var s=n[r];t.object.levels.push({object:s.object.uuid,distance:s.distance})}return t}}),THREE.Sprite=function(e){THREE.Object3D.call(this),this.type="Sprite",this.material=e!==undefined?e:new THREE.SpriteMaterial},THREE.Sprite.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.Sprite,raycast:function(){var e=new THREE.Vector3;return function(n,r){e.setFromMatrixPosition(this.matrixWorld);var i=n.ray.distanceSqToPoint(e),s=this.scale.x*this.scale.y/4;if(i>s)return;r.push({distance:Math.sqrt(i),point:this.position,face:null,object:this})}}(),clone:function(){return(new this.constructor(this.material)).copy(this)}}),THREE.LensFlare=function(e,t,n,r,i){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=undefined,e!==undefined&&this.add(e,t,n,r,i)},THREE.LensFlare.prototype=Object.assign(Object.create(THREE.Object3D.prototype),{constructor:THREE.LensFlare,copy:function(e){THREE.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;t<n;t++)this.lensFlares.push(e.lensFlares[t]);return this},add:function(e,t,n,r,i,s){t===undefined&&(t=-1),n===undefined&&(n=0),s===undefined&&(s=1),i===undefined&&(i=new THREE.Color(16777215)),r===undefined&&(r=THREE.NormalBlending),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:s,color:i,blending:r})},updateLensFlares:function(){var e,t=this.lensFlares.length,n,r=-this.positionScreen.x*2,i=-this.positionScreen.y*2;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+r*n.distance,n.y=this.positionScreen.y+i*n.distance,n.wantedRotation=n.x*Math.PI*.25,n.rotation+=(n.wantedRotation-n.rotation)*.25}}),THREE.Scene=function(){THREE.Object3D.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.copy=function(e,t){return THREE.Object3D.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},THREE.Fog=function(e,t,n){this.name="",this.color=new THREE.Color(e),this.near=t!==undefined?t:1,this.far=n!==undefined?n:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=t!==undefined?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.ShaderChunk={},THREE.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif\n",THREE.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n	uniform sampler2D alphaMap;\n#endif\n",THREE.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n	if ( diffuseColor.a < ALPHATEST ) discard;\n#endif\n",THREE.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n	reflectedLight.indirectDiffuse *= ambientOcclusion;\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n	#endif\n#endif\n",THREE.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n#endif",THREE.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",THREE.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",THREE.ShaderChunk.bsdfs="bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\n	return any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n		if( decayExponent > 0.0 ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n			return distanceFalloff * maxDistanceCutoffFactor;\n#else\n			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n#endif\n		}\n		return 1.0;\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n	return RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	return 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n	float a2 = pow2( alpha );\n	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n	return 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n	float a2 = pow2( alpha );\n	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n	return RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float alpha = pow2( roughness );\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n	float D = D_GGX( alpha, dotNH );\n	return F * ( G * D );\n}\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\n	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n	vec4 r = roughness * c0 + c1;\n	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\n	return specularColor * AB.x + AB.y;\n}\nfloat G_BlinnPhong_Implicit( ) {\n	return 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n	float dotNH = saturate( dot( geometry.normal, halfDir ) );\n	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n	vec3 F = F_Schlick( specularColor, dotLH );\n	float G = G_BlinnPhong_Implicit( );\n	float D = D_BlinnPhong( shininess, dotNH );\n	return F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n",THREE.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n	vec2 dHdxy_fwd() {\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n		return vec2( dBx, dBy );\n	}\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n		float fDet = dot( vSigmaX, R1 );\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n	}\n#endif\n",THREE.ShaderChunk.clipping_planes_fragment="#if NUM_CLIPPING_PLANES > 0\n	for ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\n		vec4 plane = clippingPlanes[ i ];\n		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\n	}\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_fragment="#if NUM_CLIPPING_PLANES > 0\n	#if ! defined( PHYSICAL ) && ! defined( PHONG )\n		varying vec3 vViewPosition;\n	#endif\n	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif\n",THREE.ShaderChunk.clipping_planes_pars_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	varying vec3 vViewPosition;\n#endif\n",THREE.ShaderChunk.clipping_planes_vertex="#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\n	vViewPosition = - mvPosition.xyz;\n#endif\n",THREE.ShaderChunk.color_fragment="#ifdef USE_COLOR\n	diffuseColor.rgb *= vColor;\n#endif",THREE.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif\n",THREE.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n	varying vec3 vColor;\n#endif",THREE.ShaderChunk.color_vertex="#ifdef USE_COLOR\n	vColor.xyz = color.xyz;\n#endif",THREE.ShaderChunk.common="#define PI 3.14159265359\n#define PI2 6.28318530718\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n	const highp float a = 12.9898, b = 78.233, c = 43758.5453;\n	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n	return fract(sin(sn) * c);\n}\nstruct IncidentLight {\n	vec3 color;\n	vec3 direction;\n	bool visible;\n};\nstruct ReflectedLight {\n	vec3 directDiffuse;\n	vec3 directSpecular;\n	vec3 indirectDiffuse;\n	vec3 indirectSpecular;\n};\nstruct GeometricContext {\n	vec3 position;\n	vec3 normal;\n	vec3 viewDir;\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	float distance = dot( planeNormal, point - pointOnPlane );\n	return - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\n",THREE.ShaderChunk.cube_uv_reflection_fragment="#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_textureSize (1024.0)\nint getFaceFromDirection(vec3 direction) {\n	vec3 absDirection = abs(direction);\n	int face = -1;\n	if( absDirection.x > absDirection.z ) {\n		if(absDirection.x > absDirection.y )\n			face = direction.x > 0.0 ? 0 : 3;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	else {\n		if(absDirection.z > absDirection.y )\n			face = direction.z > 0.0 ? 2 : 5;\n		else\n			face = direction.y > 0.0 ? 1 : 4;\n	}\n	return face;\n}\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\n	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);\n	float dxRoughness = dFdx(roughness);\n	float dyRoughness = dFdy(roughness);\n	vec3 dx = dFdx( vec * scale * dxRoughness );\n	vec3 dy = dFdy( vec * scale * dyRoughness );\n	float d = max( dot( dx, dx ), dot( dy, dy ) );\n	d = clamp(d, 1.0, cubeUV_rangeClamp);\n	float mipLevel = 0.5 * log2(d);\n	return vec2(floor(mipLevel), fract(mipLevel));\n}\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\n	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\n	float a = 16.0 * cubeUV_rcpTextureSize;\n	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\n	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\n	float powScale = exp2_packed.x * exp2_packed.y;\n	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\n	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\n	bool bRes = mipLevel == 0.0;\n	scale =  bRes && (scale < a) ? a : scale;\n	vec3 r;\n	vec2 offset;\n	int face = getFaceFromDirection(direction);\n	float rcpPowScale = 1.0 / powScale;\n	if( face == 0) {\n		r = vec3(direction.x, -direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 1) {\n		r = vec3(direction.y, direction.x, direction.z);\n		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 2) {\n		r = vec3(direction.z, direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\n	}\n	else if( face == 3) {\n		r = vec3(direction.x, direction.z, direction.y);\n		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else if( face == 4) {\n		r = vec3(direction.y, direction.x, -direction.z);\n		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	else {\n		r = vec3(direction.z, -direction.x, direction.y);\n		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\n		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\n	}\n	r = normalize(r);\n	float texelOffset = 0.5 * cubeUV_rcpTextureSize;\n	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\n	vec2 base = offset + vec2( texelOffset );\n	return base + s * ( scale - 2.0 * texelOffset );\n}\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\n	float roughnessVal = roughness* cubeUV_maxLods3;\n	float r1 = floor(roughnessVal);\n	float r2 = r1 + 1.0;\n	float t = fract(roughnessVal);\n	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\n	float s = mipInfo.y;\n	float level0 = mipInfo.x;\n	float level1 = level0 + 1.0;\n	level1 = level1 > 5.0 ? 5.0 : level1;\n	level0 += min( floor( s + 0.5 ), 5.0 );\n	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\n	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\n	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\n	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\n	vec4 result = mix(color10, color20, t);\n	return vec4(result.rgb, 1.0);\n}\n#endif\n",THREE.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n	objectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;\n",THREE.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n#endif\n",THREE.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n#endif\n",THREE.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n	totalEmissiveRadiance *= emissiveColor.rgb;\n#endif\n",THREE.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n	uniform sampler2D emissiveMap;\n#endif\n",THREE.ShaderChunk.encodings_pars_fragment="\nvec4 LinearToLinear( in vec4 value ) {\n  return value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n  float maxComponent = max( max( value.r, value.g ), value.b );\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n  float maxRGB = max( value.x, max( value.g, value.b ) );\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\n  M            = ceil( M * 255.0 ) / 255.0;\n  return vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n    float maxRGB = max( value.x, max( value.g, value.b ) );\n    float D      = max( maxRange / maxRGB, 1.0 );\n    D            = min( floor( D ) / 255.0, 1.0 );\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\n  vec4 vResult;\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n  vResult.w = fract(Le);\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\n  return vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n  float Le = value.z * 255.0 + value.w;\n  vec3 Xp_Y_XYZp;\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\n  return vec4( max(vRGB, 0.0), 1.0 );\n}\n",THREE.ShaderChunk.encodings_fragment="  gl_FragColor = linearToOutputTexel( gl_FragColor );\n",THREE.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n		#else\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#else\n		vec3 reflectVec = vReflect;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n	envColor = envMapTexelToLinear( envColor );\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_MIX )\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n	#elif defined( ENVMAP_BLENDING_ADD )\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n	#endif\n#endif\n"
,THREE.ShaderChunk.envmap_pars_fragment="#if defined( USE_ENVMAP ) || defined( PHYSICAL )\n	uniform float reflectivity;\n	uniform float envMapIntenstiy;\n#endif\n#ifdef USE_ENVMAP\n	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\n		varying vec3 vWorldPosition;\n	#endif\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\n		uniform float refractionRatio;\n	#else\n		varying vec3 vReflect;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_pars_vertex="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		varying vec3 vWorldPosition;\n	#else\n		varying vec3 vReflect;\n		uniform float refractionRatio;\n	#endif\n#endif\n",THREE.ShaderChunk.envmap_vertex="#ifdef USE_ENVMAP\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n		vWorldPosition = worldPosition.xyz;\n	#else\n		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n		#ifdef ENVMAP_MODE_REFLECTION\n			vReflect = reflect( cameraToVertex, worldNormal );\n		#else\n			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n		#endif\n	#endif\n#endif\n",THREE.ShaderChunk.fog_fragment="#ifdef USE_FOG\n	#ifdef USE_LOGDEPTHBUF_EXT\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n	#else\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n	#endif\n	#ifdef FOG_EXP2\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n	#else\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n	#endif\n	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif\n",THREE.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n	uniform vec3 fogColor;\n	#ifdef FOG_EXP2\n		uniform float fogDensity;\n	#else\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n#endif",THREE.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n#endif\n",THREE.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n#endif",THREE.ShaderChunk.lights_lambert_vertex="vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n	vLightBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n		dotNL = dot( geometry.normal, directLight.direction );\n		directLightColor_Diffuse = PI * directLight.color;\n		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n		#ifdef DOUBLE_SIDED\n			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n		#endif\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		#ifdef DOUBLE_SIDED\n			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n		#endif\n	}\n#endif\n",THREE.ShaderChunk.lights_pars="uniform vec3 ambientLightColor;\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n	vec3 irradiance = ambientLightColor;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	return irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n	struct DirectionalLight {\n		vec3 direction;\n		vec3 color;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		directLight.color = directionalLight.color;\n		directLight.direction = directionalLight.direction;\n		directLight.visible = true;\n	}\n#endif\n#if NUM_POINT_LIGHTS > 0\n	struct PointLight {\n		vec3 position;\n		vec3 color;\n		float distance;\n		float decay;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n		vec3 lVector = pointLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		if ( testLightInRange( lightDistance, pointLight.distance ) ) {\n			directLight.color = pointLight.color;\n			directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n	struct SpotLight {\n		vec3 position;\n		vec3 direction;\n		vec3 color;\n		float distance;\n		float decay;\n		float coneCos;\n		float penumbraCos;\n		int shadow;\n		float shadowBias;\n		float shadowRadius;\n		vec2 shadowMapSize;\n	};\n	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n		vec3 lVector = spotLight.position - geometry.position;\n		directLight.direction = normalize( lVector );\n		float lightDistance = length( lVector );\n		float angleCos = dot( directLight.direction, spotLight.direction );\n		if ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\n			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n			directLight.color = spotLight.color;\n			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n			directLight.visible = true;\n		} else {\n			directLight.color = vec3( 0.0 );\n			directLight.visible = false;\n		}\n	}\n#endif\n#if NUM_HEMI_LIGHTS > 0\n	struct HemisphereLight {\n		vec3 direction;\n		vec3 skyColor;\n		vec3 groundColor;\n	};\n	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n		float dotNL = dot( geometry.normal, hemiLight.direction );\n		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			irradiance *= PI;\n		#endif\n		return irradiance;\n	}\n#endif\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\n	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n		#include <normal_flip>\n		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );\n		#else\n			vec4 envMapColor = vec4( 0.0 );\n		#endif\n		return PI * envMapColor.rgb * envMapIntensity;\n	}\n	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		float maxMIPLevelScalar = float( maxMIPLevel );\n		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\n		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n	}\n	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\n		#ifdef ENVMAP_MODE_REFLECTION\n			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\n		#else\n			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\n		#endif\n		#include <normal_flip>\n		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\n		#ifdef ENVMAP_TYPE_CUBE\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n			#else\n				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_CUBE_UV )\n			vec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\n		#elif defined( ENVMAP_TYPE_EQUIREC )\n			vec2 sampleUV;\n			sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n			sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#elif defined( ENVMAP_TYPE_SPHERE )\n			vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n			#ifdef TEXTURE_LOD_EXT\n				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#else\n				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n			#endif\n			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n		#endif\n		return envMapColor.rgb * envMapIntensity;\n	}\n#endif\n",THREE.ShaderChunk.lights_phong_fragment="BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;\n",THREE.ShaderChunk.lights_phong_pars_fragment="varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n	vec3	diffuseColor;\n	vec3	specularColor;\n	float	specularShininess;\n	float	specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct				RE_Direct_BlinnPhong\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )	(0)\n",THREE.ShaderChunk.lights_physical_fragment="PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\n#ifdef STANDARD\n	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#else\n	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\n#endif\n",THREE.ShaderChunk.lights_physical_pars_fragment="struct PhysicalMaterial {\n	vec3	diffuseColor;\n	float	specularRoughness;\n	vec3	specularColor;\n	#ifndef STANDARD\n		float clearCoat;\n		float clearCoatRoughness;\n	#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\n	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n	vec3 irradiance = dotNL * directLight.color;\n	#ifndef PHYSICALLY_CORRECT_LIGHTS\n		irradiance *= PI;\n	#endif\n	#ifndef STANDARD\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\n	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n	#ifndef STANDARD\n		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n	#ifndef STANDARD\n		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n		float dotNL = dotNV;\n		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\n	#else\n		float clearCoatDHR = 0.0;\n	#endif\n	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\n	#ifndef STANDARD\n		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\n	#endif\n}\n#define RE_Direct				RE_Direct_Physical\n#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular		RE_IndirectSpecular_Physical\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}\n",THREE.ShaderChunk.lights_template="\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = normalize( vViewPosition );\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		getPointDirectLightIrradiance( pointLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		getSpotDirectLightIrradiance( spotLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n		#ifdef USE_SHADOWMAP\n		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n		#endif\n		RE_Direct( directLight, geometry, material, reflectedLight );\n	}\n#endif\n#if defined( RE_IndirectDiffuse )\n	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n	#ifdef USE_LIGHTMAP\n		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n		#ifndef PHYSICALLY_CORRECT_LIGHTS\n			lightMapIrradiance *= PI;\n		#endif\n		irradiance += lightMapIrradiance;\n	#endif\n	#if ( NUM_HEMI_LIGHTS > 0 )\n		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n		}\n	#endif\n	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\n	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );\n	#endif\n	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\n	#ifndef STANDARD\n		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\n	#else\n		vec3 clearCoatRadiance = vec3( 0.0 );\n	#endif\n		\n	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\n#endif\n",THREE.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n#endif",THREE.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n	uniform float logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n#endif\n",THREE.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n	#ifdef USE_LOGDEPTHBUF_EXT\n		varying float vFragDepth;\n	#endif\n	uniform float logDepthBufFC;\n#endif",THREE.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n	#ifdef USE_LOGDEPTHBUF_EXT\n		vFragDepth = 1.0 + gl_Position.w;\n	#else\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n	#endif\n#endif\n",THREE.ShaderChunk.map_fragment="#ifdef USE_MAP\n	vec4 texelColor = texture2D( map, vUv );\n	texelColor = mapTexelToLinear( texelColor );\n	diffuseColor *= texelColor;\n#endif\n",THREE.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n	diffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n",THREE.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n#endif\n",THREE.ShaderChunk.metalnessmap_fragment="float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n	vec4 texelMetalness = texture2D( metalnessMap, vUv );\n	metalnessFactor *= texelMetalness.r;\n#endif\n",THREE.ShaderChunk.metalnessmap_pars_fragment="#ifdef USE_METALNESSMAP\n	uniform sampler2D metalnessMap;\n#endif",THREE.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n#endif\n",THREE.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n	#ifndef USE_MORPHNORMALS\n	uniform float morphTargetInfluences[ 8 ];\n	#else\n	uniform float morphTargetInfluences[ 4 ];\n	#endif\n#endif",THREE.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n	#ifndef USE_MORPHNORMALS\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n	#endif\n#endif\n",THREE.ShaderChunk.normal_flip="#ifdef DOUBLE_SIDED\n	float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n#else\n	float flipNormal = 1.0;\n#endif\n",THREE.ShaderChunk.normal_fragment="#ifdef FLAT_SHADED\n	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n#else\n	vec3 normal = normalize( vNormal ) * flipNormal;\n#endif\n#ifdef USE_NORMALMAP\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n#elif defined( USE_BUMPMAP )\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n",THREE.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n	}\n#endif\n",THREE.ShaderChunk.packing="vec3 packNormalToRGB( const in vec3 normal ) {\n  return normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n  return 1.0 - 2.0 * rgb.xyz;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n	vec4 r = vec4( fract( v * PackFactors ), v );\n	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n	return dot( v, UnpackFactors );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n  return ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n  return linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\n}\n",THREE.ShaderChunk.premultiplied_alpha_fragment="#ifdef PREMULTIPLIED_ALPHA\n	gl_FragColor.rgb *= gl_FragColor.a;\n#endif\n",THREE.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n	vec4 mvPosition = modelViewMatrix * skinned;\n#else\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\n",THREE.ShaderChunk.roughnessmap_fragment="float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n	vec4 texelRoughness = texture2D( roughnessMap, vUv );\n	roughnessFactor *= texelRoughness.r;\n#endif\n",THREE.ShaderChunk.roughnessmap_pars_fragment="#ifdef USE_ROUGHNESSMAP\n	uniform sampler2D roughnessMap;\n#endif",THREE.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n	}\n	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\n		const vec2 offset = vec2( 0.0, 1.0 );\n		vec2 texelSize = vec2( 1.0 ) / size;\n		vec2 centroidUV = floor( uv * size + 0.5 ) / size;\n		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\n		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\n		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\n		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\n		vec2 f = fract( uv * size + 0.5 );\n		float a = mix( lb, lt, f.y );\n		float b = mix( rb, rt, f.y );\n		float c = mix( a, b, f.x );\n		return c;\n	}\n	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		shadowCoord.xyz /= shadowCoord.w;\n		shadowCoord.z += shadowBias;\n		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n		bool inFrustum = all( inFrustumVec );\n		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n		bool frustumTest = all( frustumTestVec );\n		if ( frustumTest ) {\n		#if defined( SHADOWMAP_TYPE_PCF )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n			float dx0 = - texelSize.x * shadowRadius;\n			float dy0 = - texelSize.y * shadowRadius;\n			float dx1 = + texelSize.x * shadowRadius;\n			float dy1 = + texelSize.y * shadowRadius;\n			return (\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n		#endif\n		}\n		return 1.0;\n	}\n	vec2 cubeToUV( vec3 v, float texelSizeY ) {\n		vec3 absV = abs( v );\n		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n		absV *= scaleToCube;\n		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n		vec2 planar = v.xy;\n		float almostATexel = 1.5 * texelSizeY;\n		float almostOne = 1.0 - almostATexel;\n		if ( absV.z >= almostOne ) {\n			if ( v.z > 0.0 )\n				planar.x = 4.0 - v.x;\n		} else if ( absV.x >= almostOne ) {\n			float signX = sign( v.x );\n			planar.x = v.z * signX + 2.0 * signX;\n		} else if ( absV.y >= almostOne ) {\n			float signY = sign( v.y );\n			planar.x = v.x + 2.0 * signY + 2.0;\n			planar.y = v.z * signY - 2.0;\n		}\n		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n	}\n	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n		vec3 lightToPosition = shadowCoord.xyz;\n		vec3 bd3D = normalize( lightToPosition );\n		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\n		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n			return (\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n			) * ( 1.0 / 9.0 );\n		#else\n			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n		#endif\n	}\n#endif\n"
,THREE.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\n		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\n		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\n		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n	}\n	#endif\n#endif\n",THREE.ShaderChunk.shadowmask_pars_fragment="float getShadowMask() {\n	float shadow = 1.0;\n	#ifdef USE_SHADOWMAP\n	#if NUM_DIR_LIGHTS > 0\n	DirectionalLight directionalLight;\n	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n		directionalLight = directionalLights[ i ];\n		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_SPOT_LIGHTS > 0\n	SpotLight spotLight;\n	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n		spotLight = spotLights[ i ];\n		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#if NUM_POINT_LIGHTS > 0\n	PointLight pointLight;\n	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n		pointLight = pointLights[ i ];\n		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\n	}\n	#endif\n	#endif\n	return shadow;\n}\n",THREE.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",THREE.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n	#ifdef BONE_TEXTURE\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n		mat4 getBoneMatrix( const in float i ) {\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n			y = dy * ( y + 0.5 );\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n			mat4 bone = mat4( v1, v2, v3, v4 );\n			return bone;\n		}\n	#else\n		uniform mat4 boneMatrices[ MAX_BONES ];\n		mat4 getBoneMatrix( const in float i ) {\n			mat4 bone = boneMatrices[ int(i) ];\n			return bone;\n		}\n	#endif\n#endif\n",THREE.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n#endif\n",THREE.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n#endif\n",THREE.ShaderChunk.specularmap_fragment="float specularStrength;\n#ifdef USE_SPECULARMAP\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n#else\n	specularStrength = 1.0;\n#endif",THREE.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n	uniform sampler2D specularMap;\n#endif",THREE.ShaderChunk.tonemapping_fragment="#if defined( TONE_MAPPING )\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif\n",THREE.ShaderChunk.tonemapping_pars_fragment="#define saturate(a) clamp( a, 0.0, 1.0 )\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n  return toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n  color *= toneMappingExposure;\n  color = max( vec3( 0.0 ), color - 0.004 );\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\n",THREE.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n#endif",THREE.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n	vUv2 = uv2;\n#endif",THREE.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n#endif",THREE.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n#endif\n",THREE.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",THREE.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n	#ifdef USE_SKINNING\n		vec4 worldPosition = modelMatrix * skinned;\n	#else\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n	#endif\n#endif\n",THREE.UniformsUtils={merge:function(e){var t={};for(var n=0;n<e.length;n++){var r=this.clone(e[n]);for(var i in r)t[i]=r[i]}return t},clone:function(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var i=e[n][r];i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix3||i instanceof THREE.Matrix4||i instanceof THREE.Texture?t[n][r]=i.clone():Array.isArray(i)?t[n][r]=i.slice():t[n][r]=i}}return t}},THREE.UniformsLib={common:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new THREE.Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new THREE.Color(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}}},points:{diffuse:{value:new THREE.Color(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new THREE.Vector4(0,0,1,1)}}},THREE.ShaderChunk.cube_frag="uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n	gl_FragColor.a *= opacity;\n}\n",THREE.ShaderChunk.cube_vert="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}\n",THREE.ShaderChunk.depth_frag="#if DEPTH_PACKING == 3200\n	uniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( 1.0 );\n	#if DEPTH_PACKING == 3200\n		diffuseColor.a = opacity;\n	#endif\n	#include <map_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <logdepthbuf_fragment>\n	#if DEPTH_PACKING == 3200\n		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\n	#elif DEPTH_PACKING == 3201\n		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );\n	#endif\n}\n",THREE.ShaderChunk.depth_vert="#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.distanceRGBA_frag="uniform vec3 lightPos;\nvarying vec4 vWorldPosition;\n#include <common>\n#include <packing>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n	#include <clipping_planes_fragment>\n	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\n}\n",THREE.ShaderChunk.distanceRGBA_vert="varying vec4 vWorldPosition;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <skinbase_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	vWorldPosition = worldPosition;\n}\n",THREE.ShaderChunk.equirect_frag="uniform sampler2D tEquirect;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vec3 direction = normalize( vWorldPosition );\n	vec2 sampleUV;\n	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\n	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n	gl_FragColor = texture2D( tEquirect, sampleUV );\n}\n",THREE.ShaderChunk.equirect_vert="varying vec3 vWorldPosition;\n#include <common>\nvoid main() {\n	vWorldPosition = transformDirection( position, modelMatrix );\n	#include <begin_vertex>\n	#include <project_vertex>\n}\n",THREE.ShaderChunk.linedashed_frag="uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	if ( mod( vLineDistance, totalSize ) > dashSize ) {\n		discard;\n	}\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <color_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.linedashed_vert="uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	vLineDistance = scale * lineDistance;\n	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n	gl_Position = projectionMatrix * mvPosition;\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.meshbasic_frag="uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	ReflectedLight reflectedLight;\n	reflectedLight.directDiffuse = vec3( 0.0 );\n	reflectedLight.directSpecular = vec3( 0.0 );\n	reflectedLight.indirectDiffuse = diffuseColor.rgb;\n	reflectedLight.indirectSpecular = vec3( 0.0 );\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.indirectDiffuse;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshbasic_vert="#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <skinbase_vertex>\n	#ifdef USE_ENVMAP\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#endif\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <worldpos_vertex>\n	#include <clipping_planes_vertex>\n	#include <envmap_vertex>\n}\n",THREE.ShaderChunk.meshlambert_frag="uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <emissivemap_fragment>\n	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n	#include <lightmap_fragment>\n	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n	#ifdef DOUBLE_SIDED\n		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n	#else\n		reflectedLight.directDiffuse = vLightFront;\n	#endif\n	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n	#include <normal_flip>\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshlambert_vert="#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\n	varying vec3 vLightBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <lights_lambert_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphong_frag="#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_phong_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	#include <envmap_fragment>\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphong_vert="#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <envmap_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.meshphysical_frag="#define PHYSICAL\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifndef STANDARD\n	uniform float clearCoat;\n	uniform float clearCoatRoughness;\n#endif\nuniform float envMapIntensity;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <packing>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <lights_pars>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n	vec3 totalEmissiveRadiance = emissive;\n	#include <logdepthbuf_fragment>\n	#include <map_fragment>\n	#include <color_fragment>\n	#include <alphamap_fragment>\n	#include <alphatest_fragment>\n	#include <specularmap_fragment>\n	#include <roughnessmap_fragment>\n	#include <metalnessmap_fragment>\n	#include <normal_flip>\n	#include <normal_fragment>\n	#include <emissivemap_fragment>\n	#include <lights_physical_fragment>\n	#include <lights_template>\n	#include <aomap_fragment>\n	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.meshphysical_vert="#define PHYSICAL\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n	varying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <uv_vertex>\n	#include <uv2_vertex>\n	#include <color_vertex>\n	#include <beginnormal_vertex>\n	#include <morphnormal_vertex>\n	#include <skinbase_vertex>\n	#include <skinnormal_vertex>\n	#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n	vNormal = normalize( transformedNormal );\n#endif\n	#include <begin_vertex>\n	#include <displacementmap_vertex>\n	#include <morphtarget_vertex>\n	#include <skinning_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	vViewPosition = - mvPosition.xyz;\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.normal_frag="uniform float opacity;\nvarying vec3 vNormal;\n#include <common>\n#include <packing>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	gl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\n	#include <logdepthbuf_fragment>\n}\n",THREE.ShaderChunk.normal_vert="varying vec3 vNormal;\n#include <common>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	vNormal = normalize( normalMatrix * normal );\n	#include <begin_vertex>\n	#include <morphtarget_vertex>\n	#include <project_vertex>\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n}\n",THREE.ShaderChunk.points_frag="uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n	#include <clipping_planes_fragment>\n	vec3 outgoingLight = vec3( 0.0 );\n	vec4 diffuseColor = vec4( diffuse, opacity );\n	#include <logdepthbuf_fragment>\n	#include <map_particle_fragment>\n	#include <color_fragment>\n	#include <alphatest_fragment>\n	outgoingLight = diffuseColor.rgb;\n	gl_FragColor = vec4( outgoingLight, diffuseColor.a );\n	#include <premultiplied_alpha_fragment>\n	#include <tonemapping_fragment>\n	#include <encodings_fragment>\n	#include <fog_fragment>\n}\n",THREE.ShaderChunk.points_vert="uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n	#include <color_vertex>\n	#include <begin_vertex>\n	#include <project_vertex>\n	#ifdef USE_SIZEATTENUATION\n		gl_PointSize = size * ( scale / - mvPosition.z );\n	#else\n		gl_PointSize = size;\n	#endif\n	#include <logdepthbuf_vertex>\n	#include <clipping_planes_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderChunk.shadow_frag="uniform float opacity;\n#include <common>\n#include <packing>\n#include <bsdfs>\n#include <lights_pars>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\n}\n",THREE.ShaderChunk.shadow_vert="#include <shadowmap_pars_vertex>\nvoid main() {\n	#include <begin_vertex>\n	#include <project_vertex>\n	#include <worldpos_vertex>\n	#include <shadowmap_vertex>\n}\n",THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.meshbasic_vert,fragmentShader:THREE.ShaderChunk.meshbasic_frag},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)}}]),vertexShader:THREE.ShaderChunk.meshlambert_vert,fragmentShader:THREE.ShaderChunk.meshlambert_frag},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},specular:{value:new THREE.Color(1118481)},shininess:{value:30}}]),vertexShader:THREE.ShaderChunk.meshphong_vert,fragmentShader:THREE.ShaderChunk.meshphong_frag},standard:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.aomap,THREE.UniformsLib.lightmap,THREE.UniformsLib.emissivemap,THREE.UniformsLib.bumpmap,THREE.UniformsLib.normalmap,THREE.UniformsLib.displacementmap,THREE.UniformsLib.roughnessmap,THREE.UniformsLib.metalnessmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,{emissive:{value:new THREE.Color(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag},points:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.points,THREE.UniformsLib.fog]),vertexShader:THREE.ShaderChunk.points_vert,fragmentShader:THREE.ShaderChunk.points_frag},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:THREE.ShaderChunk.linedashed_vert,fragmentShader:THREE.ShaderChunk.linedashed_frag},depth:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.displacementmap]),vertexShader:THREE.ShaderChunk.depth_vert,fragmentShader:THREE.ShaderChunk.depth_frag},normal:{uniforms:{opacity:{value:1}},vertexShader:THREE.ShaderChunk.normal_vert,fragmentShader:THREE.ShaderChunk.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:THREE.ShaderChunk.cube_vert,fragmentShader:THREE.ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:THREE.ShaderChunk.equirect_vert,fragmentShader:THREE.ShaderChunk.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new THREE.Vector3}},vertexShader:THREE.ShaderChunk.distanceRGBA_vert,fragmentShader:THREE.ShaderChunk.distanceRGBA_frag}},THREE.ShaderLib.physical={uniforms:THREE.UniformsUtils.merge([THREE.ShaderLib.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:THREE.ShaderChunk.meshphysical_vert,fragmentShader:THREE.ShaderChunk.meshphysical_frag},THREE.WebGLRenderer=function(e){function ft(){return b===null?_:1}function lt(e,t,n,r){u===!0&&(e*=r,t*=r,n*=r),Q.clearColor(e,t,n,r)}function ct(){Q.init(),Q.scissor(T.copy(D).multiplyScalar(_)),Q.viewport(C.copy(H).multiplyScalar(_)),lt(L.r,L.g,L.b,A)}function ht(){y=null,x=null,S="",E=-1,Q.reset()}function mt(e){e.preventDefault(),ht(),ct(),G.clear()}function gt(e){var t=e.target;t.removeEventListener("dispose",gt),yt(t)}function yt(e){bt(e),G.delete(e)}function bt(e){var t=G.get(e).program;e.program=undefined,t!==undefined&&et.releaseProgram(t)}function wt(e,t,n,r){var i;if(n instanceof THREE.InstancedBufferGeometry){i=J.get("ANGLE_instanced_arrays");if(i===null){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}}r===undefined&&(r=0),Q.initAttributes();var s=n.attributes,o=t.getAttributes(),u=e.defaultAttributeValues;for(var a in o){var f=o[a];if(f>=0){var l=s[a];if(l!==undefined){var c=X.FLOAT,h=l.array,p=l.normalized;h instanceof Float32Array?c=X.FLOAT:h instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array"):h instanceof Uint16Array?c=X.UNSIGNED_SHORT
:h instanceof Int16Array?c=X.SHORT:h instanceof Uint32Array?c=X.UNSIGNED_INT:h instanceof Int32Array?c=X.INT:h instanceof Int8Array?c=X.BYTE:h instanceof Uint8Array&&(c=X.UNSIGNED_BYTE);var d=l.itemSize,v=Z.getAttributeBuffer(l);if(l instanceof THREE.InterleavedBufferAttribute){var m=l.data,g=m.stride,y=l.offset;m instanceof THREE.InstancedInterleavedBuffer?(Q.enableAttributeAndDivisor(f,m.meshPerAttribute,i),n.maxInstancedCount===undefined&&(n.maxInstancedCount=m.meshPerAttribute*m.count)):Q.enableAttribute(f),X.bindBuffer(X.ARRAY_BUFFER,v),X.vertexAttribPointer(f,d,c,p,g*m.array.BYTES_PER_ELEMENT,(r*g+y)*m.array.BYTES_PER_ELEMENT)}else l instanceof THREE.InstancedBufferAttribute?(Q.enableAttributeAndDivisor(f,l.meshPerAttribute,i),n.maxInstancedCount===undefined&&(n.maxInstancedCount=l.meshPerAttribute*l.count)):Q.enableAttribute(f),X.bindBuffer(X.ARRAY_BUFFER,v),X.vertexAttribPointer(f,d,c,p,0,r*d*l.array.BYTES_PER_ELEMENT)}else if(u!==undefined){var b=u[a];if(b!==undefined)switch(b.length){case 2:X.vertexAttrib2fv(f,b);break;case 3:X.vertexAttrib3fv(f,b);break;case 4:X.vertexAttrib4fv(f,b);break;default:X.vertexAttrib1fv(f,b)}}}}Q.disableUnusedAttributes()}function Et(e,t){return Math.abs(t[0])-Math.abs(e[0])}function St(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.program&&t.material.program&&e.material.program!==t.material.program?e.material.program.id-t.material.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function xt(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Tt(e,t,n,r,i){var s,o;n.transparent?(s=h,o=++p):(s=l,o=++c);var u=s[o];u!==undefined?(u.id=e.id,u.object=e,u.geometry=t,u.material=n,u.z=U.z,u.group=i):(u={id:e.id,object:e,geometry:t,material:n,z:U.z,group:i},s.push(u))}function Nt(e){var t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),q.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),kt(q)}function Ct(e){return q.center.set(0,0,0),q.radius=.7071067811865476,q.applyMatrix4(e.matrixWorld),kt(q)}function kt(e){if(!B.intersectsSphere(e))return!1;var t=j.numPlanes;if(t===0)return!0;var n=g.clippingPlanes,r=e.center,i=-e.radius,s=0;do if(n[s].distanceToPoint(r)<i)return!1;while(++s!==t);return!0}function Lt(e,t){if(e.visible===!1)return;if(e.layers.test(t.layers))if(e instanceof THREE.Light)f.push(e);else if(e instanceof THREE.Sprite)(e.frustumCulled===!1||Ct(e)===!0)&&v.push(e);else if(e instanceof THREE.LensFlare)m.push(e);else if(e instanceof THREE.ImmediateRenderObject)g.sortObjects===!0&&(U.setFromMatrixPosition(e.matrixWorld),U.applyProjection(R)),Tt(e,null,e.material,U.z,null);else if(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points){e instanceof THREE.SkinnedMesh&&e.skeleton.update();if(e.frustumCulled===!1||Nt(e)===!0){var n=e.material;if(n.visible===!0){g.sortObjects===!0&&(U.setFromMatrixPosition(e.matrixWorld),U.applyProjection(R));var r=Z.update(e);if(n instanceof THREE.MultiMaterial){var i=r.groups,s=n.materials;for(var o=0,u=i.length;o<u;o++){var a=i[o],l=s[a.materialIndex];l.visible===!0&&Tt(e,r,l,U.z,a)}}else Tt(e,r,n,U.z,null)}}}var c=e.children;for(var o=0,u=c.length;o<u;o++)Lt(c[o],t)}function At(e,t,n,r){for(var i=0,s=e.length;i<s;i++){var o=e[i],u=o.object,a=o.geometry,f=r===undefined?o.material:r,l=o.group;u.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,u.matrixWorld),u.normalMatrix.getNormalMatrix(u.modelViewMatrix);if(u instanceof THREE.ImmediateRenderObject){Mt(f);var c=_t(t,n,f,u);S="",u.render(function(e){g.renderBufferImmediate(e,c,f)})}else g.renderBufferDirect(t,n,a,f,u,l)}}function Ot(e,t,n){var r=G.get(e),i=et.getParameters(e,z,t,j.numPlanes,n),s=et.getProgramCode(e,i),o=r.program,u=!0;if(o===undefined)e.addEventListener("dispose",gt);else if(o.code!==s)bt(e);else{if(i.shaderID!==undefined)return;u=!1}if(u){if(i.shaderID){var a=THREE.ShaderLib[i.shaderID];r.__webglShader={name:e.type,uniforms:THREE.UniformsUtils.clone(a.uniforms),vertexShader:a.vertexShader,fragmentShader:a.fragmentShader}}else r.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=r.__webglShader,o=et.acquireProgram(e,i,s),r.program=o,e.program=o}var f=o.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var l=0;l<g.maxMorphTargets;l++)f["morphTarget"+l]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;for(var l=0;l<g.maxMorphNormals;l++)f["morphNormal"+l]>=0&&e.numSupportedMorphNormals++}var c=r.__webglShader.uniforms;if(!(e instanceof THREE.ShaderMaterial)&&!(e instanceof THREE.RawShaderMaterial)||e.clipping===!0)r.numClippingPlanes=j.numPlanes,c.clippingPlanes=j.uniform;e.lights&&(r.lightsHash=z.hash,c.ambientLightColor.value=z.ambient,c.directionalLights.value=z.directional,c.spotLights.value=z.spot,c.pointLights.value=z.point,c.hemisphereLights.value=z.hemi,c.directionalShadowMap.value=z.directionalShadowMap,c.directionalShadowMatrix.value=z.directionalShadowMatrix,c.spotShadowMap.value=z.spotShadowMap,c.spotShadowMatrix.value=z.spotShadowMatrix,c.pointShadowMap.value=z.pointShadowMap,c.pointShadowMatrix.value=z.pointShadowMatrix);var h=r.program.getUniforms(),p=THREE.WebGLUniforms.seqWithValue(h.seq,c);r.uniformsList=p,r.dynamicUniforms=THREE.WebGLUniforms.splitDynamic(p,c)}function Mt(e){e.side!==THREE.DoubleSide?Q.enable(X.CULL_FACE):Q.disable(X.CULL_FACE),Q.setFlipSided(e.side===THREE.BackSide),e.transparent===!0?Q.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha):Q.setBlending(THREE.NoBlending),Q.setDepthFunc(e.depthFunc),Q.setDepthTest(e.depthTest),Q.setDepthWrite(e.depthWrite),Q.setColorWrite(e.colorWrite),Q.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function _t(e,t,n,r){k=0;var i=G.get(n);if(F){if(I||e!==x){var s=e===x&&n.id===E;j.setState(n.clippingPlanes,n.clipShadows,e,i,s)}i.numClippingPlanes!==undefined&&i.numClippingPlanes!==j.numPlanes&&(n.needsUpdate=!0)}i.program===undefined&&(n.needsUpdate=!0),i.lightsHash!==undefined&&i.lightsHash!==z.hash&&(n.needsUpdate=!0),n.needsUpdate&&(Ot(n,t,r),n.needsUpdate=!1);var o=!1,u=!1,a=!1,f=i.program,l=f.getUniforms(),c=i.__webglShader.uniforms;f.id!==y&&(X.useProgram(f.program),y=f.id,o=!0,u=!0,a=!0),n.id!==E&&(E=n.id,u=!0);if(o||e!==x){l.set(X,e,"projectionMatrix"),K.logarithmicDepthBuffer&&l.setValue(X,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),e!==x&&(x=e,u=!0,a=!0);if(n instanceof THREE.ShaderMaterial||n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshStandardMaterial||n.envMap){var h=l.map.cameraPosition;h!==undefined&&h.setValue(X,U.setFromMatrixPosition(e.matrixWorld))}(n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshStandardMaterial||n instanceof THREE.ShaderMaterial||n.skinning)&&l.setValue(X,"viewMatrix",e.matrixWorldInverse),l.set(X,g,"toneMappingExposure"),l.set(X,g,"toneMappingWhitePoint")}if(n.skinning){l.setOptional(X,r,"bindMatrix"),l.setOptional(X,r,"bindMatrixInverse");var p=r.skeleton;p&&(K.floatVertexTextures&&p.useVertexTexture?(l.set(X,p,"boneTexture"),l.set(X,p,"boneTextureWidth"),l.set(X,p,"boneTextureHeight")):l.setOptional(X,p,"boneMatrices"))}u&&(n.lights&&Ut(c,a),t&&n.fog&&jt(c,t),(n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial||n instanceof THREE.MeshStandardMaterial||n instanceof THREE.MeshDepthMaterial)&&Dt(c,n),n instanceof THREE.LineBasicMaterial?Pt(c,n):n instanceof THREE.LineDashedMaterial?(Pt(c,n),Ht(c,n)):n instanceof THREE.PointsMaterial?Bt(c,n):n instanceof THREE.MeshLambertMaterial?Ft(c,n):n instanceof THREE.MeshPhongMaterial?It(c,n):n instanceof THREE.MeshPhysicalMaterial?Rt(c,n):n instanceof THREE.MeshStandardMaterial?qt(c,n):n instanceof THREE.MeshDepthMaterial?n.displacementMap&&(c.displacementMap.value=n.displacementMap,c.displacementScale.value=n.displacementScale,c.displacementBias.value=n.displacementBias):n instanceof THREE.MeshNormalMaterial&&(c.opacity.value=n.opacity),THREE.WebGLUniforms.upload(X,i.uniformsList,c,g)),l.set(X,r,"modelViewMatrix"),l.set(X,r,"normalMatrix"),l.setValue(X,"modelMatrix",r.matrixWorld);var d=i.dynamicUniforms;return d!==null&&(THREE.WebGLUniforms.evalDynamic(d,c,r,e),THREE.WebGLUniforms.upload(X,d,c,g)),f}function Dt(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&e.emissive.value.copy(t.emissive).multiplyScalar(t.emissiveIntensity),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var n;t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.roughnessMap?n=t.roughnessMap:t.metalnessMap?n=t.metalnessMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap);if(n!==undefined){n instanceof THREE.WebGLRenderTarget&&(n=n.texture);var r=n.offset,i=n.repeat;e.offsetRepeat.value.set(r.x,r.y,i.x,i.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.CubeTexture?-1:1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}function Pt(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function Ht(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function Bt(e,n){e.diffuse.value=n.color,e.opacity.value=n.opacity,e.size.value=n.size*_,e.scale.value=t.clientHeight*.5,e.map.value=n.map;if(n.map!==null){var r=n.map.offset,i=n.map.repeat;e.offsetRepeat.value.set(r.x,r.y,i.x,i.y)}}function jt(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function Ft(e,t){t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}function It(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function qt(e,t){e.roughness.value=t.roughness,e.metalness.value=t.metalness,t.roughnessMap&&(e.roughnessMap.value=t.roughnessMap),t.metalnessMap&&(e.metalnessMap.value=t.metalnessMap),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias),t.envMap&&(e.envMapIntensity.value=t.envMapIntensity)}function Rt(e,t){e.clearCoat.value=t.clearCoat,e.clearCoatRoughness.value=t.clearCoatRoughness,qt(e,t)}function Ut(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLights.needsUpdate=t,e.pointLights.needsUpdate=t,e.spotLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function zt(e){var t=0;for(var n=0,r=e.length;n<r;n++){var i=e[n];i.castShadow&&(z.shadows[t++]=i)}z.shadows.length=t}function Wt(e,t){var n,r,i,s=0,o=0,u=0,a,f,l,c,h=t.matrixWorldInverse,p=0,d=0,v=0,m=0;for(n=0,r=e.length;n<r;n++){i=e[n],a=i.color,f=i.intensity,l=i.distance,c=i.shadow&&i.shadow.map?i.shadow.map.texture:null;if(i instanceof THREE.AmbientLight)s+=a.r*f,o+=a.g*f,u+=a.b*f;else if(i instanceof THREE.DirectionalLight){var g=tt.get(i);g.color.copy(i.color).multiplyScalar(i.intensity),g.direction.setFromMatrixPosition(i.matrixWorld),U.setFromMatrixPosition(i.target.matrixWorld),g.direction.sub(U),g.direction.transformDirection(h),g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),z.directionalShadowMap[p]=c,z.directionalShadowMatrix[p]=i.shadow.matrix,z.directional[p++]=g}else if(i instanceof THREE.SpotLight){var g=tt.get(i);g.position.setFromMatrixPosition(i.matrixWorld),g.position.applyMatrix4(h),g.color.copy(a).multiplyScalar(f),g.distance=l,g.direction.setFromMatrixPosition(i.matrixWorld),U.setFromMatrixPosition(i.target.matrixWorld),g.direction.sub(U),g.direction.transformDirection(h),g.coneCos=Math.cos(i.angle),g.penumbraCos=Math.cos(i.angle*(1-i.penumbra)),g.decay=i.distance===0?0:i.decay,g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),z.spotShadowMap[v]=c,z.spotShadowMatrix[v]=i.shadow.matrix,z.spot[v++]=g}else if(i instanceof THREE.PointLight){var g=tt.get(i);g.position.setFromMatrixPosition(i.matrixWorld),g.position.applyMatrix4(h),g.color.copy(i.color).multiplyScalar(i.intensity),g.distance=i.distance,g.decay=i.distance===0?0:i.decay,g.shadow=i.castShadow,i.castShadow&&(g.shadowBias=i.shadow.bias,g.shadowRadius=i.shadow.radius,g.shadowMapSize=i.shadow.mapSize),z.pointShadowMap[d]=c,z.pointShadowMatrix[d]===undefined&&(z.pointShadowMatrix[d]=new THREE.Matrix4),U.setFromMatrixPosition(i.matrixWorld).negate(),z.pointShadowMatrix[d].identity().setPosition(U),z.point[d++]=g}else if(i instanceof THREE.HemisphereLight){var g=tt.get(i);g.direction.setFromMatrixPosition(i.matrixWorld),g.direction.transformDirection(h),g.direction.normalize(),g.skyColor.copy(i.color).multiplyScalar(f),g.groundColor.copy(i.groundColor).multiplyScalar(f),z.hemi[m++]=g}}z.ambient[0]=s,z.ambient[1]=o,z.ambient[2]=u,z.directional.length=p,z.spot.length=v,z.point.length=d,z.hemi.length=m,z.hash=p+","+d+","+v+","+m+","+z.shadows.length}function Xt(){var e=k;return e>=K.maxTextures&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+K.maxTextures),k+=1,e}function Vt(e){var t;if(e===THREE.RepeatWrapping)return X.REPEAT;if(e===THREE.ClampToEdgeWrapping)return X.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return X.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return X.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return X.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return X.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return X.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return X.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return X.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return X.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return X.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return X.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return X.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return X.BYTE;if(e===THREE.ShortType)return X.SHORT;if(e===THREE.UnsignedShortType)return X.UNSIGNED_SHORT;if(e===THREE.IntType)return X.INT;if(e===THREE.UnsignedIntType)return X.UNSIGNED_INT;if(e===THREE.FloatType)return X.FLOAT;t=J.get("OES_texture_half_float");if(t!==null&&e===THREE.HalfFloatType)return t.HALF_FLOAT_OES;if(e===THREE.AlphaFormat)return X.ALPHA;if(e===THREE.RGBFormat)return X.RGB;if(e===THREE.RGBAFormat)return X.RGBA;if(e===THREE.LuminanceFormat)return X.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return X.LUMINANCE_ALPHA;if(e===THREE.DepthFormat)return X.DEPTH_COMPONENT;if(e===THREE.AddEquation)return X.FUNC_ADD;if(e===THREE.SubtractEquation)return X.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return X.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return X.ZERO;if(e===THREE.OneFactor)return X.ONE;if(e===THREE.SrcColorFactor)return X.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return X.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return X.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return X.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return X.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return X.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return X.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return X.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return X.SRC_ALPHA_SATURATE;t=J.get("WEBGL_compressed_texture_s3tc");if(t!==null){if(e===THREE.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}t=J.get("WEBGL_compressed_texture_pvrtc");if(t!==null){if(e===THREE.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===THREE.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===THREE.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===THREE.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}t=J.get("WEBGL_compressed_texture_etc1");if(t!==null&&e===THREE.RGB_ETC1_Format)return t.COMPRESSED_RGB_ETC1_WEBGL;t=J.get("EXT_blend_minmax");if(t!==null){if(e===THREE.MinEquation)return t.MIN_EXT;if(e===THREE.MaxEquation)return t.MAX_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION),e=e||{};var t=e.canvas!==undefined?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==undefined?e.context:null,r=e.alpha!==undefined?e.alpha:!1,i=e.depth!==undefined?e.depth:!0,s=e.stencil!==undefined?e.stencil:!0,o=e.antialias!==undefined?e.antialias:!1,u=e.premultipliedAlpha!==undefined?e.premultipliedAlpha:!0,a=e.preserveDrawingBuffer!==undefined?e.preserveDrawingBuffer:!1,f=[],l=[],c=-1,h=[],p=-1,d=new Float32Array(8),v=[],m=[];this.domElement=t,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=THREE.LinearToneMapping,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var g=this,y=null,b=null,w=null,E=-1,S="",x=null,T=new THREE.Vector4,N=null,C=new THREE.Vector4,k=0,L=new THREE.Color(0),A=0,O=t.width,M=t.height,_=1,D=new THREE.Vector4(0,0,O,M),P=!1,H=new THREE.Vector4(0,0,O,M),B=new THREE.Frustum,j=new THREE.WebGLClipping,F=!1,I=!1,q=new THREE.Sphere,R=new THREE.Matrix4,U=new THREE.Vector3,z={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},W={calls:0,vertices:0,faces:0,points:0};this.info={render:W,memory:{geometries:0,textures:0},programs:null};var X;try{var V={alpha:r,depth:i,stencil:s,antialias:o,premultipliedAlpha:u,preserveDrawingBuffer:a};X=n||t.getContext("webgl",V)||t.getContext("experimental-webgl",V);if(X===null)throw t.getContext("webgl")!==null?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";X.getShaderPrecisionFormat===undefined&&(X.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),t.addEventListener("webglcontextlost",mt,!1)}catch($){console.error("THREE.WebGLRenderer: "+$)}var J=new THREE.WebGLExtensions(X);J.get("WEBGL_depth_texture"),J.get("OES_texture_float"),J.get("OES_texture_float_linear"),J.get("OES_texture_half_float"),J.get("OES_texture_half_float_linear"),J.get("OES_standard_derivatives"),J.get("ANGLE_instanced_arrays"),J.get("OES_element_index_uint")&&(THREE.BufferGeometry.MaxIndex=4294967296);var K=new THREE.WebGLCapabilities(X,J,e),Q=new THREE.WebGLState(X,J,Vt),G=new THREE.WebGLProperties,Y=new THREE.WebGLTextures(X,J,Q,G,K,Vt,this.info),Z=new THREE.WebGLObjects(X,G,this.info),et=new THREE.WebGLPrograms(this,K),tt=new THREE.WebGLLights;this.info.programs=et.programs;var nt=new THREE.WebGLBufferRenderer(X,J,W),rt=new THREE.WebGLIndexedBufferRenderer(X,J,W),it=new THREE.OrthographicCamera(-1,1,1,-1,0,1),st=new THREE.PerspectiveCamera,ot=new THREE.Mesh(new THREE.PlaneBufferGeometry(2,2),new THREE.MeshBasicMaterial({depthTest:!1,depthWrite:!1,fog:!1})),ut=THREE.ShaderLib.cube,at=new THREE.Mesh(new THREE.BoxBufferGeometry(5,5,5),new THREE.ShaderMaterial({uniforms:ut.uniforms,vertexShader:ut.vertexShader,fragmentShader:ut.fragmentShader,side:THREE.BackSide,depthTest:!1,depthWrite:!1,fog:!1}));ct(),this.context=X,this.capabilities=K,this.extensions=J,this.properties=G,this.state=Q;var pt=new THREE.WebGLShadowMap(this,z,Z,K);this.shadowMap=pt;var dt=new THREE.SpritePlugin(this,v),vt=new THREE.LensFlarePlugin(this,m);this.getContext=function(){return X},this.getContextAttributes=function(){return X.getContextAttributes()},this.forceContextLoss=function(){J.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){return K.getMaxAnisotropy()},this.getPrecision=function(){return K.precision},this.getPixelRatio=function(){return _},this.setPixelRatio=function(e){if(e===undefined)return;_=e,this.setSize(H.z,H.w,!1)},this.getSize=function(){return{width:O,height:M}},this.setSize=function(e,n,r){O=e,M=n,t.width=e*_,t.height=n*_,r!==!1&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n)},this.setViewport=function(e,t,n,r){Q.viewport(H.set(e,t,n,r))},this.setScissor=function(e,t,n,r){Q.scissor(D.set(e,t,n,r))},this.setScissorTest=function(e){Q.setScissorTest(P=e)},this.getClearColor=function(){return L},this.setClearColor=function(e,t){L.set(e),A=t!==undefined?t:1,lt(L.r,L.g,L.b,A)},this.getClearAlpha=function(){return A},this.setClearAlpha=function(e){A=e,lt(L.r,L.g,L.b,A)},this.clear=function(e,t,n){var r=0;if(e===undefined||e)r|=X.COLOR_BUFFER_BIT;if(t===undefined||t)r|=X.DEPTH_BUFFER_BIT;if(n===undefined||n)r|=X.STENCIL_BUFFER_BIT;X.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.resetGLState=ht,this.dispose=function(){h=[],p=-1,l=[],c=-1,t.removeEventListener("webglcontextlost",mt,!1)},this.renderBufferImmediate=function(e,t,n){Q.initAttributes();var r=G.get(e);e.hasPositions&&!r.position&&(r.position=X.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=X.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=X.createBuffer()),e.hasColors&&!r.color&&(r.color=X.createBuffer());var i=t.getAttributes();e.hasPositions&&(X.bindBuffer(X.ARRAY_BUFFER,r.position),X.bufferData(X.ARRAY_BUFFER,e.positionArray,X.DYNAMIC_DRAW),Q.enableAttribute(i.position),X.vertexAttribPointer(i.position,3,X.FLOAT,!1,0,0));if(e.hasNormals){X.bindBuffer(X.ARRAY_BUFFER,r.normal);if(n.type!=="MeshPhongMaterial"&&n.type!=="MeshStandardMaterial"&&n.type!=="MeshPhysicalMaterial"&&n.shading===THREE.FlatShading)for(var s=0,o=e.count*3;s<o;s+=9){var u=e.normalArray,a=(u[s+0]+u[s+3]+u[s+6])/3,f=(u[s+1]+u[s+4]+u[s+7])/3,l=(u[s+2]+u[s+5]+u[s+8])/3;u[s+0]=a,u[s+1]=f,u[s+2]=l,u[s+3]=a,u[s+4]=f,u[s+5]=l,u[s+6]=a,u[s+7]=f,u[s+8]=l}X.bufferData(X.ARRAY_BUFFER,e.normalArray,X.DYNAMIC_DRAW),Q.enableAttribute(i.normal),X.vertexAttribPointer(i.normal,3,X.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(X.bindBuffer(X.ARRAY_BUFFER,r.uv),X.bufferData(X.ARRAY_BUFFER,e.uvArray,X.DYNAMIC_DRAW),Q.enableAttribute(i.uv),X.vertexAttribPointer(i.uv,2,X.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==THREE.NoColors&&(X.bindBuffer(X.ARRAY_BUFFER,r.color),X.bufferData(X.ARRAY_BUFFER,e.colorArray,X.DYNAMIC_DRAW),Q.enableAttribute(i.color),X.vertexAttribPointer(i.color,3,X.FLOAT,!1,0,0)),Q.disableUnusedAttributes(),X.drawArrays(X.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,i,s){Mt(r);var o=_t(e,t,r,i),u=!1,a=n.id+"_"+o.id+"_"+r.wireframe;a!==S&&(S=a,u=!0);var f=i.morphTargetInfluences;if(f!==undefined){var l=[];for(var c=0,h=f.length;c<h;c++){var p=f[c];l.push([p,c])}l.sort(Et),l.length>8&&(l.length=8);var v=n.morphAttributes;for(var c=0,h=l.length;c<h;c++){var p=l[c];d[c]=p[0];if(p[0]!==0){var m=p[1];r.morphTargets===!0&&v.position&&n.addAttribute("morphTarget"+c,v.position[m]),r.morphNormals===!0&&v.normal&&n.addAttribute("morphNormal"+c,v.normal[m])}else r.morphTargets===!0&&n.removeAttribute("morphTarget"+c),r.morphNormals===!0&&n.removeAttribute("morphNormal"+c)}o.getUniforms().setValue(X,"morphTargetInfluences",d),u=!0}var m=n.index,g=n.attributes.position;r.wireframe===!0&&(m=Z.getWireframeAttribute(n));var y;m!==null?(y=rt,y.setIndex(m)):y=nt,u&&(wt(r,o,n),m!==null&&X.bindBuffer(X.ELEMENT_ARRAY_BUFFER,Z.getAttributeBuffer(m)));var b=0,w=Infinity;m!==null?w=m.count:g!==undefined&&(w=g.count);var E=n.drawRange.start,x=n.drawRange.count,T=s!==null?s.start:0,N=s!==null?s.count:Infinity,C=Math.max(b,E,T),k=Math.min(b+w,E+x,T+N)-1,L=Math.max(0,k-C+1);if(i instanceof THREE.Mesh)if(r.wireframe===!0)Q.setLineWidth(r.wireframeLinewidth*ft()),y.setMode(X.LINES);else switch(i.drawMode){case THREE.TrianglesDrawMode:y.setMode(X.TRIANGLES);break;case THREE.TriangleStripDrawMode:y.setMode(X.TRIANGLE_STRIP);break;case THREE.TriangleFanDrawMode:y.setMode(X.TRIANGLE_FAN)}else if(i instanceof THREE.Line){var A=r.linewidth;A===undefined&&(A=1),Q.setLineWidth(A*ft()),i instanceof THREE.LineSegments?y.setMode(X.LINES):y.setMode(X.LINE_STRIP)}else i instanceof THREE.Points&&y.setMode(X.POINTS);n instanceof THREE.InstancedBufferGeometry?n.maxInstancedCount>0&&y.renderInstances(n,C,L):y.render(C,L)},this.render=function(e,t,n,r){if(t instanceof THREE.Camera==0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}var i=e.fog;S="",E=-1,x=null,e.autoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),R.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),B.setFromMatrix(R),f.length=0,c=-1,p=-1,v.length=0,m.length=0,I=this.localClippingEnabled,F=j.init(this.clippingPlanes,I,t),Lt(e,t),l.length=c+1,h.length=p+1,g.sortObjects===!0&&(l.sort(St),h.sort(xt)),F&&j.beginShadows(),zt(f),pt.render(e,t),Wt(f,t),F&&j.endShadows(),W.calls=0,W.vertices=0,W.faces=0,W.points=0,n===undefined&&(n=null),this.setRenderTarget(n);var s=e.background;s===null?lt(L.r,L.g,L.b,A):s instanceof THREE.Color&&lt(s.r,s.g,s.b,1),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),s instanceof THREE.CubeTexture?(st.projectionMatrix.copy(t.projectionMatrix),st.matrixWorld.extractRotation(t.matrixWorld),st.matrixWorldInverse.getInverse(st.matrixWorld),at.material.uniforms.tCube.value=s,at.modelViewMatrix.multiplyMatrices(st.matrixWorldInverse,at.matrixWorld),Z.update(at),g.renderBufferDirect(st,null,at.geometry,at.material,at,null)):s instanceof THREE.Texture&&(ot.material.map=s,Z.update(ot),g.renderBufferDirect(it,null,ot.geometry,ot.material,ot,null));if(e.overrideMaterial){var o=e.overrideMaterial;At(l,t,i,o),At(h,t,i,o)}else Q.setBlending(THREE.NoBlending),At(l,t,i),At(h,t,i);dt.render(e,t),vt.render(e,t,C),n&&Y.updateRenderTargetMipmap(n),Q.setDepthTest(!0),Q.setDepthWrite(!0),Q.setColorWrite(!0)},this.setFaceCulling=function(e,t){Q.setCullFace(e),Q.setFlipSided(t===THREE.FrontFaceDirectionCW)},this.allocTextureUnit=Xt,this.setTexture2D=function(){var e=!1;return function(n,r){n instanceof THREE.WebGLRenderTarget&&(e||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),e=!0),n=n.texture),Y.setTexture2D(n,r)}}(),this.setTexture=function(){var e=!1;return function(n,r){e||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),e=!0),Y.setTexture2D(n,r)}}(),this.setTextureCube=function(){var e=!1;return function(n,r){n instanceof THREE.WebGLRenderTargetCube&&(e||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),e=!0),n=n.texture),n instanceof THREE.CubeTexture||Array.isArray(n.image)&&n.image.length===6?Y.setTextureCube(n,r):Y.setTextureCubeDynamic(n,r)}}(),this.getCurrentRenderTarget=function(){return b},this.setRenderTarget=function(e){b=e,e&&G.get(e).__webglFramebuffer===undefined&&Y.setupRenderTarget(e);var t=e instanceof THREE.WebGLRenderTargetCube,n;if(e){var r=G.get(e);t?n=r.__webglFramebuffer[e.activeCubeFace]:n=r.__webglFramebuffer,T.copy(e.scissor),N=e.scissorTest,C.copy(e.viewport)}else n=null,T.copy(D).multiplyScalar(_),N=P,C.copy(H).multiplyScalar(_);w!==n&&(X.bindFramebuffer(X.FRAMEBUFFER,n),w=n),Q.scissor(T),Q.setScissorTest(N),Q.viewport(C);if(t){var i=G.get(e.texture);X.framebufferTexture2D(X.FRAMEBUFFER,X.COLOR_ATTACHMENT0,X.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,i.__webglTexture,e.activeMipMapLevel)}},this.readRenderTargetPixels=function(e,t,n,r,i,s){if(e instanceof THREE.WebGLRenderTarget==0){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var o=G.get(e).__webglFramebuffer;if(o){var u=!1;o!==w&&(X.bindFramebuffer(X.FRAMEBUFFER,o),u=!0);try{var a=e.texture;if(a.format!==THREE.RGBAFormat&&Vt(a.format)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(a.type!==THREE.UnsignedByteType&&Vt(a.type)!==X.getParameter(X.IMPLEMENTATION_COLOR_READ_TYPE)&&(a.type!==THREE.FloatType||!J.get("WEBGL_color_buffer_float"))&&(a.type!==THREE.HalfFloatType||!J.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}X.checkFramebufferStatus(X.FRAMEBUFFER)===X.FRAMEBUFFER_COMPLETE?t>=0&&t<=e.width-r&&n>=0&&n<=e.height-i&&X.readPixels(t,n,r,i,Vt(a.format),Vt(a.type),s):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{u&&X.bindFramebuffer(X.FRAMEBUFFER,w)}}}},THREE.WebGLRenderTarget=function(e,t,n){this.uuid=THREE.Math.generateUUID(),this.width=e,this.height=t,this.scissor=new THREE.Vector4(0,0,e,t),this.scissorTest=!1,this.viewport=new THREE.Vector4(0,0,e,t),n=n||{},n.minFilter===undefined&&(n.minFilter=THREE.LinearFilter),this.texture=new THREE.Texture(undefined,undefined,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.depthBuffer=n.depthBuffer!==undefined?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==undefined?n.stencilBuffer:!0,this.depthTexture=null},Object.assign(THREE.WebGLRenderTarget.prototype,THREE.EventDispatcher.prototype,{setSize:function(e,t){if(this.width!==e||this.height!==t)this.width=e,this.height=t,this.dispose();this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),THREE.WebGLRenderTargetCube=function(e,t,n){THREE.WebGLRenderTarget.call(this,e,t,n),this.activeCubeFace=0,this.activeMipMapLevel=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.WebGLBufferRenderer=function(e,t,n){function i(e){r=e}function s(t,i){e.drawArrays(r,t,i),n.calls++,n.vertices+=i,r===e.TRIANGLES&&(n.faces+=i/3)}function o(i){var s=t.get("ANGLE_instanced_arrays");if(s===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var o=i.attributes.position,u=0;o instanceof THREE.InterleavedBufferAttribute?(u=o.data.count,s.drawArraysInstancedANGLE(r,0,u,i.maxInstancedCount)):(u=o.count,s.drawArraysInstancedANGLE(r,0,u,i.maxInstancedCount)),n.calls++,n.vertices+=u*i.maxInstancedCount,r===e.TRIANGLES&&(n.faces+=i.maxInstancedCount*u/3)}var r;this.setMode=i,this.render=s,this.renderInstances=o},THREE.WebGLClipping=function(){function a(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n}function f(t,n,r,i){var a=t!==null?t.length:0,f=null;if(a!==0){f=u.value;if(i!==!0||f===null){var l=r+a*4,c=n.matrixWorldInverse;o.getNormalMatrix
(c);if(f===null||f.length<l)f=new Float32Array(l);for(var h=0,p=r;h!==a;++h,p+=4)s.copy(t[h]).applyMatrix4(c,o),s.normal.toArray(f,p),f[p+3]=s.constant}u.value=f,u.needsUpdate=!0}return e.numPlanes=a,f}var e=this,t=null,n=0,r=!1,i=!1,s=new THREE.Plane,o=new THREE.Matrix3,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.init=function(e,i,s){var o=e.length!==0||i||n!==0||r;return r=i,t=f(e,s,0),n=e.length,o},this.beginShadows=function(){i=!0,f(null)},this.endShadows=function(){i=!1,a()},this.setState=function(e,s,o,l,c){if(!r||e===null||e.length===0||i&&!s)i?f(null):a();else{var h=i?0:n,p=h*4,d=l.clippingState||null;u.value=d,d=f(e,o,p,c);for(var v=0;v!==p;++v)d[v]=t[v];l.clippingState=d,this.numPlanes+=h}}},THREE.WebGLIndexedBufferRenderer=function(e,t,n){function i(e){r=e}function u(n){n.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(s=e.UNSIGNED_INT,o=4):(s=e.UNSIGNED_SHORT,o=2)}function a(t,i){e.drawElements(r,i,s,t*o),n.calls++,n.vertices+=i,r===e.TRIANGLES&&(n.faces+=i/3)}function f(i,u,a){var f=t.get("ANGLE_instanced_arrays");if(f===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}f.drawElementsInstancedANGLE(r,a,s,u*o,i.maxInstancedCount),n.calls++,n.vertices+=a*i.maxInstancedCount,r===e.TRIANGLES&&(n.faces+=i.maxInstancedCount*a/3)}var r,s,o;this.setMode=i,this.setIndex=u,this.render=a,this.renderInstances=f},THREE.WebGLExtensions=function(e){var t={};this.get=function(n){if(t[n]!==undefined)return t[n];var r;switch(n){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":r=e.getExtension("WEBGL_compressed_texture_etc1");break;default:r=e.getExtension(n)}return r===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}},THREE.WebGLCapabilities=function(e,t,n){function i(){if(r!==undefined)return r;var n=t.get("EXT_texture_filter_anisotropic");return n!==null?r=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):r=0,r}function s(t){if(t==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return t==="mediump"&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var r;this.getMaxAnisotropy=i,this.getMaxPrecision=s,this.precision=n.precision!==undefined?n.precision:"highp",this.logarithmicDepthBuffer=n.logarithmicDepthBuffer!==undefined?n.logarithmicDepthBuffer:!1,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var o=s(this.precision);o!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",o,"instead."),this.precision=o),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},THREE.WebGLGeometries=function(e,t,n){function i(e){var t=e.geometry;if(r[t.id]!==undefined)return r[t.id];t.addEventListener("dispose",s);var i;return t instanceof THREE.BufferGeometry?i=t:t instanceof THREE.Geometry&&(t._bufferGeometry===undefined&&(t._bufferGeometry=(new THREE.BufferGeometry).setFromObject(e)),i=t._bufferGeometry),r[t.id]=i,n.memory.geometries++,i}function s(e){var i=e.target,o=r[i.id];o.index!==null&&u(o.index),a(o.attributes),i.removeEventListener("dispose",s),delete r[i.id];var f=t.get(i);f.wireframe&&u(f.wireframe),t.delete(i);var l=t.get(o);l.wireframe&&u(l.wireframe),t.delete(o),n.memory.geometries--}function o(e){return e instanceof THREE.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}function u(t){var n=o(t);n!==undefined&&(e.deleteBuffer(n),f(t))}function a(e){for(var t in e)u(e[t])}function f(e){e instanceof THREE.InterleavedBufferAttribute?t.delete(e.data):t.delete(e)}var r={};this.get=i},THREE.WebGLLights=function(){var e={};this.get=function(t){if(e[t.id]!==undefined)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new THREE.Vector3,color:new THREE.Color,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"SpotLight":n={position:new THREE.Vector3,direction:new THREE.Vector3,color:new THREE.Color,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"PointLight":n={position:new THREE.Vector3,color:new THREE.Color,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new THREE.Vector2};break;case"HemisphereLight":n={direction:new THREE.Vector3,skyColor:new THREE.Color,groundColor:new THREE.Color}}return e[t.id]=n,n}},THREE.WebGLObjects=function(e,t,n){function i(t){var n=r.get(t);t.geometry instanceof THREE.Geometry&&n.updateFromObject(t);var i=n.index,o=n.attributes;i!==null&&s(i,e.ELEMENT_ARRAY_BUFFER);for(var u in o)s(o[u],e.ARRAY_BUFFER);var a=n.morphAttributes;for(var u in a){var f=a[u];for(var l=0,c=f.length;l<c;l++)s(f[l],e.ARRAY_BUFFER)}return n}function s(e,n){var r=e instanceof THREE.InterleavedBufferAttribute?e.data:e,i=t.get(r);i.__webglBuffer===undefined?o(i,r,n):i.version!==r.version&&u(i,r,n)}function o(t,n,r){t.__webglBuffer=e.createBuffer(),e.bindBuffer(r,t.__webglBuffer);var i=n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(r,n.array,i),t.version=n.version}function u(t,n,r){e.bindBuffer(r,t.__webglBuffer),n.dynamic===!1||n.updateRange.count===-1?e.bufferSubData(r,0,n.array):n.updateRange.count===0?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count)),n.updateRange.count=0),t.version=n.version}function a(e){return e instanceof THREE.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}function f(n){var r=t.get(n);if(r.wireframe!==undefined)return r.wireframe;var i=[],o=n.index,u=n.attributes,a=u.position;if(o!==null){var f={},c=o.array;for(var h=0,p=c.length;h<p;h+=3){var d=c[h+0],v=c[h+1],m=c[h+2];l(f,d,v)&&i.push(d,v),l(f,v,m)&&i.push(v,m),l(f,m,d)&&i.push(m,d)}}else{var c=u.position.array;for(var h=0,p=c.length/3-1;h<p;h+=3){var d=h+0,v=h+1,m=h+2;i.push(d,v,v,m,m,d)}}var g=a.count>65535?Uint32Array:Uint16Array,y=new THREE.BufferAttribute(new g(i),1);return s(y,e.ELEMENT_ARRAY_BUFFER),r.wireframe=y,y}function l(e,t,n){if(t>n){var r=t;t=n,n=r}var i=e[t];return i===undefined?(e[t]=[n],!0):i.indexOf(n)===-1?(i.push(n),!0):!1}var r=new THREE.WebGLGeometries(e,t,n);this.getAttributeBuffer=a,this.getWireframeAttribute=f,this.update=i},THREE.WebGLProgram=function(){function t(e){switch(e){case THREE.LinearEncoding:return["Linear","( value )"];case THREE.sRGBEncoding:return["sRGB","( value )"];case THREE.RGBEEncoding:return["RGBE","( value )"];case THREE.RGBM7Encoding:return["RGBM","( value, 7.0 )"];case THREE.RGBM16Encoding:return["RGBM","( value, 16.0 )"];case THREE.RGBDEncoding:return["RGBD","( value, 256.0 )"];case THREE.GammaEncoding:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function n(e,n){var r=t(n);return"vec4 "+e+"( vec4 value ) { return "+r[0]+"ToLinear"+r[1]+"; }"}function r(e,n){var r=t(n);return"vec4 "+e+"( vec4 value ) { return LinearTo"+r[0]+r[1]+"; }"}function i(e,t){var n;switch(t){case THREE.LinearToneMapping:n="Linear";break;case THREE.ReinhardToneMapping:n="Reinhard";break;case THREE.Uncharted2ToneMapping:n="Uncharted2";break;case THREE.CineonToneMapping:n="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function s(e,t,n){e=e||{};var r=[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return r.filter(a).join("\n")}function o(e){var t=[];for(var n in e){var r=e[n];if(r===!1)continue;t.push("#define "+n+" "+r)}return t.join("\n")}function u(e,t,n){var r={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(var s=0;s<i;s++){var o=e.getActiveAttrib(t,s),u=o.name;r[u]=e.getAttribLocation(t,u)}return r}function a(e){return e!==""}function f(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function l(e){function n(e,t){var n=THREE.ShaderChunk[t];if(n===undefined)throw new Error("Can not resolve #include <"+t+">");return l(n)}var t=/#include +<([\w\d.]+)>/g;return e.replace(t,n)}function c(e){function n(e,t,n,r){var i="";for(var s=parseInt(t);s<parseInt(n);s++)i+=r.replace(/\[ i \]/g,"[ "+s+" ]");return i}var t=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;return e.replace(t,n)}var e=0;return function(h,p,d,v){var m=h.context,g=d.extensions,y=d.defines,b=d.__webglShader.vertexShader,w=d.__webglShader.fragmentShader,E="SHADOWMAP_TYPE_BASIC";v.shadowMapType===THREE.PCFShadowMap?E="SHADOWMAP_TYPE_PCF":v.shadowMapType===THREE.PCFSoftShadowMap&&(E="SHADOWMAP_TYPE_PCF_SOFT");var S="ENVMAP_TYPE_CUBE",x="ENVMAP_MODE_REFLECTION",T="ENVMAP_BLENDING_MULTIPLY";if(v.envMap){switch(d.envMap.mapping){case THREE.CubeReflectionMapping:case THREE.CubeRefractionMapping:S="ENVMAP_TYPE_CUBE";break;case THREE.CubeUVReflectionMapping:case THREE.CubeUVRefractionMapping:S="ENVMAP_TYPE_CUBE_UV";break;case THREE.EquirectangularReflectionMapping:case THREE.EquirectangularRefractionMapping:S="ENVMAP_TYPE_EQUIREC";break;case THREE.SphericalReflectionMapping:S="ENVMAP_TYPE_SPHERE"}switch(d.envMap.mapping){case THREE.CubeRefractionMapping:case THREE.EquirectangularRefractionMapping:x="ENVMAP_MODE_REFRACTION"}switch(d.combine){case THREE.MultiplyOperation:T="ENVMAP_BLENDING_MULTIPLY";break;case THREE.MixOperation:T="ENVMAP_BLENDING_MIX";break;case THREE.AddOperation:T="ENVMAP_BLENDING_ADD"}}var N=h.gammaFactor>0?h.gammaFactor:1,C=s(g,v,h.extensions),k=o(y),L=m.createProgram(),A,O;d instanceof THREE.RawShaderMaterial?(A=[k].filter(a).join("\n"),O=[k].filter(a).join("\n")):(A=["precision "+v.precision+" float;","precision "+v.precision+" int;","#define SHADER_NAME "+d.__webglShader.name,k,v.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+N,"#define MAX_BONES "+v.maxBones,v.map?"#define USE_MAP":"",v.envMap?"#define USE_ENVMAP":"",v.envMap?"#define "+x:"",v.lightMap?"#define USE_LIGHTMAP":"",v.aoMap?"#define USE_AOMAP":"",v.emissiveMap?"#define USE_EMISSIVEMAP":"",v.bumpMap?"#define USE_BUMPMAP":"",v.normalMap?"#define USE_NORMALMAP":"",v.displacementMap&&v.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",v.specularMap?"#define USE_SPECULARMAP":"",v.roughnessMap?"#define USE_ROUGHNESSMAP":"",v.metalnessMap?"#define USE_METALNESSMAP":"",v.alphaMap?"#define USE_ALPHAMAP":"",v.vertexColors?"#define USE_COLOR":"",v.flatShading?"#define FLAT_SHADED":"",v.skinning?"#define USE_SKINNING":"",v.useVertexTexture?"#define BONE_TEXTURE":"",v.morphTargets?"#define USE_MORPHTARGETS":"",v.morphNormals&&v.flatShading===!1?"#define USE_MORPHNORMALS":"",v.doubleSided?"#define DOUBLE_SIDED":"",v.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+v.numClippingPlanes,v.shadowMapEnabled?"#define USE_SHADOWMAP":"",v.shadowMapEnabled?"#define "+E:"",v.sizeAttenuation?"#define USE_SIZEATTENUATION":"",v.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",v.logarithmicDepthBuffer&&h.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(a).join("\n"),O=[C,"precision "+v.precision+" float;","precision "+v.precision+" int;","#define SHADER_NAME "+d.__webglShader.name,k,v.alphaTest?"#define ALPHATEST "+v.alphaTest:"","#define GAMMA_FACTOR "+N,v.useFog&&v.fog?"#define USE_FOG":"",v.useFog&&v.fogExp?"#define FOG_EXP2":"",v.map?"#define USE_MAP":"",v.envMap?"#define USE_ENVMAP":"",v.envMap?"#define "+S:"",v.envMap?"#define "+x:"",v.envMap?"#define "+T:"",v.lightMap?"#define USE_LIGHTMAP":"",v.aoMap?"#define USE_AOMAP":"",v.emissiveMap?"#define USE_EMISSIVEMAP":"",v.bumpMap?"#define USE_BUMPMAP":"",v.normalMap?"#define USE_NORMALMAP":"",v.specularMap?"#define USE_SPECULARMAP":"",v.roughnessMap?"#define USE_ROUGHNESSMAP":"",v.metalnessMap?"#define USE_METALNESSMAP":"",v.alphaMap?"#define USE_ALPHAMAP":"",v.vertexColors?"#define USE_COLOR":"",v.flatShading?"#define FLAT_SHADED":"",v.doubleSided?"#define DOUBLE_SIDED":"",v.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+v.numClippingPlanes,v.shadowMapEnabled?"#define USE_SHADOWMAP":"",v.shadowMapEnabled?"#define "+E:"",v.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",v.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",v.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",v.logarithmicDepthBuffer&&h.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",v.envMap&&h.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",v.toneMapping!==THREE.NoToneMapping?"#define TONE_MAPPING":"",v.toneMapping!==THREE.NoToneMapping?THREE.ShaderChunk.tonemapping_pars_fragment:"",v.toneMapping!==THREE.NoToneMapping?i("toneMapping",v.toneMapping):"",v.outputEncoding||v.mapEncoding||v.envMapEncoding||v.emissiveMapEncoding?THREE.ShaderChunk.encodings_pars_fragment:"",v.mapEncoding?n("mapTexelToLinear",v.mapEncoding):"",v.envMapEncoding?n("envMapTexelToLinear",v.envMapEncoding):"",v.emissiveMapEncoding?n("emissiveMapTexelToLinear",v.emissiveMapEncoding):"",v.outputEncoding?r("linearToOutputTexel",v.outputEncoding):"",v.depthPacking?"#define DEPTH_PACKING "+d.depthPacking:"","\n"].filter(a).join("\n")),b=l(b,v),b=f(b,v),w=l(w,v),w=f(w,v),d instanceof THREE.ShaderMaterial==0&&(b=c(b),w=c(w));var M=A+b,_=O+w,D=THREE.WebGLShader(m,m.VERTEX_SHADER,M),P=THREE.WebGLShader(m,m.FRAGMENT_SHADER,_);m.attachShader(L,D),m.attachShader(L,P),d.index0AttributeName!==undefined?m.bindAttribLocation(L,0,d.index0AttributeName):v.morphTargets===!0&&m.bindAttribLocation(L,0,"position"),m.linkProgram(L);var H=m.getProgramInfoLog(L),B=m.getShaderInfoLog(D),j=m.getShaderInfoLog(P),F=!0,I=!0;if(m.getProgramParameter(L,m.LINK_STATUS)===!1)F=!1,console.error("THREE.WebGLProgram: shader error: ",m.getError(),"gl.VALIDATE_STATUS",m.getProgramParameter(L,m.VALIDATE_STATUS),"gl.getProgramInfoLog",H,B,j);else if(H!=="")console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",H);else if(B===""||j==="")I=!1;I&&(this.diagnostics={runnable:F,material:d,programLog:H,vertexShader:{log:B,prefix:A},fragmentShader:{log:j,prefix:O}}),m.deleteShader(D),m.deleteShader(P);var q;this.getUniforms=function(){return q===undefined&&(q=new THREE.WebGLUniforms(m,L,h)),q};var R;return this.getAttributes=function(){return R===undefined&&(R=u(m,L)),R},this.destroy=function(){m.deleteProgram(L),this.program=undefined},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=e++,this.code=p,this.usedTimes=1,this.program=L,this.vertexShader=D,this.fragmentShader=P,this}}(),THREE.WebGLPrograms=function(e,t){function s(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var n=t.maxVertexUniforms,r=Math.floor((n-20)/4),i=r;return e!==undefined&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.skeleton.bones.length,i),i<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function o(e,t){var n;return e?e instanceof THREE.Texture?n=e.encoding:e instanceof THREE.WebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),n=e.texture.encoding):n=THREE.LinearEncoding,n===THREE.LinearEncoding&&t&&(n=THREE.GammaEncoding),n}var n=[],r={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},i=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","depthPacking"];this.getParameters=function(n,i,u,a,f){var l=r[n.type],c=s(f),h=e.getPrecision();n.precision!==null&&(h=t.getMaxPrecision(n.precision),h!==n.precision&&console.warn("THREE.WebGLProgram.getParameters:",n.precision,"not supported, using",h,"instead."));var p=e.getCurrentRenderTarget(),d={shaderID:l,precision:h,supportsVertexTextures:t.vertexTextures,outputEncoding:o(p?p.texture:null,e.gammaOutput),map:!!n.map,mapEncoding:o(n.map,e.gammaInput),envMap:!!n.envMap,envMapMode:n.envMap&&n.envMap.mapping,envMapEncoding:o(n.envMap,e.gammaInput),envMapCubeUV:!!n.envMap&&(n.envMap.mapping===THREE.CubeUVReflectionMapping||n.envMap.mapping===THREE.CubeUVRefractionMapping),lightMap:!!n.lightMap,aoMap:!!n.aoMap,emissiveMap:!!n.emissiveMap,emissiveMapEncoding:o(n.emissiveMap,e.gammaInput),bumpMap:!!n.bumpMap,normalMap:!!n.normalMap,displacementMap:!!n.displacementMap,roughnessMap:!!n.roughnessMap,metalnessMap:!!n.metalnessMap,specularMap:!!n.specularMap,alphaMap:!!n.alphaMap,combine:n.combine,vertexColors:n.vertexColors,fog:!!u,useFog:n.fog,fogExp:u instanceof THREE.FogExp2,flatShading:n.shading===THREE.FlatShading,sizeAttenuation:n.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:n.skinning,maxBones:c,useVertexTexture:t.floatVertexTextures&&f&&f.skeleton&&f.skeleton.useVertexTexture,morphTargets:n.morphTargets,morphNormals:n.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:i.directional.length,numPointLights:i.point.length,numSpotLights:i.spot.length,numHemiLights:i.hemi.length,numClippingPlanes:a,shadowMapEnabled:e.shadowMap.enabled&&f.receiveShadow&&i.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:n.premultipliedAlpha,alphaTest:n.alphaTest,doubleSided:n.side===THREE.DoubleSide,flipSided:n.side===THREE.BackSide,depthPacking:n.depthPacking!==undefined?n.depthPacking:!1};return d},this.getProgramCode=function(e,t){var n=[];t.shaderID?n.push(t.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader));if(e.defines!==undefined)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var s=0;s<i.length;s++)n.push(t[i[s]]);return n.join()},this.acquireProgram=function(t,r,i){var s;for(var o=0,u=n.length;o<u;o++){var a=n[o];if(a.code===i){s=a,++s.usedTimes;break}}return s===undefined&&(s=new THREE.WebGLProgram(e,i,t,r),n.push(s)),s},this.releaseProgram=function(e){if(--e.usedTimes===0){var t=n.indexOf(e);n[t]=n[n.length-1],n.pop(),e.destroy()}},this.programs=n},THREE.WebGLProperties=function(){var e={};this.get=function(t){var n=t.uuid,r=e[n];return r===undefined&&(r={},e[n]=r),r},this.delete=function(t){delete e[t.uuid]},this.clear=function(){e={}}},THREE.WebGLShader=function(){function e(e){var t=e.split("\n");for(var n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}return function(n,r,i){var s=n.createShader(r);return n.shaderSource(s,i),n.compileShader(s),n.getShaderParameter(s,n.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),n.getShaderInfoLog(s)!==""&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",r===n.VERTEX_SHADER?"vertex":"fragment",n.getShaderInfoLog(s),e(i)),s}}(),THREE.WebGLShadowMap=function(e,t,n,r){function _(t,n,r,i){var s=t.geometry,o=null,u=g,a=t.customDepthMaterial;r&&(u=y,a=t.customDistanceMaterial);if(!a){var f=!1;n.morphTargets&&(s instanceof THREE.BufferGeometry?f=s.morphAttributes&&s.morphAttributes.position&&s.morphAttributes.position.length>0:s instanceof THREE.Geometry&&(f=s.morphTargets&&s.morphTargets.length>0));var l=t instanceof THREE.SkinnedMesh&&n.skinning,c=0;f&&(c|=d),l&&(c|=v),o=u[c]}else o=a;if(e.localClippingEnabled&&n.clipShadows===!0&&n.clippingPlanes.length!==0){var h=o.uuid,p=n.uuid,m=b[h];m===undefined&&(m={},b[h]=m);var w=m[p];w===undefined&&(w=o.clone(),m[p]=w),o=w}o.visible=n.visible,o.wireframe=n.wireframe;var E=n.side;return M.renderSingleSided&&E==THREE.DoubleSide&&(E=THREE.FrontSide),M.renderReverseSided&&(E===THREE.FrontSide?E=THREE.BackSide:E===THREE.BackSide&&(E=THREE.FrontSide)),o.side=E,o.clipShadows=n.clipShadows,o.clippingPlanes=n.clippingPlanes,o.wireframeLinewidth=n.wireframeLinewidth,o.linewidth=n.linewidth,r&&o.uniforms.lightPos!==undefined&&o.uniforms.lightPos.value.copy(i),o}function D(e,t,n){if(e.visible===!1)return;if(e.layers.test(t.layers)&&(e instanceof THREE.Mesh||e instanceof THREE.Line||e instanceof THREE.Points)&&e.castShadow&&(e.frustumCulled===!1||o.intersectsObject(e)===!0)){var r=e.material;r.visible===!0&&(e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),p.push(e))}var i=e.children;for(var s=0,u=i.length;s<u;s++)D(i[s],t,n)}var i=e.context,s=e.state,o=new THREE.Frustum,u=new THREE.Matrix4,a=t.shadows,f=new THREE.Vector2,l=new THREE.Vector2(r.maxTextureSize,r.maxTextureSize),c=new THREE.Vector3,h=new THREE.Vector3,p=[],d=1,v=2,m=(d|v)+1,g=new Array(m),y=new Array(m),b={},w=[new THREE.Vector3(1,0,0),new THREE.Vector3(-1,0,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1),new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1,0)],E=[new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,1,0),new THREE.Vector3(0,0,1),new THREE.Vector3(0,0,-1)],S=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],x=new THREE.MeshDepthMaterial;x.depthPacking=THREE.RGBADepthPacking,x.clipping=!0;var T=THREE.ShaderLib.distanceRGBA,N=THREE.UniformsUtils.clone(T.uniforms);for(var C=0;C!==m;++C){var k=(C&d)!==0,L=(C&v)!==0,A=x.clone();A.morphTargets=k,A.skinning=L,g[C]=A;var O=new THREE.ShaderMaterial({defines:{USE_SHADOWMAP:""},uniforms:N,vertexShader:T.vertexShader,fragmentShader:T.fragmentShader,morphTargets:k,skinning:L,clipping:!0});y[C]=O}var M=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=THREE.PCFShadowMap,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function(t,r){if(M.enabled===!1)return;if(M.autoUpdate===!1&&M.needsUpdate===!1)return;if(a.length===0)return;s.clearColor(1,1,1,1),s.disable(i.BLEND),s.setDepthTest(!0),s.setScissorTest(!1);var d,v;for(var m=0,g=a.length;m<g;m++){var y=a[m],b=y.shadow;if(b===undefined){console.warn("THREE.WebGLShadowMap:",y,"has no shadow.");continue}var x=b.camera;f.copy(b.mapSize),f.min(l);if(y instanceof THREE.PointLight){d=6,v=!0;var T=f.x,N=f.y;S[0].set(T*2,N,T,N),S[1].set(0,N,T,N),S[2].set(T*3,N,T,N),S[3].set(T,N,T,N),S[4].set(T*3,0,T,N),S[5].set(T,0,T,N),f.x*=4,f.y*=2}else d=1,v=!1;if(b.map===null){var C={minFilter:THREE.NearestFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};b.map=new THREE.WebGLRenderTarget(f.x,f.y,C),x.updateProjectionMatrix()}b instanceof THREE.SpotLightShadow&&b.update(y);var k=b.map,L=b.matrix;h.setFromMatrixPosition(y.matrixWorld),x.position.copy(h),e.setRenderTarget(k),e.clear();for(var A=0;A<d;A++){if(v){c.copy(x.position),c.add(w[A]),x.up.copy(E[A]),x.lookAt(c);var O=S[A];s.viewport(O)}else c.setFromMatrixPosition(y.target.matrixWorld),x.lookAt(c);x.updateMatrixWorld(),x.matrixWorldInverse.getInverse(x.matrixWorld),L.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),L.multiply(x.projectionMatrix),L.multiply(x.matrixWorldInverse),u.multiplyMatrices(x.projectionMatrix,x.matrixWorldInverse),o.setFromMatrix(u),p.length=0,D(t,r,x);for(var P=0,H=p.length;P<H;P++){var B=p[P],j=n.update(B),F=B.material;if(F instanceof THREE.MultiMaterial){var I=j.groups,q=F.materials;for(var R=0,U=I.length;R<U;R++){var z=I[R],W=q[z.materialIndex];if(W.visible===!0){var X=_(B,W,v,h);e.renderBufferDirect(x,null,j,X,B,z)}}}else{var X=_(B,F,v,h);e.renderBufferDirect(x,null,j,X,B,null)}}}}var V=e.getClearColor(),$=e.getClearAlpha();e.setClearColor(V,$),M.needsUpdate=!1}},THREE.WebGLState=function(e,t,n){function A(t,n,r){var i=new Uint8Array(4),s=e.createTexture();e.bindTexture(t,s),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var o=0;o<r;o++)e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,i);return s}var r=this;this.buffers={color:new THREE.WebGLColorBuffer(e,this),depth:new THREE.WebGLDepthBuffer(e,this),stencil:new THREE.WebGLStencilBuffer(e,this)};var i=e.getParameter(e.MAX_VERTEX_ATTRIBS),s=new Uint8Array(i),o=new Uint8Array(i),u=new Uint8Array(i),a={},f=null,l=null,c=null,h=null,p=null,d=null,v=null,m=null,g=!1,y=null,b=null,w=null,E=null,S=null,x=null,T=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),N=null,C={},k=new THREE.Vector4,L=new THREE.Vector4,O={};O[e.TEXTURE_2D]=A(e.TEXTURE_2D,e.TEXTURE_2D,1),O[e.TEXTURE_CUBE_MAP]=A(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),this.init=function(){this.clearColor(0,0,0,1),this.clearDepth(1),this.clearStencil(0),this.enable(e.DEPTH_TEST),this.setDepthFunc(THREE.LessEqualDepth),this.setFlipSided(!1),this.setCullFace(THREE.CullFaceBack),this.enable(e.CULL_FACE),this.enable(e.BLEND),this.setBlending(THREE.NormalBlending)},this.initAttributes=function(){for(var e=0,t=s.length;e<t;e++)s[e]=0},this.enableAttribute=function(n){s[n]=1,o[n]===0&&(e.enableVertexAttribArray(n),o[n]=1);if(u[n]!==0){var r=t.get("ANGLE_instanced_arrays");r.vertexAttribDivisorANGLE(n,0),u[n]=0}},this.enableAttributeAndDivisor=function(t,n,r){s[t]=1,o[t]===0&&(e.enableVertexAttribArray(t),o[t]=1),u[t]!==n&&(r.vertexAttribDivisorANGLE(t,n),u[t]=n)},this.disableUnusedAttributes=function(){for(var t=0,n=o.length;t!==n;++t)o[t]!==s[t]&&(e.disableVertexAttribArray(t),o[t]=0)},this.enable=function(t){a[t]!==!0&&(e.enable(t),a[t]=!0)},this.disable=function(t){a[t]!==!1&&(e.disable(t),a[t]=!1)},this.getCompressedTextureFormats=function(){if(f===null){f=[];if(t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")){var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS);for(var r=0;r<n.length;r++)f.push(n[r])}}return f},this.setBlending=function(t,r,i,s,o,u,a,f){if(t===THREE.NoBlending){this.disable(e.BLEND),l=t;return}this.enable(e.BLEND);if(t!==l||f!==g)t===THREE.AdditiveBlending?f?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===THREE.SubtractiveBlending?f?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===THREE.MultiplyBlending?f?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):f?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),l=t,g=f;if(t===THREE.CustomBlending){o=o||r,u=u||i,a=a||s;if(r!==c||o!==d)e.blendEquationSeparate(n(r),n(o)),c=r,d=o;if(i!==h||s!==p||u!==v||a!==m)e.blendFuncSeparate(n(i),n(s),n(u),n(a)),h=i,p=s,v=u,m=a}else c=null,h=null,p=null,d=null,v=null,m=null},this.setColorWrite=function(e){this.buffers.color.setMask(e)},this.setDepthTest=function(e){this.buffers.depth.setTest(e)},this.setDepthWrite=function(e){this.buffers.depth.setMask(e)},this.setDepthFunc=function(e){this.buffers.depth.setFunc(e)},this.setStencilTest=function(e){this.buffers.stencil.setTest(e)},this.setStencilWrite=function(e){this.buffers.stencil.setMask(e)},this.setStencilFunc=function(e,t,n){this.buffers.stencil.setFunc(e,t,n)},this.setStencilOp=function(e,t,n){this.buffers.stencil.setOp(e,t,n)},this.setFlipSided=function(t){y!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),y=t)},this.setCullFace=function(t){t!==THREE.CullFaceNone?(this.enable(e.CULL_FACE),t!==b&&(t===THREE.CullFaceBack?e.cullFace(e.BACK):t===THREE.CullFaceFront?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):this.disable(e.CULL_FACE),b=t},this.setLineWidth=function(t){t!==w&&(e.lineWidth(t),w=t)},this.setPolygonOffset=function(t,n,r){if(t){this.enable(e.POLYGON_OFFSET_FILL);if(E!==n||S!==r)e.polygonOffset(n,r),E=n,S=r}else this.disable(e.POLYGON_OFFSET_FILL)},this.getScissorTest=function(){return x},this.setScissorTest=function(t){x=t,t?this.enable(e.SCISSOR_TEST):this.disable(e.SCISSOR_TEST)},this.activeTexture=function(t){t===undefined&&(t=e.TEXTURE0+T-1),N!==t&&(e.activeTexture(t),N=t)},this.bindTexture=function(t,n){N===null&&r.activeTexture();var i=C[N];i===undefined&&(i={type:undefined,texture:undefined},C[N]=i);if(i.type!==t||i.texture!==n)e.bindTexture(t,n||O[t]),i.type=t,i.texture=n},this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error(t)}},this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error(t)}},this.clearColor=function(e,t,n,r){this.buffers.color.setClear(e,t,n,r)},this.clearDepth=function(e){this.buffers.depth.setClear(e)},this.clearStencil=function(e){this.buffers.stencil.setClear(e)},this.scissor=function(t){k.equals(t)===!1&&(e.scissor(t.x,t.y,t.z,t.w),k.copy(t))},this
.viewport=function(t){L.equals(t)===!1&&(e.viewport(t.x,t.y,t.z,t.w),L.copy(t))},this.reset=function(){for(var t=0;t<o.length;t++)o[t]===1&&(e.disableVertexAttribArray(t),o[t]=0);a={},f=null,N=null,C={},l=null,y=null,b=null,this.buffers.color.reset(),this.buffers.depth.reset(),this.buffers.stencil.reset()}},THREE.WebGLColorBuffer=function(e,t){var n=!1,r=new THREE.Vector4,i=null,s=new THREE.Vector4;this.setMask=function(t){i!==t&&!n&&(e.colorMask(t,t,t,t),i=t)},this.setLocked=function(e){n=e},this.setClear=function(t,n,i,o){r.set(t,n,i,o),s.equals(r)===!1&&(e.clearColor(t,n,i,o),s.copy(r))},this.reset=function(){n=!1,i=null,s=new THREE.Vector4}},THREE.WebGLDepthBuffer=function(e,t){var n=!1,r=null,i=null,s=null;this.setTest=function(n){n?t.enable(e.DEPTH_TEST):t.disable(e.DEPTH_TEST)},this.setMask=function(t){r!==t&&!n&&(e.depthMask(t),r=t)},this.setFunc=function(t){if(i!==t){if(t)switch(t){case THREE.NeverDepth:e.depthFunc(e.NEVER);break;case THREE.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case THREE.LessDepth:e.depthFunc(e.LESS);break;case THREE.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case THREE.EqualDepth:e.depthFunc(e.EQUAL);break;case THREE.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case THREE.GreaterDepth:e.depthFunc(e.GREATER);break;case THREE.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);i=t}},this.setLocked=function(e){n=e},this.setClear=function(t){s!==t&&(e.clearDepth(t),s=t)},this.reset=function(){n=!1,r=null,i=null,s=null}},THREE.WebGLStencilBuffer=function(e,t){var n=!1,r=null,i=null,s=null,o=null,u=null,a=null,f=null,l=null;this.setTest=function(n){n?t.enable(e.STENCIL_TEST):t.disable(e.STENCIL_TEST)},this.setMask=function(t){r!==t&&!n&&(e.stencilMask(t),r=t)},this.setFunc=function(t,n,r){if(i!==t||s!==n||o!==r)e.stencilFunc(t,n,r),i=t,s=n,o=r},this.setOp=function(t,n,r){if(u!==t||a!==n||f!==r)e.stencilOp(t,n,r),u=t,a=n,f=r},this.setLocked=function(e){n=e},this.setClear=function(t){l!==t&&(e.clearStencil(t),l=t)},this.reset=function(){n=!1,r=null,i=null,s=null,o=null,u=null,a=null,f=null,l=null}},THREE.WebGLTextures=function(e,t,n,r,i,s,o){function f(e,t){if(e.width>t||e.height>t){var n=t/Math.max(e.width,e.height),r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n);var i=r.getContext("2d");return i.drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+r.width+"x"+r.height,e),r}return e}function l(e){return THREE.Math.isPowerOfTwo(e.width)&&THREE.Math.isPowerOfTwo(e.height)}function c(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");t.width=THREE.Math.nearestPowerOfTwo(e.width),t.height=THREE.Math.nearestPowerOfTwo(e.height);var n=t.getContext("2d");return n.drawImage(e,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function h(e){return e.wrapS!==THREE.ClampToEdgeWrapping||e.wrapT!==THREE.ClampToEdgeWrapping?!0:e.minFilter!==THREE.NearestFilter&&e.minFilter!==THREE.LinearFilter?!0:!1}function p(t){return t===THREE.NearestFilter||t===THREE.NearestMipMapNearestFilter||t===THREE.NearestMipMapLinearFilter?e.NEAREST:e.LINEAR}function d(e){var t=e.target;t.removeEventListener("dispose",d),m(t),u.textures--}function v(e){var t=e.target;t.removeEventListener("dispose",v),g(t),u.textures--}function m(t){var n=r.get(t);if(t.image&&n.__image__webglTextureCube)e.deleteTexture(n.__image__webglTextureCube);else{if(n.__webglInit===undefined)return;e.deleteTexture(n.__webglTexture)}r.delete(t)}function g(t){var n=r.get(t),i=r.get(t.texture);if(!t)return;i.__webglTexture!==undefined&&e.deleteTexture(i.__webglTexture),t.depthTexture&&t.depthTexture.dispose();if(t instanceof THREE.WebGLRenderTargetCube)for(var s=0;s<6;s++)e.deleteFramebuffer(n.__webglFramebuffer[s]),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer[s]);else e.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&e.deleteRenderbuffer(n.__webglDepthbuffer);r.delete(t.texture),r.delete(t)}function y(t,i){var s=r.get(t);if(t.version>0&&s.__version!==t.version){var o=t.image;if(o===undefined)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",t);else{if(o.complete!==!1){S(s,t,i);return}console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",t)}}n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_2D,s.__webglTexture)}function b(t,o){var a=r.get(t);if(t.image.length===6)if(t.version>0&&a.__version!==t.version){a.__image__webglTextureCube||(t.addEventListener("dispose",d),a.__image__webglTextureCube=e.createTexture(),u.textures++),n.activeTexture(e.TEXTURE0+o),n.bindTexture(e.TEXTURE_CUBE_MAP,a.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,t.flipY);var c=t instanceof THREE.CompressedTexture,h=t.image[0]instanceof THREE.DataTexture,p=[];for(var v=0;v<6;v++)!c&&!h?p[v]=f(t.image[v],i.maxCubemapSize):p[v]=h?t.image[v].image:t.image[v];var m=p[0],g=l(m),y=s(t.format),b=s(t.type);E(e.TEXTURE_CUBE_MAP,t,g);for(var v=0;v<6;v++)if(!c)h?n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,y,p[v].width,p[v].height,0,y,b,p[v].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,0,y,y,b,p[v]);else{var w,S=p[v].mipmaps;for(var x=0,T=S.length;x<T;x++)w=S[x],t.format!==THREE.RGBAFormat&&t.format!==THREE.RGBFormat?n.getCompressedTextureFormats().indexOf(y)>-1?n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,x,y,w.width,w.height,0,w.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+v,x,y,w.width,w.height,0,y,b,w.data)}t.generateMipmaps&&g&&e.generateMipmap(e.TEXTURE_CUBE_MAP),a.__version=t.version,t.onUpdate&&t.onUpdate(t)}else n.activeTexture(e.TEXTURE0+o),n.bindTexture(e.TEXTURE_CUBE_MAP,a.__image__webglTextureCube)}function w(t,i){n.activeTexture(e.TEXTURE0+i),n.bindTexture(e.TEXTURE_CUBE_MAP,r.get(t).__webglTexture)}function E(n,o,u){var a;u?(e.texParameteri(n,e.TEXTURE_WRAP_S,s(o.wrapS)),e.texParameteri(n,e.TEXTURE_WRAP_T,s(o.wrapT)),e.texParameteri(n,e.TEXTURE_MAG_FILTER,s(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,s(o.minFilter))):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(o.wrapS!==THREE.ClampToEdgeWrapping||o.wrapT!==THREE.ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",o),e.texParameteri(n,e.TEXTURE_MAG_FILTER,p(o.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,p(o.minFilter)),o.minFilter!==THREE.NearestFilter&&o.minFilter!==THREE.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",o)),a=t.get("EXT_texture_filter_anisotropic");if(a){if(o.type===THREE.FloatType&&t.get("OES_texture_float_linear")===null)return;if(o.type===THREE.HalfFloatType&&t.get("OES_texture_half_float_linear")===null)return;if(o.anisotropy>1||r.get(o).__currentAnisotropy)e.texParameterf(n,a.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy}}function S(t,r,o){t.__webglInit===undefined&&(t.__webglInit=!0,r.addEventListener("dispose",d),t.__webglTexture=e.createTexture(),u.textures++),n.activeTexture(e.TEXTURE0+o),n.bindTexture(e.TEXTURE_2D,t.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment);var p=f(r.image,i.maxTextureSize);h(r)&&l(p)===!1&&(p=c(p));var v=l(p),m=s(r.format),g=s(r.type);E(e.TEXTURE_2D,r,v);var y,b=r.mipmaps;if(r instanceof THREE.DepthTexture){var w=e.DEPTH_COMPONENT;if(r.type===THREE.FloatType){if(!a)throw new Error("Float Depth Texture only supported in WebGL2.0");w=e.DEPTH_COMPONENT32F}else a&&(w=e.DEPTH_COMPONENT16);n.texImage2D(e.TEXTURE_2D,0,w,p.width,p.height,0,m,g,null)}else if(r instanceof THREE.DataTexture)if(b.length>0&&v){for(var S=0,x=b.length;S<x;S++)y=b[S],n.texImage2D(e.TEXTURE_2D,S,m,y.width,y.height,0,m,g,y.data);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,m,p.width,p.height,0,m,g,p.data);else if(r instanceof THREE.CompressedTexture)for(var S=0,x=b.length;S<x;S++)y=b[S],r.format!==THREE.RGBAFormat&&r.format!==THREE.RGBFormat?n.getCompressedTextureFormats().indexOf(m)>-1?n.compressedTexImage2D(e.TEXTURE_2D,S,m,y.width,y.height,0,y.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(e.TEXTURE_2D,S,m,y.width,y.height,0,m,g,y.data);else if(b.length>0&&v){for(var S=0,x=b.length;S<x;S++)y=b[S],n.texImage2D(e.TEXTURE_2D,S,m,m,g,y);r.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,m,m,g,p);r.generateMipmaps&&v&&e.generateMipmap(e.TEXTURE_2D),t.__version=r.version,r.onUpdate&&r.onUpdate(r)}function x(t,i,o,u){var a=s(i.texture.format),f=s(i.texture.type);n.texImage2D(u,0,a,i.width,i.height,0,a,f,null),e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,o,u,r.get(i.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function T(t,n){e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)):n.depthBuffer&&n.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,n.width,n.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function N(t,n){var i=n instanceof THREE.WebGLRenderTargetCube;if(i)throw new Error("Depth Texture with cube render targets is not supported!");e.bindFramebuffer(e.FRAMEBUFFER,t);if(!(n.depthTexture instanceof THREE.DepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");if(!r.get(n.depthTexture).__webglTexture||n.depthTexture.image.width!==n.width||n.depthTexture.image.height!==n.height)n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0;y(n.depthTexture,0);var s=r.get(n.depthTexture).__webglTexture;e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,s,0)}function C(t){var n=r.get(t),i=t instanceof THREE.WebGLRenderTargetCube;if(t.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");N(n.__webglFramebuffer,t)}else if(i){n.__webglDepthbuffer=[];for(var s=0;s<6;s++)e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer[s]),n.__webglDepthbuffer[s]=e.createRenderbuffer(),T(n.__webglDepthbuffer[s],t)}else e.bindFramebuffer(e.FRAMEBUFFER,n.__webglFramebuffer),n.__webglDepthbuffer=e.createRenderbuffer(),T(n.__webglDepthbuffer,t);e.bindFramebuffer(e.FRAMEBUFFER,null)}function k(t){var i=r.get(t),s=r.get(t.texture);t.addEventListener("dispose",v),s.__webglTexture=e.createTexture(),u.textures++;var o=t instanceof THREE.WebGLRenderTargetCube,a=l(t);if(o){i.__webglFramebuffer=[];for(var f=0;f<6;f++)i.__webglFramebuffer[f]=e.createFramebuffer()}else i.__webglFramebuffer=e.createFramebuffer();if(o){n.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture),E(e.TEXTURE_CUBE_MAP,t.texture,a);for(var f=0;f<6;f++)x(i.__webglFramebuffer[f],t,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+f);t.texture.generateMipmaps&&a&&e.generateMipmap(e.TEXTURE_CUBE_MAP),n.bindTexture(e.TEXTURE_CUBE_MAP,null)}else n.bindTexture(e.TEXTURE_2D,s.__webglTexture),E(e.TEXTURE_2D,t.texture,a),x(i.__webglFramebuffer,t,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),t.texture.generateMipmaps&&a&&e.generateMipmap(e.TEXTURE_2D),n.bindTexture(e.TEXTURE_2D,null);t.depthBuffer&&C(t)}function L(t){var i=t.texture;if(i.generateMipmaps&&l(t)&&i.minFilter!==THREE.NearestFilter&&i.minFilter!==THREE.LinearFilter){var s=t instanceof THREE.WebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,o=r.get(i).__webglTexture;n.bindTexture(s,o),e.generateMipmap(s),n.bindTexture(s,null)}}var u=o.memory,a=typeof WebGL2RenderingContext!="undefined"&&e instanceof WebGL2RenderingContext;this.setTexture2D=y,this.setTextureCube=b,this.setTextureCubeDynamic=w,this.setupRenderTarget=k,this.updateRenderTargetMipmap=L},THREE.WebGLUniforms=function(){var e=new THREE.Texture,t=new THREE.CubeTexture,n=function(){this.seq=[],this.map={}},r=[],i=[],s=function(){r.length=0,i.length=0},o=function(e,t,n){var i=e[0];if(i<=0||i>0)return e;var s=t*n,o=r[s];o===undefined&&(o=new Float32Array(s),r[s]=o);if(t!==0){i.toArray(o,0);for(var u=1,a=0;u!==t;++u)a+=n,e[u].toArray(o,a)}return o},u=function(e,t){var n=i[t];n===undefined&&(n=new Int32Array(t),i[t]=n);for(var r=0;r!==t;++r)n[r]=e.allocTextureUnit();return n},a=function(e,t){e.uniform1f(this.addr,t)},f=function(e,t){e.uniform1i(this.addr,t)},l=function(e,t){t.x===undefined?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)},c=function(e,t){t.x!==undefined?e.uniform3f(this.addr,t.x,t.y,t.z):t.r!==undefined?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)},h=function(e,t){t.x===undefined?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)},p=function(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)},d=function(e,t){e.uniformMatrix3fv(this.addr,!1,t.elements||t)},v=function(e,t){e.uniformMatrix4fv(this.addr,!1,t.elements||t)},m=function(t,n,r){var i=r.allocTextureUnit();t.uniform1i(this.addr,i),r.setTexture2D(n||e,i)},g=function(e,n,r){var i=r.allocTextureUnit();e.uniform1i(this.addr,i),r.setTextureCube(n||t,i)},y=function(e,t){e.uniform2iv(this.addr,t)},b=function(e,t){e.uniform3iv(this.addr,t)},w=function(e,t){e.uniform4iv(this.addr,t)},E=function(e){switch(e){case 5126:return a;case 35664:return l;case 35665:return c;case 35666:return h;case 35674:return p;case 35675:return d;case 35676:return v;case 35678:return m;case 35680:return g;case 5124:case 35670:return f;case 35667:case 35671:return y;case 35668:case 35672:return b;case 35669:case 35673:return w}},S=function(e,t){e.uniform1fv(this.addr,t)},x=function(e,t){e.uniform1iv(this.addr,t)},T=function(e,t){e.uniform2fv(this.addr,o(t,this.size,2))},N=function(e,t){e.uniform3fv(this.addr,o(t,this.size,3))},C=function(e,t){e.uniform4fv(this.addr,o(t,this.size,4))},k=function(e,t){e.uniformMatrix2fv(this.addr,!1,o(t,this.size,4))},L=function(e,t){e.uniformMatrix3fv(this.addr,!1,o(t,this.size,9))},A=function(e,t){e.uniformMatrix4fv(this.addr,!1,o(t,this.size,16))},O=function(t,n,r){var i=n.length,s=u(r,i);t.uniform1iv(this.addr,s);for(var o=0;o!==i;++o)r.setTexture2D(n[o]||e,s[o])},M=function(e,n,r){var i=n.length,s=u(r,i);e.uniform1iv(this.addr,s);for(var o=0;o!==i;++o)r.setTextureCube(n[o]||t,s[o])},_=function(e){switch(e){case 5126:return S;case 35664:return T;case 35665:return N;case 35666:return C;case 35674:return k;case 35675:return L;case 35676:return A;case 35678:return O;case 35680:return M;case 5124:case 35670:return x;case 35667:case 35671:return y;case 35668:case 35672:return b;case 35669:case 35673:return w}},D=function(t,n,r){this.id=t,this.addr=r,this.setValue=E(n.type)},P=function(e,t,n){this.id=e,this.addr=n,this.size=t.size,this.setValue=_(t.type)},H=function(e){this.id=e,n.call(this)};H.prototype.setValue=function(e,t){var n=this.seq;for(var r=0,i=n.length;r!==i;++r){var s=n[r];s.setValue(e,t[s.id])}};var B=/([\w\d_]+)(\])?(\[|\.)?/g,j=function(e,t){e.seq.push(t),e.map[t.id]=t},F=function(e,t,n){var r=e.name,i=r.length;B.lastIndex=0;for(;;){var s=B.exec(r),o=B.lastIndex,u=s[1],a=s[2]==="]",f=s[3];a&&(u|=0);if(f===undefined||f==="["&&o+2===i){j(n,f===undefined?new D(u,e,t):new P(u,e,t));break}var l=n.map,c=l[u];c===undefined&&(c=new H(u),j(n,c)),n=c}},I=function(t,r,i){n.call(this),this.renderer=i;var s=t.getProgramParameter(r,t.ACTIVE_UNIFORMS);for(var o=0;o!==s;++o){var u=t.getActiveUniform(r,o),a=u.name,f=t.getUniformLocation(r,a);F(u,f,this)}};return I.prototype.setValue=function(e,t,n){var r=this.map[t];r!==undefined&&r.setValue(e,n,this.renderer)},I.prototype.set=function(e,t,n){var r=this.map[n];r!==undefined&&r.setValue(e,t[n],this.renderer)},I.prototype.setOptional=function(e,t,n){var r=t[n];r!==undefined&&this.setValue(e,n,r)},I.upload=function(e,t,n,r){for(var i=0,s=t.length;i!==s;++i){var o=t[i],u=n[o.id];u.needsUpdate!==!1&&o.setValue(e,u.value,r)}},I.seqWithValue=function(e,t){var n=[];for(var r=0,i=e.length;r!==i;++r){var s=e[r];s.id in t&&n.push(s)}return n},I.splitDynamic=function(e,t){var n=null,r=e.length,i=0;for(var s=0;s!==r;++s){var o=e[s],u=t[o.id];u&&u.dynamic===!0?(n===null&&(n=[]),n.push(o)):(i<s&&(e[i]=o),++i)}return i<r&&(e.length=i),n},I.evalDynamic=function(e,t,n,r){for(var i=0,s=e.length;i!==s;++i){var o=t[e[i].id],u=o.onUpdateCallback;u!==undefined&&u.call(o,n,r)}},I}(),THREE.LensFlarePlugin=function(e,t){function h(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);i=n.createBuffer(),s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,i),n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW),l=n.createTexture(),c=n.createTexture(),r.bindTexture(n.TEXTURE_2D,l),n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),r.bindTexture(n.TEXTURE_2D,c),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),o={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},u=p(o),a={vertex:n.getAttribLocation(u,"position"),uv:n.getAttribLocation(u,"uv")},f={renderType:n.getUniformLocation(u,"renderType"),map:n.getUniformLocation(u,"map"),occlusionMap:n.getUniformLocation(u,"occlusionMap"),opacity:n.getUniformLocation(u,"opacity"),color:n.getUniformLocation(u,"color"),scale:n.getUniformLocation(u,"scale"),rotation:n.getUniformLocation(u,"rotation"),screenPosition:n.getUniformLocation(u,"screenPosition")}}function p(t){var r=n.createProgram(),i=n.createShader(n.FRAGMENT_SHADER),s=n.createShader(n.VERTEX_SHADER),o="precision "+e.getPrecision()+" float;\n";return n.shaderSource(i,o+t.fragmentShader),n.shaderSource(s,o+t.vertexShader),n.compileShader(i),n.compileShader(s),n.attachShader(r,i),n.attachShader(r,s),n.linkProgram(r),r}var n=e.context,r=e.state,i,s,o,u,a,f,l,c;this.render=function(o,p,d){if(t.length===0)return;var v=new THREE.Vector3,m=d.w/d.z,g=d.z*.5,y=d.w*.5,b=16/d.w,w=new THREE.Vector2(b*m,b),E=new THREE.Vector3(1,1,0),S=new THREE.Vector2(1,1),x=new THREE.Box2;x.min.set(0,0),x.max.set(d.z-16,d.w-16),u===undefined&&h(),n.useProgram(u),r.initAttributes(),r.enableAttribute(a.vertex),r.enableAttribute(a.uv),r.disableUnusedAttributes(),n.uniform1i(f.occlusionMap,0),n.uniform1i(f.map,1),n.bindBuffer(n.ARRAY_BUFFER,i),n.vertexAttribPointer(a.vertex,2,n.FLOAT,!1,16,0),n.vertexAttribPointer(a.uv,2,n.FLOAT,!1,16,8),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s),r.disable(n.CULL_FACE),r.setDepthWrite(!1);for(var T=0,N=t.length;T<N;T++){b=16/d.w,w.set(b*m,b);var C=t[T];v.set(C.matrixWorld.elements[12],C.matrixWorld.elements[13],C.matrixWorld.elements[14]),v.applyMatrix4(p.matrixWorldInverse),v.applyProjection(p.projectionMatrix),E.copy(v),S.x=d.x+E.x*g+g-8,S.y=d.y+E.y*y+y-8;if(x.containsPoint(S)===!0){r.activeTexture(n.TEXTURE0),r.bindTexture(n.TEXTURE_2D,null),r.activeTexture(n.TEXTURE1),r.bindTexture(n.TEXTURE_2D,l),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,S.x,S.y,16,16,0),n.uniform1i(f.renderType,0),n.uniform2f(f.scale,w.x,w.y),n.uniform3f(f.screenPosition,E.x,E.y,E.z),r.disable(n.BLEND),r.enable(n.DEPTH_TEST),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),r.activeTexture(n.TEXTURE0),r.bindTexture(n.TEXTURE_2D,c),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,S.x,S.y,16,16,0),n.uniform1i(f.renderType,1),r.disable(n.DEPTH_TEST),r.activeTexture(n.TEXTURE1),r.bindTexture(n.TEXTURE_2D,l),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),C.positionScreen.copy(E),C.customUpdateCallback?C.customUpdateCallback(C):C.updateLensFlares(),n.uniform1i(f.renderType,2),r.enable(n.BLEND);for(var k=0,L=C.lensFlares.length;k<L;k++){var A=C.lensFlares[k];A.opacity>.001&&A.scale>.001&&(E.x=A.x,E.y=A.y,E.z=A.z,b=A.size*A.scale/d.w,w.x=b*m,w.y=b,n.uniform3f(f.screenPosition,E.x,E.y,E.z),n.uniform2f(f.scale,w.x,w.y),n.uniform1f(f.rotation,A.rotation),n.uniform1f(f.opacity,A.opacity),n.uniform3f(f.color,A.color.r,A.color.g,A.color.b),r.setBlending(A.blending,A.blendEquation,A.blendSrc,A.blendDst),e.setTexture2D(A.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}}}r.enable(n.CULL_FACE),r.enable(n.DEPTH_TEST),r.setDepthWrite(!0),e.resetGLState()}},THREE.SpritePlugin=function(e,t){function p(){var e=new Float32Array([-0.5,-0.5,0,0,.5,-0.5,1,0,.5,.5,1,1,-0.5,.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);i=n.createBuffer(),s=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,i),n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s),n.bufferData(n.ELEMENT_ARRAY_BUFFER,t,n.STATIC_DRAW),o=d(),u={position:n.getAttribLocation(o,"position"),uv:n.getAttribLocation(o,"uv")},a={uvOffset:n.getUniformLocation(o,"uvOffset"),uvScale:n.getUniformLocation(o,"uvScale"),rotation:n.getUniformLocation(o,"rotation"),scale:n.getUniformLocation(o,"scale"),color:n.getUniformLocation(o,"color"),map:n.getUniformLocation(o,"map"),opacity:n.getUniformLocation(o,"opacity"),modelViewMatrix:n.getUniformLocation(o,"modelViewMatrix"),projectionMatrix:n.getUniformLocation(o,"projectionMatrix"),fogType:n.getUniformLocation(o,"fogType"),fogDensity:n.getUniformLocation(o,"fogDensity"),fogNear:n.getUniformLocation(o,"fogNear"),fogFar:n.getUniformLocation(o,"fogFar"),fogColor:n.getUniformLocation(o,"fogColor"),alphaTest:n.getUniformLocation(o,"alphaTest")};var r=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");r.width=8,r.height=8;var l=r.getContext("2d");l.fillStyle="white",l.fillRect(0,0,8,8),f=new THREE.Texture(r),f.needsUpdate=!0}function d(){var t=n.createProgram(),r=n.createShader(n.VERTEX_SHADER),i=n.createShader(n.FRAGMENT_SHADER);return n.shaderSource(r,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),n.shaderSource(i,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),n.compileShader(r),n.compileShader(i),n.attachShader(t,r),n.attachShader(t,i),n.linkProgram(t),t}function v(e,t){return e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:t.id-e.id}var n=e.context,r=e.state,i,s,o,u,a,f,l=new THREE.Vector3,c=new THREE.Quaternion,h=new THREE.Vector3;this.render=function(d,m){if(t.length===0)return;o===undefined&&p(),n.useProgram(o),r.initAttributes(),r.enableAttribute(u.position),r.enableAttribute(u.uv),r.disableUnusedAttributes(),r.disable(n.CULL_FACE),r.enable(n.BLEND),n.bindBuffer(n.ARRAY_BUFFER,i),n.vertexAttribPointer(u.position,2,n.FLOAT,!1,16,0),n.vertexAttribPointer(u.uv,2,n.FLOAT,!1,16,8),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,s),n.uniformMatrix4fv(a.projectionMatrix,!1,m.projectionMatrix.elements),r.activeTexture(n.TEXTURE0),n.uniform1i(a.map,0);var g=0,y=0,b=d.fog;b?(n.uniform3f(a.fogColor,b.color.r,b.color.g,b.color.b),b instanceof THREE.Fog?(n.uniform1f(a.fogNear,b.near),n.uniform1f(a.fogFar,b.far),n.uniform1i(a.fogType,1),g=1,y=1):b instanceof THREE.FogExp2&&(n.uniform1f(a.fogDensity,b.density),n.uniform1i(a.fogType,2),g=2,y=2)):(n.uniform1i(a.fogType,0),g=0,y=0);for(var w=0,E=t.length;w<E;w++){var S=t[w];S.modelViewMatrix.multiplyMatrices(m.matrixWorldInverse,S.matrixWorld),S.z=-S.modelViewMatrix.elements[14]}t.sort(v);var x=[];for(var w=0,E=t.length;w<E;w++){var S=t[w],T=S.material;if(T.visible===!1)continue;n.uniform1f(a.alphaTest,T.alphaTest),n.uniformMatrix4fv(a.modelViewMatrix,!1,S.modelViewMatrix.elements),S.matrixWorld.decompose(l,c,h),x[0]=h.x,x[1]=h.y;var N=0;d.fog&&T.fog&&(N=y),g!==N&&(n.uniform1i(a.fogType,N),g=N),T.map!==null?(n.uniform2f(a.uvOffset,T.map.offset.x,T.map.offset.y),n.uniform2f(a.uvScale,T.map.repeat.x,T.map.repeat.y)):(n.uniform2f(a.uvOffset,0,0),n.uniform2f(a.uvScale,1,1)),n.uniform1f(a.opacity,T.opacity),n.uniform3f(a.color,T.color.r,T.color.g,T.color.b),n.uniform1f(a.rotation,T.rotation),n.uniform2fv(a.scale,x),r.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),r.setDepthTest(T.depthTest),r.setDepthWrite(T.depthWrite),T.map?e.setTexture2D(T.map,0):e.setTexture2D(f,0),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0)}r.enable(n.CULL_FACE),e.resetGLState()}},Object.assign(THREE,{Face4:function(e,t,n,r,i,s,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new THREE.Face3(e,t,n,i,s,o)},LineStrip:0,LinePieces:1,MeshFaceMaterial:THREE.MultiMaterial,PointCloud:function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new THREE.Points(e,t)},Particle:THREE.Sprite,ParticleSystem:function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new THREE.Points(e,t)},PointCloudMaterial:function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},ParticleBasicMaterial:function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},ParticleSystemMaterial:function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new THREE.PointsMaterial(e)},Vertex:function(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new THREE.Vector3(e,t,n)}}),Object.assign(THREE.Box2.prototype,{empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)}}),Object.assign(THREE.Box3.prototype,{empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(THREE.Matrix3.prototype,{multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)}}),Object.assign(THREE.Matrix4.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(e){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")}}),Object.assign(THREE.Plane.prototype,{isIntersectionLine:function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)}}),Object.assign(THREE.Quaternion.prototype,{multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."
),e.applyQuaternion(this)}}),Object.assign(THREE.Ray.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}}),Object.assign(THREE.Vector3.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)}}),Object.assign(THREE.Object3D.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(e){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)}}),Object.defineProperties(THREE.Object3D.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.defineProperties(THREE.LOD.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),THREE.PerspectiveCamera.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==undefined&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(THREE.Light.prototype,{onlyShadow:{set:function(e){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(e){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(THREE.BufferAttribute.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length}}}),Object.assign(THREE.BufferGeometry.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addDrawCall:function(e,t,n){n!==undefined&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}}),Object.defineProperties(THREE.BufferGeometry.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(THREE.Material.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(e){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new THREE.Color}}}),Object.defineProperties(THREE.MeshPhongMaterial.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(e){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(THREE.ShaderMaterial.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),THREE.EventDispatcher.prototype=Object.assign(Object.create({constructor:THREE.EventDispatcher,apply:function(e){console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."),Object.assign(e,this)}}),THREE.EventDispatcher.prototype),Object.assign(THREE.WebGLRenderer.prototype,{supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}}),Object.defineProperties(THREE.WebGLRenderer.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=e}}}),Object.defineProperties(THREE.WebGLShadowMap.prototype,{cullFace:{get:function(){return this.renderReverseSided?THREE.CullFaceFront:THREE.CullFaceBack},set:function(e){var t=e!==THREE.CullFaceBack;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+t+"."),this.renderReverseSided=t}}}),Object.defineProperties(THREE.WebGLRenderTarget.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),Object.assign(THREE.Audio.prototype,{load:function(e){console.warn("THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.");var t=this,n=new THREE.AudioLoader;return n.load(e,function(e){t.setBuffer(e)}),this}}),Object.assign(THREE.AudioAnalyser.prototype,{getData:function(e){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()}}),THREE.GeometryUtils={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},THREE.ImageUtils={crossOrigin:undefined,loadTexture:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var i=new THREE.TextureLoader;i.setCrossOrigin(this.crossOrigin);var s=i.load(e,n,undefined,r);return t&&(s.mapping=t),s},loadTextureCube:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var i=new THREE.CubeTextureLoader;i.setCrossOrigin(this.crossOrigin);var s=i.load(e,n,undefined,r);return t&&(s.mapping=t),s},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},THREE.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(e,t){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},THREE.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},THREE.CurveUtils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e,t,n,r,i){var s=6*e*e-6*e,o=3*e*e-4*e+1,u=-6*e*e+6*e,a=3*e*e-2*e;return s+o+u+a},interpolate:function(e,t,n,r,i){var s=(n-e)*.5,o=(r-t)*.5,u=i*i,a=i*u;return(2*t-2*n+s+o)*a+(-3*t+3*n-2*s-o)*u+s*i+t}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){var n=new THREE.Group;for(var r=0,i=t.length;r<i;r++)n.add(new THREE.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new THREE.Matrix4;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},THREE.ShapeUtils={area:function(e){var t=e.length,n=0;for(var r=t-1,i=0;i<t;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return n*.5},triangulate:function(){function e(e,t,n,r,i,s){var o,u,a,f,l,c,h,p,d;u=e[s[t]].x,a=e[s[t]].y,f=e[s[n]].x,l=e[s[n]].y,c=e[s[r]].x,h=e[s[r]].y;if(Number.EPSILON>(f-u)*(h-a)-(l-a)*(c-u))return!1;var v,m,g,y,b,w,E,S,x,T,N,C,k,L,A;v=c-f,m=h-l,g=u-c,y=a-h,b=f-u,w=l-a;for(o=0;o<i;o++){p=e[s[o]].x,d=e[s[o]].y;if(p===u&&d===a||p===f&&d===l||p===c&&d===h)continue;E=p-u,S=d-a,x=p-f,T=d-l,N=p-c,C=d-h,A=v*T-m*x,k=b*S-w*E,L=g*C-y*N;if(A>=-Number.EPSILON&&L>=-Number.EPSILON&&k>=-Number.EPSILON)return!1}return!0}return function(n,r){var i=n.length;if(i<3)return null;var s=[],o=[],u=[],a,f,l;if(THREE.ShapeUtils.area(n)>0)for(f=0;f<i;f++)o[f]=f;else for(f=0;f<i;f++)o[f]=i-1-f;var c=i,h=2*c;for(f=c-1;c>2;){if(h--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),r?u:s;a=f,c<=a&&(a=0),f=a+1,c<=f&&(f=0),l=f+1,c<=l&&(l=0);if(e(n,a,f,l,c,o)){var p,d,v,m,g;p=o[a],d=o[f],v=o[l],s.push([n[p],n[d],n[v]]),u.push([o[a],o[f],o[l]]);for(m=f,g=f+1;g<c;m++,g++)o[m]=o[g];c--,h=2*c}}return r?u:s}}(),triangulateShape:function(e,t){function n(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function r(e,t,n){return e.x!==t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function i(e,t,n,i,s){var o=t.x-e.x,u=t.y-e.y,a=i.x-n.x,f=i.y-n.y,l=e.x-n.x,c=e.y-n.y,h=u*a-o*f,p=u*l-o*c;if(Math.abs(h)>Number.EPSILON){var d;if(h>0){if(p<0||p>h)return[];d=f*l-a*c;if(d<0||d>h)return[]}else{if(p>0||p<h)return[];d=f*l-a*c;if(d>0||d<h)return[]}if(d===0)return!s||p!==0&&p!==h?[e]:[];if(d===h)return!s||p!==0&&p!==h?[t]:[];if(p===0)return[n];if(p===h)return[i];var v=d/h;return[{x:e.x+v*o,y:e.y+v*u}]}if(p!==0||f*l!==a*c)return[];var m=o===0&&u===0,g=a===0&&f===0;if(m&&g)return e.x!==n.x||e.y!==n.y?[]:[e];if(m)return r(n,i,e)?[e]:[];if(g)return r(e,t,n)?[n]:[];var y,b,w,E,S,x,T,N;o!==0?(e.x<t.x?(y=e,w=e.x,b=t,E=t.x):(y=t,w=t.x,b=e,E=e.x),n.x<i.x?(S=n,T=n.x,x=i,N=i.x):(S=i,T=i.x,x=n,N=n.x)):(e.y<t.y?(y=e,w=e.y,b=t,E=t.y):(y=t,w=t.y,b=e,E=e.y),n.y<i.y?(S=n,T=n.y,x=i,N=i.y):(S=i,T=i.y,x=n,N=n.y));if(w<=T)return E<T?[]:E===T?s?[]:[S]:E<=N?[S,b]:[S,x];return w>N?[]:w===N?s?[]:[y]:E<=N?[y,b]:[y,x]}function s(e,t,n,r){var i=t.x-e.x,s=t.y-e.y,o=n.x-e.x,u=n.y-e.y,a=r.x-e.x,f=r.y-e.y,l=i*u-s*o,c=i*f-s*a;if(Math.abs(l)>Number.EPSILON){var h=a*u-f*o;return l>0?c>=0&&h>=0:c>=0||h>=0}return c>0}function o(e,t){function o(e,t){var i=n.length-1,o=e-1;o<0&&(o=i);var u=e+1;u>i&&(u=0);var a=s(n[e],n[o],n[u],r[t]);if(!a)return!1;var f=r.length-1,l=t-1;l<0&&(l=f);var c=t+1;return c>f&&(c=0),a=s(r[t],r[l],r[c],n[e]),a?!0:!1}function u(e,t){var r,s,o;for(r=0;r<n.length;r++){s=r+1,s%=n.length,o=i(e,t,n[r],n[s],!0);if(o.length>0)return!0}return!1}function f(e,n){var r,s,o,u,f;for(r=0;r<a.length;r++){s=t[a[r]];for(o=0;o<s.length;o++){u=o+1,u%=s.length,f=i(e,n,s[o],s[u],!0);if(f.length>0)return!0}}return!1}var n=e.concat(),r,a=[],l,c,h,p,d,v,m=[],g,y,b,w;for(var E=0,S=t.length;E<S;E++)a.push(E);var x=0,T=a.length*2;while(a.length>0){T--;if(T<0){console.log("Infinite Loop! Holes left:"+a.length+", Probably Hole outside Shape!");break}for(c=x;c<n.length;c++){h=n[c],l=-1;for(var E=0;E<a.length;E++){d=a[E],v=h.x+":"+h.y+":"+d;if(m[v]!==undefined)continue;r=t[d];for(var N=0;N<r.length;N++){p=r[N];if(!o(c,N))continue;if(u(h,p))continue;if(f(h,p))continue;l=N,a.splice(E,1),g=n.slice(0,c+1),y=n.slice(c),b=r.slice(l),w=r.slice(0,l+1),n=g.concat(b).concat(w).concat(y),x=c;break}if(l>=0)break;m[v]=!0}if(l>=0)break}}return n}n(e),t.forEach(n);var u,a,f,l,c,h,p={},d=e.concat();for(var v=0,m=t.length;v<m;v++)Array.prototype.push.apply(d,t[v]);for(u=0,a=d.length;u<a;u++)c=d[u].x+":"+d[u].y,p[c]!==undefined&&console.warn("THREE.ShapeUtils: Duplicate point",c,u),p[c]=u;var g=o(e,t),y=THREE.ShapeUtils.triangulate(g,!1);for(u=0,a=y.length;u<a;u++){l=y[u];for(f=0;f<3;f++)c=l[f].x+":"+l[f].y,h=p[c],h!==undefined&&(l[f]=h)}return y.concat()},isClockWise:function(e){return THREE.ShapeUtils.area(e)<0},b2:function(){function e(e,t){var n=1-e;return n*n*t}function t(e,t){return 2*(1-e)*e*t}function n(e,t){return e*e*t}return function(i,s,o,u){return e(i,s)+t(i,o)+n(i,u)}}(),b3:function(){function e(e,t){var n=1-e;return n*n*n*t}function t(e,t){var n=1-e;return 3*n*n*e*t}function n(e,t){var n=1-e;return 3*n*e*e*t}function r(e,t){return e*e*e*t}return function(s,o,u,a,f){return e(s,o)+t(s,u)+n(s,a)+r(s,f)}}()},THREE.Curve=function(){},THREE.Curve.prototype={constructor:THREE.Curve,getPoint:function(e){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){e||(e=5);var t=[];for(var n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e||(e=5);var t=[];for(var n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,r=this.getPoint(0),i,s=0;t.push(0);for(i=1;i<=e;i++)n=this.getPoint(i/e),s+=n.distanceTo(r),t.push(s),r=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n=this.getLengths(),r=0,i=n.length,s;t?s=t:s=e*n[i-1];var o=0,u=i-1,a;while(o<=u){r=Math.floor(o+(u-o)/2),a=n[r]-s;if(a<0)o=r+1;else{if(!(a>0)){u=r;break}u=r-1}}r=u;if(n[r]===s){var f=r/(i-1);return f}var l=n[r],c=n[r+1],h=c-l,p=(s-l)/h,f=(r+p)/(i-1);return f},getTangent:function(e){var t=1e-4,n=e-t,r=e+t;n<0&&(n=0),r>1&&(r=1);var i=this.getPoint(n),s=this.getPoint(r),o=s.clone().sub(i);return o.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},THREE.CurvePath=function(){this.curves=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.assign(Object.create(THREE.Curve.prototype),{constructor:THREE.CurvePath,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},getPoint:function(e){var t=e*this.getLength(),n=this.getCurveLengths(),r=0;while(r<n.length){if(n[r]>=t){var i=n[r]-t,s=this.curves[r],o=s.getLength(),u=o===0?0:1-i/o;return s.getPointAt(u)}r++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;var e=[],t=0;for(var n=0,r=this.curves.length;n<r;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e||(e=40);var t=[];for(var n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;var t=[],n;for(var r=0,i=this.curves;r<i.length;r++){var s=i[r],o=s instanceof THREE.EllipseCurve?e*2:s instanceof THREE.LineCurve?1:s instanceof THREE.SplineCurve?e*s.points.length:e,u=s.getPoints(o);for(var a=0;a<u.length;a++){var f=u[a];if(n&&n.equals(f))continue;t.push(f),n=f}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){var t=new THREE.Geometry;for(var n=0,r=e.length;n<r;n++){var i=e[n];t.vertices.push(new THREE.Vector3(i.x,i.y,i.z||0))}return t}}),THREE.Font=function(e){this.data=e},Object.assign(THREE.Font.prototype,{generateShapes:function(e,t,n){function r(e){var n=String(e).split(""),r=t/s.resolution,o=0,u=[];for(var a=0;a<n.length;a++){var f=i(n[a],r,o);o+=f.offset,u.push(f.path)}return u}function i(e,t,r){var i=s.glyphs[e]||s.glyphs["?"];if(!i)return;var o=new THREE.ShapePath,u=[],a=THREE.ShapeUtils.b2,f=THREE.ShapeUtils.b3,l,c,h,p,d,v,m,g,y,b,w;if(i.o){var E=i._cachedOutline||(i._cachedOutline=i.o.split(" "));for(var S=0,x=E.length;S<x;){var T=E[S++];switch(T){case"m":l=E[S++]*t+r,c=E[S++]*t,o.moveTo(l,c);break;case"l":l=E[S++]*t+r,c=E[S++]*t,o.lineTo(l,c);break;case"q":h=E[S++]*t+r,p=E[S++]*t,m=E[S++]*t+r,g=E[S++]*t,o.quadraticCurveTo(m,g,h,p),w=u[u.length-1];if(w){d=w.x,v=w.y;for(var N=1;N<=n;N++){var C=N/n;a(C,d,m,h),a(C,v,g,p)}}break;case"b":h=E[S++]*t+r,p=E[S++]*t,m=E[S++]*t+r,g=E[S++]*t,y=E[S++]*t+r,b=E[S++]*t,o.bezierCurveTo(m,g,y,b,h,p),w=u[u.length-1];if(w){d=w.x,v=w.y;for(var N=1;N<=n;N++){var C=N/n;f(C,d,m,y,h),f(C,v,g,b,p)}}}}}return{offset:i.ha*t,path:o}}t===undefined&&(t=100),n===undefined&&(n=4);var s=this.data,o=r(e),u=[];for(var a=0,f=o.length;a<f;a++)Array.prototype.push.apply(u,o[a].toShapes());return u}}),THREE.Path=function(e){THREE.CurvePath.call(this),this.currentPoint=new THREE.Vector2,e&&this.fromPoints(e)},THREE.Path.prototype=Object.assign(Object.create(THREE.CurvePath.prototype),{constructor:THREE.Path,fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var n=new THREE.LineCurve(this.currentPoint.clone(),new THREE.Vector2(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,r){var i=new THREE.QuadraticBezierCurve(this.currentPoint.clone(),new THREE.Vector2(e,t),new THREE.Vector2(n,r));this.curves.push(i),this.currentPoint.set(n,r)},bezierCurveTo:function(e,t,n,r,i,s){var o=new THREE.CubicBezierCurve(this.currentPoint.clone(),new THREE.Vector2(e,t),new THREE.Vector2(n,r),new THREE.Vector2(i,s));this.curves.push(o),this.currentPoint.set(i,s)},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new THREE.SplineCurve(t);this.curves.push(n),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,r,i,s){var o=this.currentPoint.x,u=this.currentPoint.y;this.absarc(e+o,t+u,n,r,i,s)},absarc:function(e,t,n,r,i,s){this.absellipse(e,t,n,n,r,i,s)},ellipse:function(e,t,n,r,i,s,o,u){var a=this.currentPoint.x,f=this.currentPoint.y;this.absellipse(e+a,t+f,n,r,i,s,o,u)},absellipse:function(e,t,n,r,i,s,o,u){var a=new THREE.EllipseCurve(e,t,n,r,i,s,o,u);if(this.curves.length>0){var f=a.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(a);var l=a.getPoint(1);this.currentPoint.copy(l)}}),THREE.ShapePath=function(){this.subPaths=[],this.currentPath=null},THREE.ShapePath.prototype={moveTo:function(e,t){this.currentPath=new THREE.Path,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,r){this.currentPath.quadraticCurveTo(e,t,n,r)},bezierCurveTo:function(e,t,n,r,i,s){this.currentPath.bezierCurveTo(e,t,n,r,i,s)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(e){var t=[];for(var n=0,r=e.length;n<r;n++){var i=e[n],s=new THREE.Shape;s.curves=i.curves,t.push(s)}return t}function r(e,t){var n=t.length,r=!1;for(var i=n-1,s=0;s<n;i=s++){var o=t[i],u=t[s],a=u.x-o.x,f=u.y-o.y;if(Math.abs(f)>Number.EPSILON){f<0&&(o=t[s],a=-a,u=t[i],f=-f);if(e.y<o.y||e.y>u.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var l=f*(e.x-o.x)-a*(e.y-o.y);if(l===0)return!0;if(l<0)continue;r=!r}}else{if(e.y!==o.y)continue;if(u.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=u.x)return!0}}return r}var i=THREE.ShapeUtils.isClockWise,s=this.subPaths;if(s.length===0)return[];if(t===!0)return n(s);var o,u,a,f=[];if(s.length===1)return u=s[0],a=new THREE.Shape,a.curves=u.curves,f.push(a),f;var l=!i(s[0].getPoints());l=e?!l:l;var c=[],h=[],p=[],d=0,v;h[d]=undefined,p[d]=[];for(var m=0,g=s.length;m<g;m++)u=s[m],v=u.getPoints(),o=i(v),o=e?!o:o,o?(!l&&h[d]&&d++,h[d]={s:new THREE.Shape,p:v},h[d].s.curves=u.curves,l&&d++,p[d]=[]):p[d].push({h:u,p:v[0]});if(!h[0])return n(s);if(h.length>1){var y=!1,b=[];for(var w=0,E=h.length;w<E;w++)c[w]=[];for(var w=0,E=h.length;w<E;w++){var S=p[w];for(var x=0;x<S.length;x++){var T=S[x],N=!0;for(var C=0;C<h.length;C++)r(T.p,h[C].p)&&(w!==C&&b.push({froms:w,tos:C,hole:x}),N?(N=!1,c[C].push(T)):y=!0);N&&c[w].push(T)}}b.length>0&&(y||(p=c))}var k;for(var m=0,L=h.length;m<L;m++){a=h[m].s,f.push(a),k=p[m];for(var A=0,O=k.length;A<O;A++)a.holes.push(k[A].h)}return f}},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.assign(Object.create(THREE.Path.prototype),{constructor:THREE.Shape,extrude:function(e){return new THREE.ExtrudeGeometry(this,e)},makeGeometry:function(e){return new THREE.ShapeGeometry(this,e)},getPointsHoles:function(e){var t=[];for(var n=0,r=this.holes.length;n<r;n++)t[n]=this.holes[n].getPoints(e);return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}}),THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(e){if(e===1)return this.v2.clone();var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()},THREE.QuadraticBezierCurve=function(e,t,n){this.v0=e,this.v1=t,this.v2=n},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentQuadraticBezier;return(new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))).normalize()},THREE.CubicBezierCurve=function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t=THREE.CurveUtils.tangentCubicBezier;return(new THREE.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))).normalize()},THREE.SplineCurve=function(e){this.points=e==undefined?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),i=n-r,s=t[r===0?r:r-1],o=t[r],u=t[r>t.length-2?t.length-1:r+1],a=t[r>t.length-3?t.length-1:r+2],f=THREE.CurveUtils.interpolate;return new THREE.Vector2(f(s.x,o.x,u.x,a.x,i),f(s.y,o.y,u.y,a.y,i))},THREE.EllipseCurve=function(e,t,n,r,i,s,o,u){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=s,this.aClockwise=o,this.aRotation=u||0},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.constructor=THREE.EllipseCurve,THREE.EllipseCurve.prototype.getPoint=function(e){var t=Math.PI*2,n=this.aEndAngle-this.aStartAngle,r=Math.abs(n)<Number.EPSILON;while(n<0)n+=t;while(n>t)n-=t;n<Number.EPSILON&&(r?n=0:n=t),this.aClockwise===!0&&!r&&(n===t?n=-t:n-=t);var i=this.aStartAngle+e*n,s=this.aX+this.xRadius*Math.cos(i),o=this.aY+this.yRadius*Math.sin(i);if(this.aRotation!==0){var u=Math.cos(this.aRotation),a=Math.sin(this.aRotation),f=s-this.aX,l=o-this.aY;s=f*u-l*a+this.aX,o=f*a+l*u+this.aY}return new THREE.Vector2(s,o)},THREE.ArcCurve=function(e,t,n,r,i,s){THREE.EllipseCurve.call(this,e,t,n,n,r,i,s)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){if(e===1)return this.v2.clone();var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,n){this.v0=e,this.v1=
t,this.v2=n},function(e){var t=THREE.ShapeUtils.b2;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},function(e){var t=THREE.ShapeUtils.b3;return new THREE.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),THREE.SplineCurve3=THREE.Curve.create(function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=e==undefined?[]:e},function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),i=n-r,s=t[r==0?r:r-1],o=t[r],u=t[r>t.length-2?t.length-1:r+1],a=t[r>t.length-3?t.length-1:r+2],f=THREE.CurveUtils.interpolate;return new THREE.Vector3(f(s.x,o.x,u.x,a.x,i),f(s.y,o.y,u.y,a.y,i),f(s.z,o.z,u.z,a.z,i))}),THREE.CatmullRomCurve3=function(){function i(){}var e=new THREE.Vector3,t=new i,n=new i,r=new i;return i.prototype.init=function(e,t,n,r){this.c0=e,this.c1=n,this.c2=-3*e+3*t-2*n-r,this.c3=2*e-2*t+n+r},i.prototype.initNonuniformCatmullRom=function(e,t,n,r,i,s,o){var u=(t-e)/i-(n-e)/(i+s)+(n-t)/s,a=(n-t)/s-(r-t)/(s+o)+(r-n)/o;u*=s,a*=s,this.init(t,n,u,a)},i.prototype.initCatmullRom=function(e,t,n,r,i){this.init(t,n,i*(n-e),i*(r-t))},i.prototype.calc=function(e){var t=e*e,n=t*e;return this.c0+this.c1*e+this.c2*t+this.c3*n},THREE.Curve.create(function(e){this.points=e||[],this.closed=!1},function(i){var s=this.points,o,u,a,f;f=s.length,f<2&&console.log("duh, you need at least 2 points"),o=(f-(this.closed?0:1))*i,u=Math.floor(o),a=o-u,this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/s.length)+1)*s.length:a===0&&u===f-1&&(u=f-2,a=1);var l,c,h,p;this.closed||u>0?l=s[(u-1)%f]:(e.subVectors(s[0],s[1]).add(s[0]),l=e),c=s[u%f],h=s[(u+1)%f],this.closed||u+2<f?p=s[(u+2)%f]:(e.subVectors(s[f-1],s[f-2]).add(s[f-1]),p=e);if(this.type===undefined||this.type==="centripetal"||this.type==="chordal"){var d=this.type==="chordal"?.5:.25,v=Math.pow(l.distanceToSquared(c),d),m=Math.pow(c.distanceToSquared(h),d),g=Math.pow(h.distanceToSquared(p),d);m<1e-4&&(m=1),v<1e-4&&(v=m),g<1e-4&&(g=m),t.initNonuniformCatmullRom(l.x,c.x,h.x,p.x,v,m,g),n.initNonuniformCatmullRom(l.y,c.y,h.y,p.y,v,m,g),r.initNonuniformCatmullRom(l.z,c.z,h.z,p.z,v,m,g)}else if(this.type==="catmullrom"){var y=this.tension!==undefined?this.tension:.5;t.initCatmullRom(l.x,c.x,h.x,p.x,y),n.initCatmullRom(l.y,c.y,h.y,p.y,y),r.initCatmullRom(l.z,c.z,h.z,p.z,y)}var b=new THREE.Vector3(t.calc(a),n.calc(a),r.calc(a));return b})}(),THREE.ClosedSplineCurve3=function(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3."),THREE.CatmullRomCurve3.call(this,e),this.type="catmullrom",this.closed=!0},THREE.ClosedSplineCurve3.prototype=Object.create(THREE.CatmullRomCurve3.prototype),THREE.BoxGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s},this.fromBufferGeometry(new THREE.BoxBufferGeometry(e,t,n,r,i,s)),this.mergeVertices()},THREE.BoxGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.BoxGeometry.prototype.constructor=THREE.BoxGeometry,THREE.CubeGeometry=THREE.BoxGeometry,THREE.BoxBufferGeometry=function(e,t,n,r,i,s){function y(e,t,n){var r=0;return r+=(e+1)*(t+1)*2,r+=(e+1)*(n+1)*2,r+=(n+1)*(t+1)*2,r}function b(e,t,n){var r=0;return r+=e*t*2,r+=e*n*2,r+=n*t*2,r*6}function w(e,t,n,r,i,s,u,a,y,b,w){var E=s/y,S=u/b,x=s/2,T=u/2,N=a/2,C=y+1,k=b+1,L=0,A=0,O=new THREE.Vector3;for(var M=0;M<k;M++){var _=M*S-T;for(var D=0;D<C;D++){var P=D*E-x;O[e]=P*r,O[t]=_*i,O[n]=N,l[p]=O.x,l[p+1]=O.y,l[p+2]=O.z,O[e]=0,O[t]=0,O[n]=a>0?1:-1,c[p]=O.x,c[p+1]=O.y,c[p+2]=O.z,h[d]=D/y,h[d+1]=1-M/b,p+=3,d+=2,L+=1}}for(M=0;M<b;M++)for(D=0;D<y;D++){var H=m+D+C*M,B=m+D+C*(M+1),j=m+(D+1)+C*(M+1),F=m+(D+1)+C*M;f[v]=H,f[v+1]=B,f[v+2]=F,f[v+3]=B,f[v+4]=j,f[v+5]=F,v+=6,A+=6}o.addGroup(g,A,w),g+=A,m+=L}THREE.BufferGeometry.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:i,depthSegments:s};var o=this;r=Math.floor(r)||1,i=Math.floor(i)||1,s=Math.floor(s)||1;var u=y(r,i,s),a=b(r,i,s),f=new(a>65535?Uint32Array:Uint16Array)(a),l=new Float32Array(u*3),c=new Float32Array(u*3),h=new Float32Array(u*2),p=0,d=0,v=0,m=0,g=0;w("z","y","x",-1,-1,n,t,e,s,i,0),w("z","y","x",1,-1,n,t,-e,s,i,1),w("x","z","y",1,1,e,n,t,r,s,2),w("x","z","y",1,-1,e,n,-t,r,s,3),w("x","y","z",1,-1,e,t,n,r,i,4),w("x","y","z",-1,-1,e,t,-n,r,i,5),this.setIndex(new THREE.BufferAttribute(f,1)),this.addAttribute("position",new THREE.BufferAttribute(l,3)),this.addAttribute("normal",new THREE.BufferAttribute(c,3)),this.addAttribute("uv",new THREE.BufferAttribute(h,2))},THREE.BoxBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.BoxBufferGeometry.prototype.constructor=THREE.BoxBufferGeometry,THREE.CircleGeometry=function(e,t,n,r){THREE.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new THREE.CircleBufferGeometry(e,t,n,r))},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry.prototype.constructor=THREE.CircleGeometry,THREE.CircleBufferGeometry=function(e,t,n,r){THREE.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||50,t=t!==undefined?Math.max(3,t):8,n=n!==undefined?n:0,r=r!==undefined?r:Math.PI*2;var i=t+2,s=new Float32Array(i*3),o=new Float32Array(i*3),u=new Float32Array(i*2);o[2]=1,u[0]=.5,u[1]=.5;for(var a=0,f=3,l=2;a<=t;a++,f+=3,l+=2){var c=n+a/t*r;s[f]=e*Math.cos(c),s[f+1]=e*Math.sin(c),o[f+2]=1,u[l]=(s[f]/e+1)/2,u[l+1]=(s[f+1]/e+1)/2}var h=[];for(var f=1;f<=t;f++)h.push(f,f+1,0);this.setIndex(new THREE.BufferAttribute(new Uint16Array(h),1)),this.addAttribute("position",new THREE.BufferAttribute(s,3)),this.addAttribute("normal",new THREE.BufferAttribute(o,3)),this.addAttribute("uv",new THREE.BufferAttribute(u,2)),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CircleBufferGeometry.prototype.constructor=THREE.CircleBufferGeometry,THREE.CylinderBufferGeometry=function(e,t,n,r,i,s,o,u){function E(){var e=(r+1)*(i+1);return s===!1&&(e+=(r+1)*f+r*f),e}function S(){var e=r*i*2*3;return s===!1&&(e+=r*f*3),e}function x(){var s,f,l=new THREE.Vector3,c=new THREE.Vector3,E=0,S=(t-e)/n;for(f=0;f<=i;f++){var x=[],T=f/i,N=T*(t-e)+e;for(s=0;s<=r;s++){var C=s/r;c.x=N*Math.sin(C*u+o),c.y=-T*n+b,c.z=N*Math.cos(C*u+o),p.setXYZ(m,c.x,c.y,c.z),l.copy(c);if(e===0&&f===0||t===0&&f===i)l.x=Math.sin(C*u+o),l.z=Math.cos(C*u+o);l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*S).normalize(),d.setXYZ(m,l.x,l.y,l.z),v.setXY(m,C,1-T),x.push(m),m++}y.push(x)}for(s=0;s<r;s++)for(f=0;f<i;f++){var k=y[f][s],L=y[f+1][s],A=y[f+1][s+1],O=y[f][s+1];h.setX(g,k),g++,h.setX(g,L),g++,h.setX(g,O),g++,h.setX(g,L),g++,h.setX(g,A),g++,h.setX(g,O),g++,E+=6}a.addGroup(w,E,0),w+=E}function T(n){var i,s,f,l=new THREE.Vector2,c=new THREE.Vector3,y=0,E=n===!0?e:t,S=n===!0?1:-1;s=m;for(i=1;i<=r;i++)p.setXYZ(m,0,b*S,0),d.setXYZ(m,0,S,0),l.x=.5,l.y=.5,v.setXY(m,l.x,l.y),m++;f=m;for(i=0;i<=r;i++){var x=i/r,T=x*u+o,N=Math.cos(T),C=Math.sin(T);c.x=E*C,c.y=b*S,c.z=E*N,p.setXYZ(m,c.x,c.y,c.z),d.setXYZ(m,0,S,0),l.x=N*.5+.5,l.y=C*.5*S+.5,v.setXY(m,l.x,l.y),m++}for(i=0;i<r;i++){var k=s+i,L=f+i;n===!0?(h.setX(g,L),g++,h.setX(g,L+1),g++,h.setX(g,k),g++):(h.setX(g,L+1),g++,h.setX(g,L),g++,h.setX(g,k),g++),y+=3}a.addGroup(w,y,n===!0?1:2),w+=y}THREE.BufferGeometry.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:u};var a=this;e=e!==undefined?e:20,t=t!==undefined?t:20,n=n!==undefined?n:100,r=Math.floor(r)||8,i=Math.floor(i)||1,s=s!==undefined?s:!1,o=o!==undefined?o:0,u=u!==undefined?u:2*Math.PI;var f=0;s===!1&&(e>0&&f++,t>0&&f++);var l=E(),c=S(),h=new THREE.BufferAttribute(new(c>65535?Uint32Array:Uint16Array)(c),1),p=new THREE.BufferAttribute(new Float32Array(l*3),3),d=new THREE.BufferAttribute(new Float32Array(l*3),3),v=new THREE.BufferAttribute(new Float32Array(l*2),2),m=0,g=0,y=[],b=n/2,w=0;x(),s===!1&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(h),this.addAttribute("position",p),this.addAttribute("normal",d),this.addAttribute("uv",v)},THREE.CylinderBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.CylinderBufferGeometry.prototype.constructor=THREE.CylinderBufferGeometry,THREE.CylinderGeometry=function(e,t,n,r,i,s,o,u){THREE.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:u},this.fromBufferGeometry(new THREE.CylinderBufferGeometry(e,t,n,r,i,s,o,u)),this.mergeVertices()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ConeBufferGeometry=function(e,t,n,r,i,s,o){THREE.CylinderBufferGeometry.call(this,0,e,t,n,r,i,s,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,thetaStart:s,thetaLength:o}},THREE.ConeBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.ConeBufferGeometry.prototype.constructor=THREE.ConeBufferGeometry,THREE.ConeGeometry=function(e,t,n,r,i,s,o){THREE.CylinderGeometry.call(this,0,e,t,n,r,i,s,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:r,openEnded:i,thetaStart:s,thetaLength:o}},THREE.ConeGeometry.prototype=Object.create(THREE.CylinderGeometry.prototype),THREE.ConeGeometry.prototype.constructor=THREE.ConeGeometry,THREE.EdgesGeometry=function(e,t){function s(e,t){return e-t}THREE.BufferGeometry.call(this),t=t!==undefined?t:1;var n=Math.cos(THREE.Math.DEG2RAD*t),r=[0,0],i={},o=["a","b","c"],u;e instanceof THREE.BufferGeometry?(u=new THREE.Geometry,u.fromBufferGeometry(e)):u=e.clone(),u.mergeVertices(),u.computeFaceNormals();var a=u.vertices,f=u.faces;for(var l=0,c=f.length;l<c;l++){var h=f[l];for(var p=0;p<3;p++){r[0]=h[o[p]],r[1]=h[o[(p+1)%3]],r.sort(s);var d=r.toString();i[d]===undefined?i[d]={vert1:r[0],vert2:r[1],face1:l,face2:undefined}:i[d].face2=l}}var v=[];for(var d in i){var m=i[d];if(m.face2===undefined||f[m.face1].normal.dot(f[m.face2].normal)<=n){var g=a[m.vert1];v.push(g.x),v.push(g.y),v.push(g.z),g=a[m.vert2],v.push(g.x),v.push(g.y),v.push(g.z)}}this.addAttribute("position",new THREE.BufferAttribute(new Float32Array(v),3))},THREE.EdgesGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.EdgesGeometry.prototype.constructor=THREE.EdgesGeometry,THREE.ExtrudeGeometry=function(e,t){if(typeof e=="undefined"){e=[];return}THREE.Geometry.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals()},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){var n=e.length;for(var r=0;r<n;r++){var i=e[r];this.addShape(i,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function L(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}function j(e,t,n){var r,i,s=1,o=e.x-t.x,u=e.y-t.y,a=n.x-e.x,f=n.y-e.y,l=o*o+u*u,c=o*f-u*a;if(Math.abs(c)>Number.EPSILON){var h=Math.sqrt(l),p=Math.sqrt(a*a+f*f),d=t.x-u/h,v=t.y+o/h,m=n.x-f/p,g=n.y+a/p,y=((m-d)*f-(g-v)*a)/(o*f-u*a);r=d+o*y-e.x,i=v+u*y-e.y;var b=r*r+i*i;if(b<=2)return new THREE.Vector2(r,i);s=Math.sqrt(b/2)}else{var w=!1;o>Number.EPSILON?a>Number.EPSILON&&(w=!0):o<-Number.EPSILON?a<-Number.EPSILON&&(w=!0):Math.sign(u)===Math.sign(f)&&(w=!0),w?(r=-u,i=o,s=Math.sqrt(l)):(r=o,i=u,s=Math.sqrt(l/2))}return new THREE.Vector2(r/s,i/s)}function $(){if(o){var e=0,t=P*e;for(I=0;I<B;I++)H=C[I],G(H[2]+t,H[1]+t,H[0]+t);e=a+s*2,t=P*e;for(I=0;I<B;I++)H=C[I],G(H[0]+t,H[1]+t,H[2]+t)}else{for(I=0;I<B;I++)H=C[I],G(H[2],H[1],H[0]);for(I=0;I<B;I++)H=C[I],G(H[0]+P*a,H[1]+P*a,H[2]+P*a)}}function J(){var e=0;K(k,e),e+=k.length;for(y=0,b=T.length;y<b;y++)g=T[y],K(g,e),e+=g.length}function K(e,t){var n,r;I=e.length;while(--I>=0){n=I,r=I-1,r<0&&(r=e.length-1);var i=0,o=a+s*2;for(i=0;i<o;i++){var u=P*i,f=P*(i+1),l=t+n+u,c=t+r+u,h=t+r+f,p=t+n+f;Y(l,c,h,p,e,i,o,n,r)}}}function Q(e,t,n){w.vertices.push(new THREE.Vector3(e,t,n))}function G(e,t,n){e+=E,t+=E,n+=E,w.faces.push(new THREE.Face3(e,t,n,null,null,0));var r=h.generateTopUV(w,e,t,n);w.faceVertexUvs[0].push(r)}function Y(e,t,n,r,i,s,o,u,a){e+=E,t+=E,n+=E,r+=E,w.faces.push(new THREE.Face3(e,t,r,null,null,1)),w.faces.push(new THREE.Face3(t,n,r,null,null,1));var f=h.generateSideWallUV(w,e,t,n,r);w.faceVertexUvs[0].push([f[0],f[1],f[3]]),w.faceVertexUvs[0].push([f[1],f[2],f[3]])}var n=t.amount!==undefined?t.amount:100,r=t.bevelThickness!==undefined?t.bevelThickness:6,i=t.bevelSize!==undefined?t.bevelSize:r-2,s=t.bevelSegments!==undefined?t.bevelSegments:3,o=t.bevelEnabled!==undefined?t.bevelEnabled:!0,u=t.curveSegments!==undefined?t.curveSegments:12,a=t.steps!==undefined?t.steps:1,f=t.extrudePath,l,c=!1,h=t.UVGenerator!==undefined?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,p,d,v,m;f&&(l=f.getSpacedPoints(a),c=!0,o=!1,p=t.frames!==undefined?t.frames:new THREE.TubeGeometry.FrenetFrames(f,a,!1),d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3),o||(s=0,r=0,i=0);var g,y,b,w=this,E=this.vertices.length,S=e.extractPoints(u),x=S.shape,T=S.holes,N=!THREE.ShapeUtils.isClockWise(x);if(N){x=x.reverse();for(y=0,b=T.length;y<b;y++)g=T[y],THREE.ShapeUtils.isClockWise(g)&&(T[y]=g.reverse());N=!1}var C=THREE.ShapeUtils.triangulateShape(x,T),k=x;for(y=0,b=T.length;y<b;y++)g=T[y],x=x.concat(g);var A,O,M,_,D,P=x.length,H,B=C.length,F=[];for(var I=0,q=k.length,R=q-1,U=I+1;I<q;I++,R++,U++)R===q&&(R=0),U===q&&(U=0),F[I]=j(k[I],k[R],k[U]);var z=[],W,X=F.concat();for(y=0,b=T.length;y<b;y++){g=T[y],W=[];for(I=0,q=g.length,R=q-1,U=I+1;I<q;I++,R++,U++)R===q&&(R=0),U===q&&(U=0),W[I]=j(g[I],g[R],g[U]);z.push(W),X=X.concat(W)}for(A=0;A<s;A++){M=A/s,_=r*(1-M),O=i*Math.sin(M*Math.PI/2);for(I=0,q=k.length;I<q;I++)D=L(k[I],F[I],O),Q(D.x,D.y,-_);for(y=0,b=T.length;y<b;y++){g=T[y],W=z[y];for(I=0,q=g.length;I<q;I++)D=L(g[I],W[I],O),Q(D.x,D.y,-_)}}O=i;for(I=0;I<P;I++)D=o?L(x[I],X[I],O):x[I],c?(v.copy(p.normals[0]).multiplyScalar(D.x),d.copy(p.binormals[0]).multiplyScalar(D.y),m.copy(l[0]).add(v).add(d),Q(m.x,m.y,m.z)):Q(D.x,D.y,0);var V;for(V=1;V<=a;V++)for(I=0;I<P;I++)D=o?L(x[I],X[I],O):x[I],c?(v.copy(p.normals[V]).multiplyScalar(D.x),d.copy(p.binormals[V]).multiplyScalar(D.y),m.copy(l[V]).add(v).add(d),Q(m.x,m.y,m.z)):Q(D.x,D.y,n/a*V);for(A=s-1;A>=0;A--){M=A/s,_=r*(1-M),O=i*Math.sin(M*Math.PI/2);for(I=0,q=k.length;I<q;I++)D=L(k[I],F[I],O),Q(D.x,D.y,n+_);for(y=0,b=T.length;y<b;y++){g=T[y],W=z[y];for(I=0,q=g.length;I<q;I++)D=L(g[I],W[I],O),c?Q(D.x,D.y+l[a-1].y,l[a-1].x+_):Q(D.x,D.y,n+_)}}$(),J()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r){var i=e.vertices,s=i[t],o=i[n],u=i[r];return[new THREE.Vector2(s.x,s.y),new THREE.Vector2(o.x,o.y),new THREE.Vector2(u.x,u.y)]},generateSideWallUV:function(e,t,n,r,i){var s=e.vertices,o=s[t],u=s[n],a=s[r],f=s[i];return Math.abs(o.y-u.y)<.01?[new THREE.Vector2(o.x,1-o.z),new THREE.Vector2(u.x,1-u.z),new THREE.Vector2(a.x,1-a.z),new THREE.Vector2(f.x,1-f.z)]:[new THREE.Vector2(o.y,1-o.z),new THREE.Vector2(u.y,1-u.z),new THREE.Vector2(a.y,1-a.z),new THREE.Vector2(f.y,1-f.z)]}},THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),this.type="ShapeGeometry",Array.isArray(e)===!1&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.constructor=THREE.ShapeGeometry,THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;n<r;n++)this.addShape(e[n],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){t===undefined&&(t={});var n=t.curveSegments!==undefined?t.curveSegments:12,r=t.material,i=t.UVGenerator===undefined?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,s,o,u,a=this.vertices.length,f=e.extractPoints(n),l=f.shape,c=f.holes,h=!THREE.ShapeUtils.isClockWise(l);if(h){l=l.reverse();for(s=0,o=c.length;s<o;s++)u=c[s],THREE.ShapeUtils.isClockWise(u)&&(c[s]=u.reverse());h=!1}var p=THREE.ShapeUtils.triangulateShape(l,c);for(s=0,o=c.length;s<o;s++)u=c[s],l=l.concat(u);var d,v=l.length,m,g=p.length;for(s=0;s<v;s++)d=l[s],this.vertices.push(new THREE.Vector3(d.x,d.y,0));for(s=0;s<g;s++){m=p[s];var y=m[0]+a,b=m[1]+a,w=m[2]+a;this.faces.push(new THREE.Face3(y,b,w,null,null,r)),this.faceVertexUvs[0].push(i.generateTopUV(this,y,b,w))}},THREE.LatheBufferGeometry=function(e,t,n,r){THREE.BufferGeometry.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=Math.floor(t)||12,n=n||0,r=r||Math.PI*2,r=THREE.Math.clamp(r,0,Math.PI*2);var i=(t+1)*e.length,s=t*e.length*2*3,o=new THREE.BufferAttribute(new(s>65535?Uint32Array:Uint16Array)(s),1),u=new THREE.BufferAttribute(new Float32Array(i*3),3),a=new THREE.BufferAttribute(new Float32Array(i*2),2),f=0,l=0,c,h=1/(e.length-1),p=1/t,d=new THREE.Vector3,v=new THREE.Vector2,m,g;for(m=0;m<=t;m++){var y=n+m*p*r,b=Math.sin(y),w=Math.cos(y);for(g=0;g<=e.length-1;g++)d.x=e[g].x*b,d.y=e[g].y,d.z=e[g].x*w,u.setXYZ(f,d.x,d.y,d.z),v.x=m/t,v.y=g/(e.length-1),a.setXY(f,v.x,v.y),f++}for(m=0;m<t;m++)for(g=0;g<e.length-1;g++){c=g+m*e.length;var E=c,S=c+e.length,x=c+e.length+1,T=c+1;o.setX(l,E),l++,o.setX(l,S),l++,o.setX(l,T),l++,o.setX(l,S),l++,o.setX(l,x),l++,o.setX(l,T),l++}this.setIndex(o),this.addAttribute("position",u),this.addAttribute("uv",a),this.computeVertexNormals();if(r===Math.PI*2){var N=this.attributes.normal.array,C=new THREE.Vector3,k=new THREE.Vector3,L=new THREE.Vector3;c=t*e.length*3;for(m=0,g=0;m<e.length;m++,g+=3)C.x=N[g+0],C.y=N[g+1],C.z=N[g+2],k.x=N[c+g+0],k.y=N[c+g+1],k.z=N[c+g+2],L.addVectors(C,k).normalize(),N[g+0]=N[c+g+0]=L.x,N[g+1]=N[c+g+1]=L.y,N[g+2]=N[c+g+2]=L.z}},THREE.LatheBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.LatheBufferGeometry.prototype.constructor=THREE.LatheBufferGeometry,THREE.LatheGeometry=function(e,t,n,r){THREE.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},this.fromBufferGeometry(new THREE.LatheBufferGeometry(e,t,n,r)),this.mergeVertices()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(e,t,n,r){THREE.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new THREE.PlaneBufferGeometry(e,t,n,r))},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.PlaneBufferGeometry=function(e,t,n,r){THREE.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};var i=e/2,s=t/2,o=Math.floor(n)||1,u=Math.floor(r)||1,a=o+1,f=u+1,l=e/o,c=t/u,h=new Float32Array(a*f*3),p=new Float32Array(a*f*3),d=new Float32Array(a*f*2),v=0,m=0;for(var g=0;g<f;g++){var y=g*c-s;for(var b=0;b<a;b++){var w=b*l-i;h[v]=w,h[v+1]=-y,p[v+2]=1,d[m]=b/o,d[m+1]=1-g/u,v+=3,m+=2}}v=0;var E=new(h.length/3>65535?Uint32Array:Uint16Array)(o*u*6);for(var g=0;g<u;g++)for(var b=0;b<o;b++){var S=b+a*g,x=b+a*(g+1),T=b+1+a*(g+1),N=b+1+a*g;E[v]=S,E[v+1]=x,E[v+2]=N,E[v+3]=x,E[v+4]=T,E[v+5]=N,v+=6}this.setIndex(new THREE.BufferAttribute(E,1)),this.addAttribute("position",new THREE.BufferAttribute(h,3)),this.addAttribute("normal",new THREE.BufferAttribute(p,3)),this.addAttribute("uv",new THREE.BufferAttribute(d,2))},THREE.PlaneBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.PlaneBufferGeometry.prototype.constructor=THREE.PlaneBufferGeometry,THREE.RingBufferGeometry=function(e,t,n,r,i,s){THREE.BufferGeometry.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},e=e||20,t=t||50,i=i!==undefined?i:0,s=s!==undefined?s:Math.PI*2,n=n!==undefined?Math.max(3,n):8,r=r!==undefined?Math.max(1,r):1;var o=(n+1)*(r+1),u=n*r*2*3,a=new THREE.BufferAttribute(new(u>65535?Uint32Array:Uint16Array)(u),1),f=new THREE.BufferAttribute(new Float32Array(o*3),3),l=new THREE.BufferAttribute(new Float32Array(o*3),3),c=new THREE.BufferAttribute(new Float32Array(o*2),2),h=0,p=0,d,v=e,m=(t-e)/r,g=new THREE.Vector3,y=new THREE.Vector2,b,w;for(b=0;b<=r;b++){for(w=0;w<=n;w++)d=i+w/n*s,g.x=v*Math.cos(d),g.y=v*Math.sin(d),f.setXYZ(h,g.x,g.y,g.z),l.setXYZ(h,0,0,1),y.x=(g.x/t+1)/2,y.y=(g.y/t+1)/2,c.setXY(h,y.x,y.y),h++;v+=m}for(b=0;b<r;b++){var E=b*(n+1);for(w=0;w<n;w++){d=w+E;var S=d,x=d+n+1,T=d+n+2,N=d+1;a.setX(p,S),p++,a.setX(p,x),p++,a.setX(p,T),p++,a.setX(p,S),p++,a.setX(p,T),p++,a.setX(p,N),p++}}this.setIndex(a),this.addAttribute("position",f),this.addAttribute("normal",l),this.addAttribute("uv",c)},THREE.RingBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.RingBufferGeometry.prototype.constructor=THREE.RingBufferGeometry,THREE.RingGeometry=function(e,t,n,r,i,s){THREE.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:i,thetaLength:s},this.fromBufferGeometry(new THREE.RingBufferGeometry(e,t,n,r,i,s))},THREE.RingGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.RingGeometry.prototype.constructor=THREE.RingGeometry,THREE.SphereGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:o},this.fromBufferGeometry(new THREE.SphereBufferGeometry(e,t,n,r,i,s,o))},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.SphereBufferGeometry=function(e,t,n,r,i,s,o){THREE.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:i,thetaStart:s,thetaLength:o},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=r!==undefined?r:0,i=i!==undefined?i:Math.PI*2,s=s!==undefined?s:0,o=o!==undefined?o:Math.PI;var u=s+o,a=(t+1)*(n+1),f=new THREE.BufferAttribute(new Float32Array(a*3),3),l=new THREE.BufferAttribute(new Float32Array(a*3),3),c=new THREE.BufferAttribute(new Float32Array(a*2),2),h=0,p=[],d=new THREE.Vector3;for(var v=0;v<=n;v++){var m=[],g=v/n;for(var y=0;y<=t;y++){var b=y/t,w=-e*Math.cos(r+b*i)*Math.sin(s+g*o),E=e*Math.cos(s+g*o),S=e*Math.sin(r+b*i)*Math.sin(s+g*o);d.set(w,E,S).normalize(),f.setXYZ(h,w,E,S),l.setXYZ(h,d.x,d.y,d.z),c.setXY(h,b,1-g),m.push(h),h++}p.push(m)}var x=[];for(var v=0;v<n;v++)for(var y=0;y<t;y++){var T=p[v][y+1],N=p[v][y],C=p[v+1][y],k=p[v+1][y+1];(v!==0||s>0)&&x.push(T,N,k),(v!==n-1||u<Math.PI)&&x.push(N,C,k)}this.setIndex(new(f.count>65535?THREE.Uint32Attribute:THREE.Uint16Attribute)(x,1)),this.addAttribute("position",f),this.addAttribute("normal",l),this.addAttribute("uv",c),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.SphereBufferGeometry.prototype.constructor=THREE.SphereBufferGeometry,THREE.TextGeometry=function(e,t){t=t||{};var n=t.font;if(n instanceof THREE.Font==0)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new THREE.Geometry;var r=n.generateShapes(e,t.size,t.curveSegments);t.amount=t.height!==undefined?t.height:50,t.bevelThickness===undefined&&(t.bevelThickness=10),t.bevelSize===undefined&&(t.bevelSize=8),t.bevelEnabled===undefined&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t),this.type="TextGeometry"},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.TorusBufferGeometry=function(e,t,n,r,i){THREE.BufferGeometry.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},e=e||100,t=t||40,n=Math.floor(n)||8,r=Math.floor(r)||6,i=i||Math.PI*2;var s=(n+1)*(r+1),o=n*r*2*3,u=new(o>65535?Uint32Array:Uint16Array)(o),a=new Float32Array(s*3),f=new Float32Array(s*3),l=new Float32Array(s*2),c=0,h=0,p=0,d=new THREE.Vector3,v=new THREE.Vector3,m=new THREE.Vector3,g,y;for(g=0;g<=n;g++)for(y=0;y<=r;y++){var b=y/r*i,w=g/n*Math.PI*2;v.x=(e+t*Math.cos(w))*Math.cos(b),v.y=(e+t*Math.cos(w))*Math.sin(b),v.z=t*Math.sin(w),a[c]=v.x,a[c+1]=v.y,a[c+2]=v.z,d.x=e*Math.cos(b),d.y=e*Math.sin(b),m.subVectors(v,d).normalize(),f[c]=m.x,f[c+1]=m.y,f[c+2]=m.z,l[h]=y/r,l[h+1]=g/n,c+=3,h+=2}for(g=1;g<=n;g++)for(y=1;y<=r;y++){var E=(r+1)*g+y-1,S=(r+1)*(g-1)+y-1,x=(r+1)*(g-1)+y,T=(r+1)*g+y;u[p]=E,u[p+1]=S,u[p+2]=T,u[p+3]=S,u[p+4]=x,u[p+5]=T,p+=6}this.setIndex(new THREE.BufferAttribute(u,1)),this.addAttribute("position",new THREE.BufferAttribute(a,3)),this.addAttribute("normal",new THREE.BufferAttribute(f,3)),this.addAttribute("uv",new THREE.BufferAttribute(l,2))},THREE.TorusBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusBufferGeometry.prototype.constructor=THREE.TorusBufferGeometry,THREE.TorusGeometry=function(e,t,n,r,i){THREE.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:i},this.fromBufferGeometry(new THREE.TorusBufferGeometry(e,t,n,r,i))},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotBufferGeometry=function(e,t,n,r,i,s){function _(e,t,n,r,i){var s=Math.cos(e),o=Math.sin(e),u=n/t*e,a=Math.cos(u);i.x=r*(2+a)*.5*s,i.y=r*(2+a)*o*.5,i.z=r*Math.sin(u)*.5}THREE.BufferGeometry.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:s},e=e||100,t=t||40,n=Math.floor(n)||64,r=Math.floor(r)||8,i=i||2,s=s||3;var o=(r+1)*(n+1),u=r*n*2*3,a=new THREE.BufferAttribute(new(u>65535?Uint32Array:Uint16Array)(u),1),f=new THREE.BufferAttribute(new Float32Array(o*3),3),l=new THREE.BufferAttribute(new Float32Array(o*3),3),c=new THREE.BufferAttribute(new Float32Array(o*2),2),h,p,d=0,v=0,m=new THREE.Vector3,g=new THREE.Vector3,y=new THREE.Vector2,b=new THREE.Vector3,w=new THREE.Vector3,E=new THREE.Vector3,S=new THREE.Vector3,x=new THREE.Vector3;for(h=0;h<=n;++h){var T=h/n*i*Math.PI*2;_(T,i,s,e,b),_(T+.01,i,s,e,w),S.subVectors(w,b),x.addVectors(w,b),E.crossVectors(S,x),x.crossVectors(E,S),E.normalize(),x.normalize();for(p=0;p<=r;++p){var N=p/r*Math.PI*2,C=-t*Math.cos(N),k=t*Math.sin(N);m.x=b.x+(C*x.x+k*E.x),m.y=b.y+(C*x.y+k*E.y),m.z=b.z+(C*x.z+k*E.z),f.setXYZ(d,m.x,m.y,m.z),g.subVectors(m,b).normalize(),l.setXYZ(d,g.x,g.y,g.z),y.x=h/n,y.y=p/r,c.setXY(d,y.x,y.y),d++}}for(p=1;p<=n;p++)for(h=1;h<=r;h++){var L=(r+1)*(p-1)+(h-1),A=(r+1)*p+(h-1),O=(r+1)*p+h,M=(r+1)*(p-1)+h;a.setX(v,L),v++,a.setX(v,A),v++,a.setX(v,M),v++,a.setX(v,A),v++,a.setX(v,O),v++,a.setX(v,M),v++}this.setIndex(a),this.addAttribute("position",f),this.addAttribute("normal",l),this.addAttribute("uv",c)},THREE.TorusKnotBufferGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.TorusKnotBufferGeometry.prototype.constructor=THREE.TorusKnotBufferGeometry,THREE.TorusKnotGeometry=function(e,t,n,r,i,s,o){THREE.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:r,p:i,q:s},o!==undefined&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new THREE.TorusKnotBufferGeometry(e,t,n,r,i,s)),this.mergeVertices()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(e,t,n,r,i,s){function H(e,t,n){return u.vertices.push(new THREE.Vector3(e,t,n))-1}THREE.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:n,radialSegments:r,closed:i,taper:s},t=t||64,n=n||1,r=r||8,i=i||!1,s=s||THREE.TubeGeometry.NoTaper;var o=[],u=this,a,f,l,c=t+1,h,p,d,v,m,g,y=new THREE.Vector3,b,w,E,S,x,T,N,C,k,L,A,O,M=new THREE.TubeGeometry.FrenetFrames(e,t,i),_=M.tangents,D=M.normals,P=M.binormals;this.tangents=_,this.normals=D,this.binormals=P;for(b=0;b<c;b++){o[b]=[],h=b/(c-1),g=e.getPointAt(h),a=_[b],f=D[b],l=P[b],d=n*s(h);for(w=0;w<r;w++)p=w/r*2*Math.PI,v=-d*Math.cos(p),m=d*Math.sin(p),y.copy(g),y.x+=v*f.x+m*l.x,y.y+=v*f.y+m*l.y,y.z+=v*f.z+m*l.z,o[b][w]=H(y.x,y.y,y.z)}for(b=0;b<t;b++)for(w=0;w<r;w++)E=i?(b+1)%t:b+1,S=(w+1)%r,x=o[b][w],T=o[E][w],N=o[E][S],C=o[b][S],k=new THREE.Vector2(b/t,w/r),L=new THREE.Vector2((b+1)/t,w/r),A=new THREE.Vector2((b+1)/t,(w+1)/r),O=new THREE.Vector2(b/t,(w+1)/r),this.faces.push(new THREE.Face3(x,T,C)),this.faceVertexUvs[0].push([k,L,O]),this.faces.push(new THREE.Face3(T,N,C)),this.faceVertexUvs[0].push([L.clone(),A,O.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.NoTaper=function(e){return 1},THREE.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},THREE.TubeGeometry.FrenetFrames=function(e,t,n){function g(){s[0]=new THREE.Vector3,o[0]=new THREE.Vector3,c=Number.MAX_VALUE,h=Math.abs(i[0].x),p=Math.abs(i[0].y),d=Math.abs(i[0].z),h<=c&&(c=h,r.set(1,0,0)),p<=c&&(c=p,r.set(0,1,0)),d<=c&&r.set(0,0,1),u.crossVectors(i[0],r).normalize(),s[0].crossVectors(i[0],u),o[0].crossVectors(i[0],s[0])}var r=new THREE.Vector3,i=[],s=[],o=[],u=new THREE.Vector3,a=new THREE.Matrix4,f=t+1,l,c,h,p,d,v,m;this.tangents=i,this.normals=s,this.binormals=o;for(v=0;v<f;v++)m=v/(f-1),i[v]=e.getTangentAt(m),i[v].normalize();g();for(v=1;v<f;v++)s[v]=s[v-1].clone(),o[v]=o[v-1].clone(),u.crossVectors(i[v-1],i[v]),u.length()>Number.EPSILON&&(u.normalize(),l=Math.acos(THREE.Math.clamp(i[v-1].dot(i[v]),-1,1)),s[v].applyMatrix4(a.makeRotationAxis(u,l))),o[v].crossVectors(i[v],s[v]);if(n){l=Math.acos(THREE.Math.clamp(s[0].dot(s[f-1]),-1,1)),l/=f-1,i[0].dot(u.crossVectors(s[0],s[f-1]))>0&&(l=-l);for(v=1;v<f;v++)s[v].applyMatrix4(a.makeRotationAxis(i[v],l*v)),o[v].crossVectors(i[v],s[v])}},THREE.PolyhedronGeometry=function(e,t,n,r){function w(e){var t=e.normalize().clone();t.index=i.vertices.push(t)-1;var n=x(e)/2/Math.PI+.5,r=T(e)/Math.PI+.5;return t.uv=new THREE.Vector2(n,1-r),t}function E(e,t,n){var r=new THREE.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()]);i.faces.push(r),p.copy(e).add(t).add(n).divideScalar(3);var s=x(p);i.faceVertexUvs[0].push([N(e.uv,e,s),N(t.uv,t,s),N(n.uv,n,s)])}function S(e,t){var n=Math.pow(2,t),r=w(i.vertices[e.a]),s=w(i.vertices[e.b]),o=w(i.vertices[e.c]),u=[];for(var a=0;a<=n;a++){u[a]=[];var f=w(r.clone().lerp(o,a/n)),l=w(s.clone().lerp(o,a/n)),c=n-a;for(var h=0;h<=c;h++)h===0&&a===n?u[a][h]=f:u[a][h]=w(f.clone().lerp(l,h/c))}for(var a=0;a<n;a++)for(var h=0;h<2*(n-a)-1;h++){var p=Math.floor(h/2);h%2===0?E(u[a][p+1],u[a+1][p],u[a][p]):E(u[a][p+1],u[a+1][p+1],u[a+1][p])}}function x(e){return Math.atan2(e.z,-e.x)}function T(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function N(e,t,n){return n<0&&e.x===1&&(e=new THREE.Vector2(e.x-1,e.y)),t.x===0&&t.z===0&&(e=new THREE.Vector2(n/2/Math.PI+.5,e.y)),e.clone()}THREE.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;var i=this;for(var s=0,o=e.length;s<o;s+=3)w(new THREE.Vector3(e[s],e[s+1],e[s+2]));var u=this.vertices,a=[];for(var s=0,f=0,o=t.length;s<o;s+=3,f++){var l=u[t[s]],c=u[t[s+1]],h=u[t[s+2]];a[f]=new THREE.Face3(l.index,c.index,h.index,[l.clone(),c.clone(),h.clone()])}var p=new THREE.Vector3;for(var s=0,o=a.length;s<o;s++)S(a[s],r);for(var s=0,o=this.faceVertexUvs[0].length;s<o;s++){var d=this.faceVertexUvs[0][s],v=d[0].x,m=d[1].x,g=d[2].x,y=Math.max(v,m,g),b=Math.min(v,m,g);y>.9&&b<.1&&(v<.2&&(d[0].x+=1),m<.2&&(d[1].x+=1),g<.2&&(d[2].x+=1))}for(var s=0,o=this.vertices.length;s<o;s++)this.vertices[s].multiplyScalar(n);this.mergeVertices(),this.computeFaceNormals
(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,n)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.DodecahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,i=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],s=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];THREE.PolyhedronGeometry.call(this,i,s,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}},THREE.DodecahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.DodecahedronGeometry.prototype.constructor=THREE.DodecahedronGeometry,THREE.IcosahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];THREE.PolyhedronGeometry.call(this,r,i,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},THREE.IcosahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];THREE.PolyhedronGeometry.call(this,n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},THREE.OctahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];THREE.PolyhedronGeometry.call(this,n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},THREE.TetrahedronGeometry.prototype=Object.create(THREE.PolyhedronGeometry.prototype),THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(e,t,n){THREE.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};var r=this.vertices,i=this.faces,s=this.faceVertexUvs[0],o,u,a,f,l,c=t+1;for(o=0;o<=n;o++){l=o/n;for(u=0;u<=t;u++)f=u/t,a=e(f,l),r.push(a)}var h,p,d,v,m,g,y,b;for(o=0;o<n;o++)for(u=0;u<t;u++)h=o*c+u,p=o*c+u+1,d=(o+1)*c+u+1,v=(o+1)*c+u,m=new THREE.Vector2(u/t,o/n),g=new THREE.Vector2((u+1)/t,o/n),y=new THREE.Vector2((u+1)/t,(o+1)/n),b=new THREE.Vector2(u/t,(o+1)/n),i.push(new THREE.Face3(h,p,v)),s.push([m,g,b]),i.push(new THREE.Face3(p,d,v)),s.push([g.clone(),y,b.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.WireframeGeometry=function(e){function r(e,t){return e-t}THREE.BufferGeometry.call(this);var t=[0,0],n={},i=["a","b","c"];if(e instanceof THREE.Geometry){var s=e.vertices,o=e.faces,u=0,a=new Uint32Array(6*o.length);for(var f=0,l=o.length;f<l;f++){var c=o[f];for(var h=0;h<3;h++){t[0]=c[i[h]],t[1]=c[i[(h+1)%3]],t.sort(r);var p=t.toString();n[p]===undefined&&(a[2*u]=t[0],a[2*u+1]=t[1],n[p]=!0,u++)}}var d=new Float32Array(u*2*3);for(var f=0,l=u;f<l;f++)for(var h=0;h<2;h++){var v=s[a[2*f+h]],m=6*f+3*h;d[m+0]=v.x,d[m+1]=v.y,d[m+2]=v.z}this.addAttribute("position",new THREE.BufferAttribute(d,3))}else if(e instanceof THREE.BufferGeometry)if(e.index!==null){var g=e.index.array,s=e.attributes.position,y=e.groups,u=0;y.length===0&&e.addGroup(0,g.length);var a=new Uint32Array(2*g.length);for(var b=0,w=y.length;b<w;++b){var E=y[b],S=E.start,x=E.count;for(var f=S,T=S+x;f<T;f+=3)for(var h=0;h<3;h++){t[0]=g[f+h],t[1]=g[f+(h+1)%3],t.sort(r);var p=t.toString();n[p]===undefined&&(a[2*u]=t[0],a[2*u+1]=t[1],n[p]=!0,u++)}}var d=new Float32Array(u*2*3);for(var f=0,l=u;f<l;f++)for(var h=0;h<2;h++){var m=6*f+3*h,N=a[2*f+h];d[m+0]=s.getX(N),d[m+1]=s.getY(N),d[m+2]=s.getZ(N)}this.addAttribute("position",new THREE.BufferAttribute(d,3))}else{var s=e.attributes.position.array,u=s.length/3,C=u/3,d=new Float32Array(u*2*3);for(var f=0,l=C;f<l;f++)for(var h=0;h<3;h++){var m=18*f+6*h,k=9*f+3*h;d[m+0]=s[k],d[m+1]=s[k+1],d[m+2]=s[k+2];var N=9*f+3*((h+1)%3);d[m+3]=s[N],d[m+4]=s[N+1],d[m+5]=s[N+2]}this.addAttribute("position",new THREE.BufferAttribute(d,3))}},THREE.WireframeGeometry.prototype=Object.create(THREE.BufferGeometry.prototype),THREE.WireframeGeometry.prototype.constructor=THREE.WireframeGeometry,THREE.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),n=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),r=new THREE.BufferGeometry;r.addAttribute("position",new THREE.BufferAttribute(t,3)),r.addAttribute("color",new THREE.BufferAttribute(n,3));var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,r,i)},THREE.AxisHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(){var e=new THREE.BufferGeometry;e.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,1,0],3));var t=new THREE.CylinderBufferGeometry(0,.5,1,5,1);return t.translate(0,-0.5,0),function(r,i,s,o,u,a){THREE.Object3D.call(this),o===undefined&&(o=16776960),s===undefined&&(s=1),u===undefined&&(u=.2*s),a===undefined&&(a=.2*u),this.position.copy(i),this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new THREE.Mesh(t,new THREE.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(r),this.setLength(s,u,a)}}(),THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(){var e=new THREE.Vector3,t;return function(r){r.y>.99999?this.quaternion.set(0,0,0,1):r.y<-0.99999?this.quaternion.set(1,0,0,0):(e.set(r.z,0,-r.x).normalize(),t=Math.acos(r.y),this.quaternion.setFromAxisAngle(e,t))}}(),THREE.ArrowHelper.prototype.setLength=function(e,t,n){t===undefined&&(t=.2*e),n===undefined&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)},THREE.BoxHelper=function(e,t){t===undefined&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),r=new Float32Array(24),i=new THREE.BufferGeometry;i.setIndex(new THREE.BufferAttribute(n,1)),i.addAttribute("position",new THREE.BufferAttribute(r,3)),THREE.LineSegments.call(this,i,new THREE.LineBasicMaterial({color:t})),e!==undefined&&this.update(e)},THREE.BoxHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.BoxHelper.prototype.constructor=THREE.BoxHelper,THREE.BoxHelper.prototype.update=function(){var e=new THREE.Box3;return function(n){n instanceof THREE.Box3?e.copy(n):e.setFromObject(n);if(e.isEmpty())return;var r=e.min,i=e.max,s=this.geometry.attributes.position,o=s.array;o[0]=i.x,o[1]=i.y,o[2]=i.z,o[3]=r.x,o[4]=i.y,o[5]=i.z,o[6]=r.x,o[7]=r.y,o[8]=i.z,o[9]=i.x,o[10]=r.y,o[11]=i.z,o[12]=i.x,o[13]=i.y,o[14]=r.z,o[15]=r.x,o[16]=i.y,o[17]=r.z,o[18]=r.x,o[19]=r.y,o[20]=r.z,o[21]=i.x,o[22]=r.y,o[23]=r.z,s.needsUpdate=!0,this.geometry.computeBoundingSphere()}}(),THREE.BoundingBoxHelper=function(e,t){var n=t!==undefined?t:8947848;this.object=e,this.box=new THREE.Box3,THREE.Mesh.call(this,new THREE.BoxGeometry(1,1,1),new THREE.MeshBasicMaterial({color:n,wireframe:!0}))},THREE.BoundingBoxHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.BoundingBoxHelper.prototype.constructor=THREE.BoundingBoxHelper,THREE.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},THREE.CameraHelper=function(e){function f(e,t,n){l(e,n),l(t,n)}function l(e,n){t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(n)),r[e]===undefined&&(r[e]=[]),r[e].push(t.vertices.length-1)}var t=new THREE.Geometry,n=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),r={},i=16755200,s=16711680,o=43775,u=16777215,a=3355443;f("n1","n2",i),f("n2","n4",i),f("n4","n3",i),f("n3","n1",i),f("f1","f2",i),f("f2","f4",i),f("f4","f3",i),f("f3","f1",i),f("n1","f1",i),f("n2","f2",i),f("n3","f3",i),f("n4","f4",i),f("p","n1",s),f("p","n2",s),f("p","n3",s),f("p","n4",s),f("u1","u2",o),f("u2","u3",o),f("u3","u1",o),f("c","t",u),f("p","c",a),f("cn1","cn2",a),f("cn3","cn4",a),f("cf1","cf2",a),f("cf3","cf4",a),THREE.LineSegments.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=r,this.update()},THREE.CameraHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function i(i,s,o,u){n.set(s,o,u).unproject(r);var a=t[i];if(a!==undefined)for(var f=0,l=a.length;f<l;f++)e.vertices[a[f]].copy(n)}var e,t,n=new THREE.Vector3,r=new THREE.Camera;return function(){e=this.geometry,t=this.pointMap;var s=1,o=1;r.projectionMatrix.copy(this.camera.projectionMatrix),i("c",0,0,-1),i("t",0,0,1),i("n1",-s,-o,-1),i("n2",s,-o,-1),i("n3",-s,o,-1),i("n4",s,o,-1),i("f1",-s,-o,1),i("f2",s,-o,1),i("f3",-s,o,1),i("f4",s,o,1),i("u1",s*.7,o*1.1,-1),i("u2",-s*.7,o*1.1,-1),i("u3",0,o*2,-1),i("cf1",-s,0,1),i("cf2",s,0,1),i("cf3",0,-o,1),i("cf4",0,o,1),i("cn1",-s,0,-1),i("cn2",s,0,-1),i("cn3",0,-o,-1),i("cn4",0,o,-1),e.verticesNeedUpdate=!0}}(),THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t===undefined&&(t=1);var n=new THREE.BufferGeometry;n.addAttribute("position",new THREE.Float32Attribute([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var r=new THREE.LineBasicMaterial({fog:!1});this.add(new THREE.Line(n,r)),n=new THREE.BufferGeometry,n.addAttribute("position",new THREE.Float32Attribute([0,0,0,0,0,1],3)),this.add(new THREE.Line(n,r)),this.update()},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.constructor=THREE.DirectionalLightHelper,THREE.DirectionalLightHelper.prototype.dispose=function(){var e=this.children[0],t=this.children[1];e.geometry.dispose(),e.material.dispose(),t.geometry.dispose(),t.material.dispose()},THREE.DirectionalLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e);var i=this.children[0],s=this.children[1];i.lookAt(n),i.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),s.lookAt(n),s.scale.z=n.length()}}(),THREE.EdgesHelper=function(e,t,n){var r=t!==undefined?t:16777215;THREE.LineSegments.call(this,new THREE.EdgesGeometry(e.geometry,n),new THREE.LineBasicMaterial({color:r})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.EdgesHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.EdgesHelper.prototype.constructor=THREE.EdgesHelper,THREE.FaceNormalsHelper=function(e,t,n,r){this.object=e,this.size=t!==undefined?t:1;var i=n!==undefined?n:16776960,s=r!==undefined?r:1,o=0,u=this.object.geometry;u instanceof THREE.Geometry?o=u.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var a=new THREE.BufferGeometry,f=new THREE.Float32Attribute(o*2*3,3);a.addAttribute("position",f),THREE.LineSegments.call(this,a,new THREE.LineBasicMaterial({color:i,linewidth:s})),this.matrixAutoUpdate=!1,this.update()},THREE.FaceNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.FaceNormalsHelper.prototype.constructor=THREE.FaceNormalsHelper,THREE.FaceNormalsHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Matrix3;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var i=this.object.matrixWorld,s=this.geometry.attributes.position,o=this.object.geometry,u=o.vertices,a=o.faces,f=0;for(var l=0,c=a.length;l<c;l++){var h=a[l],p=h.normal;e.copy(u[h.a]).add(u[h.b]).add(u[h.c]).divideScalar(3).applyMatrix4(i),t.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),s.setXYZ(f,e.x,e.y,e.z),f+=1,s.setXYZ(f,t.x,t.y,t.z),f+=1}return s.needsUpdate=!0,this}}(),THREE.GridHelper=function(e,t,n,r){t=t||1,n=new THREE.Color(n!==undefined?n:4473924),r=new THREE.Color(r!==undefined?r:8947848);var i=t/2,s=e*2/t,o=[],u=[];for(var a=0,f=0,l=-e;a<=t;a++,l+=s){o.push(-e,0,l,e,0,l),o.push(l,0,-e,l,0,e);var c=a===i?n:r;c.toArray(u,f),f+=3,c.toArray(u,f),f+=3,c.toArray(u,f),f+=3,c.toArray(u,f),f+=3}var h=new THREE.BufferGeometry;h.addAttribute("position",new THREE.Float32Attribute(o,3)),h.addAttribute("color",new THREE.Float32Attribute(u,3));var p=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.LineSegments.call(this,h,p)},THREE.GridHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.GridHelper.prototype.constructor=THREE.GridHelper,THREE.GridHelper.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},THREE.HemisphereLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new THREE.Color,new THREE.Color];var n=new THREE.SphereGeometry(t,4,2);n.rotateX(-Math.PI/2);for(var r=0,i=8;r<i;r++)n.faces[r].color=this.colors[r<4?0:1];var s=new THREE.MeshBasicMaterial({vertexColors:THREE.FaceColors,wireframe:!0});this.lightSphere=new THREE.Mesh(n,s),this.add(this.lightSphere),this.update()},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.constructor=THREE.HemisphereLightHelper,THREE.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},THREE.HemisphereLightHelper.prototype.update=function(){var e=new THREE.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),THREE.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var n=new THREE.SphereBufferGeometry(t,4,2),r=new THREE.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),THREE.Mesh.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},THREE.PointLightHelper.prototype=Object.create(THREE.Mesh.prototype),THREE.PointLightHelper.prototype.constructor=THREE.PointLightHelper,THREE.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},THREE.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},THREE.SkeletonHelper=function(e){this.bones=this.getBoneList(e);var t=new THREE.Geometry;for(var n=0;n<this.bones.length;n++){var r=this.bones[n];r.parent instanceof THREE.Bone&&(t.vertices.push(new THREE.Vector3),t.vertices.push(new THREE.Vector3),t.colors.push(new THREE.Color(0,0,1)),t.colors.push(new THREE.Color(0,1,0)))}t.dynamic=!0;var i=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});THREE.LineSegments.call(this,t,i),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},THREE.SkeletonHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.SkeletonHelper.prototype.constructor=THREE.SkeletonHelper,THREE.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof THREE.Bone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,this.getBoneList(e.children[n]));return t},THREE.SkeletonHelper.prototype.update=function(){var e=this.geometry,t=(new THREE.Matrix4).getInverse(this.root.matrixWorld),n=new THREE.Matrix4,r=0;for(var i=0;i<this.bones.length;i++){var s=this.bones[i];s.parent instanceof THREE.Bone&&(n.multiplyMatrices(t,s.matrixWorld),e.vertices[r].setFromMatrixPosition(n),n.multiplyMatrices(t,s.parent.matrixWorld),e.vertices[r+1].setFromMatrixPosition(n),r+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},THREE.SpotLightHelper=function(e){THREE.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new THREE.BufferGeometry,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var r=0,i=1,s=32;r<s;r++,i++){var o=r/s*Math.PI*2,u=i/s*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(u),Math.sin(u),1)}t.addAttribute("position",new THREE.Float32Attribute(n,3));var a=new THREE.LineBasicMaterial({fog:!1});this.cone=new THREE.LineSegments(t,a),this.add(this.cone),this.update()},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.constructor=THREE.SpotLightHelper,THREE.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},THREE.SpotLightHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3;return function(){var r=this.light.distance?this.light.distance:1e3,i=r*Math.tan(this.light.angle);this.cone.scale.set(i,i,r),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),THREE.VertexNormalsHelper=function(e,t,n,r){this.object=e,this.size=t!==undefined?t:1;var i=n!==undefined?n:16711680,s=r!==undefined?r:1,o=0,u=this.object.geometry;u instanceof THREE.Geometry?o=u.faces.length*3:u instanceof THREE.BufferGeometry&&(o=u.attributes.normal.count);var a=new THREE.BufferGeometry,f=new THREE.Float32Attribute(o*2*3,3);a.addAttribute("position",f),THREE.LineSegments.call(this,a,new THREE.LineBasicMaterial({color:i,linewidth:s})),this.matrixAutoUpdate=!1,this.update()},THREE.VertexNormalsHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.VertexNormalsHelper.prototype.constructor=THREE.VertexNormalsHelper,THREE.VertexNormalsHelper.prototype.update=function(){var e=new THREE.Vector3,t=new THREE.Vector3,n=new THREE.Matrix3;return function(){var i=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var s=this.object.matrixWorld,o=this.geometry.attributes.position,u=this.object.geometry;if(u instanceof THREE.Geometry){var a=u.vertices,f=u.faces,l=0;for(var c=0,h=f.length;c<h;c++){var p=f[c];for(var d=0,v=p.vertexNormals.length;d<v;d++){var m=a[p[i[d]]],g=p.vertexNormals[d];e.copy(m).applyMatrix4(s),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(l,e.x,e.y,e.z),l+=1,o.setXYZ(l,t.x,t.y,t.z),l+=1}}}else if(u instanceof THREE.BufferGeometry){var y=u.attributes.position,b=u.attributes.normal,l=0;for(var d=0,v=y.count;d<v;d++)e.set(y.getX(d),y.getY(d),y.getZ(d)).applyMatrix4(s),t.set(b.getX(d),b.getY(d),b.getZ(d)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(l,e.x,e.y,e.z),l+=1,o.setXYZ(l,t.x,t.y,t.z),l+=1}return o.needsUpdate=!0,this}}(),THREE.WireframeHelper=function(e,t){var n=t!==undefined?t:16777215;THREE.LineSegments.call(this,new THREE.WireframeGeometry(e.geometry),new THREE.LineBasicMaterial({color:n})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},THREE.WireframeHelper.prototype=Object.create(THREE.LineSegments.prototype),THREE.WireframeHelper.prototype.constructor=THREE.WireframeHelper,THREE.ImmediateRenderObject=function(e){THREE.Object3D.call(this),this.material=e,this.render=function(e){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,r="__default",i=0,s=n-1,o=n/1;this.createAnimation(r,i,s,o),this.setAnimationWeight(r,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){var i={start:t,end:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){var t=/([a-z]+)_?(\d+)/i,n,r={},i=this.geometry;for(var s=0,o=i.morphTargets.length;s<o;s++){var u=i.morphTargets[s],a=u.name.match(t);if(a&&a.length>1){var f=a[1];r[f]||(r[f]={start:Infinity,end:-Infinity});var l=r[f];s<l.start&&(l.start=s),s>l.end&&(l.end=s),n||(n=f)}}for(var f in r){var l=r[f];this.createAnimation(f,l.start,l.end,e)}this.firstAnimation=n},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var r=this.animationsList[t];if(!r.active)continue;var i=r.duration/r.length;r.time+=r.direction*e;if(r.mirroredLoop){if(r.time>r.duration||r.time<0)r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)}else r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration);var s=r.start+THREE.Math.clamp(Math.floor(r.time/i),0,r.length-1),o=r.weight;s!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*o,this.morphTargetInfluences[s]=0,r.lastFrame=r.currentFrame,r.currentFrame=s);var u=r.time%i/i;r.directionBackwards&&(u=1-u),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=u*o,this.morphTargetInfluences[r.lastFrame]=(1-u)*o):this.morphTargetInfluences[r.currentFrame]=o}};